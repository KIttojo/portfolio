{"ast":null,"code":"'use strict';\n\nvar tough = require('tough-cookie');\n\nvar Store = tough.Store;\nvar permuteDomain = tough.permuteDomain;\nvar permutePath = tough.permutePath;\n\nvar util = require('util');\n\nvar fs = require('fs');\n\nfunction FileCookieStore(filePath) {\n  Store.call(this);\n  this.idx = {}; // idx is memory cache\n\n  this.filePath = filePath;\n  var self = this;\n  loadFromFile(this.filePath, function (dataJson) {\n    if (dataJson) self.idx = dataJson;\n  });\n}\n\nutil.inherits(FileCookieStore, Store);\nexports.FileCookieStore = FileCookieStore;\nFileCookieStore.prototype.idx = null;\nFileCookieStore.prototype.synchronous = true; // force a default depth:\n\nFileCookieStore.prototype.inspect = function () {\n  return \"{ idx: \" + util.inspect(this.idx, false, 2) + ' }';\n};\n\nFileCookieStore.prototype.findCookie = function (domain, path, key, cb) {\n  if (!this.idx[domain]) {\n    return cb(null, undefined);\n  }\n\n  if (!this.idx[domain][path]) {\n    return cb(null, undefined);\n  }\n\n  return cb(null, this.idx[domain][path][key] || null);\n};\n\nFileCookieStore.prototype.findCookies = function (domain, path, cb) {\n  var results = [];\n\n  if (!domain) {\n    return cb(null, []);\n  }\n\n  var pathMatcher;\n\n  if (!path) {\n    // null or '/' means \"all paths\"\n    pathMatcher = function matchAll(domainIndex) {\n      for (var curPath in domainIndex) {\n        var pathIndex = domainIndex[curPath];\n\n        for (var key in pathIndex) {\n          results.push(pathIndex[key]);\n        }\n      }\n    };\n  } else if (path === '/') {\n    pathMatcher = function matchSlash(domainIndex) {\n      var pathIndex = domainIndex['/'];\n\n      if (!pathIndex) {\n        return;\n      }\n\n      for (var key in pathIndex) {\n        results.push(pathIndex[key]);\n      }\n    };\n  } else {\n    var paths = permutePath(path) || [path];\n\n    pathMatcher = function matchRFC(domainIndex) {\n      paths.forEach(function (curPath) {\n        var pathIndex = domainIndex[curPath];\n\n        if (!pathIndex) {\n          return;\n        }\n\n        for (var key in pathIndex) {\n          results.push(pathIndex[key]);\n        }\n      });\n    };\n  }\n\n  var domains = permuteDomain(domain) || [domain];\n  var idx = this.idx;\n  domains.forEach(function (curDomain) {\n    var domainIndex = idx[curDomain];\n\n    if (!domainIndex) {\n      return;\n    }\n\n    pathMatcher(domainIndex);\n  });\n  cb(null, results);\n};\n\nFileCookieStore.prototype.putCookie = function (cookie, cb) {\n  if (!this.idx[cookie.domain]) {\n    this.idx[cookie.domain] = {};\n  }\n\n  if (!this.idx[cookie.domain][cookie.path]) {\n    this.idx[cookie.domain][cookie.path] = {};\n  }\n\n  this.idx[cookie.domain][cookie.path][cookie.key] = cookie;\n  saveToFile(this.filePath, this.idx, function () {\n    cb(null);\n  });\n};\n\nFileCookieStore.prototype.updateCookie = function updateCookie(oldCookie, newCookie, cb) {\n  // updateCookie() may avoid updating cookies that are identical.  For example,\n  // lastAccessed may not be important to some stores and an equality\n  // comparison could exclude that field.\n  this.putCookie(newCookie, cb);\n};\n\nFileCookieStore.prototype.removeCookie = function removeCookie(domain, path, key, cb) {\n  if (this.idx[domain] && this.idx[domain][path] && this.idx[domain][path][key]) {\n    delete this.idx[domain][path][key];\n  }\n\n  saveToFile(this.filePath, this.idx, function () {\n    cb(null);\n  });\n};\n\nFileCookieStore.prototype.removeCookies = function removeCookies(domain, path, cb) {\n  if (this.idx[domain]) {\n    if (path) {\n      delete this.idx[domain][path];\n    } else {\n      delete this.idx[domain];\n    }\n  }\n\n  saveToFile(this.filePath, this.idx, function () {\n    return cb(null);\n  });\n};\n\nFileCookieStore.prototype.checkExpired = function (domain, path, key) {\n  var domains = [];\n  if (domain) domains = [domain];else domains = Object.keys(this.idx);\n  var isExpired = false;\n  var that = this;\n  domains.forEach(function (d) {\n    var paths = [];\n    if (path) paths = [path];else paths = Object.keys(that.idx[d]);\n    paths.forEach(function (p) {\n      var keys = [];\n      if (key) keys = [key];else keys = Object.keys(that.idx[d][p]);\n      keys.forEach(function (k) {\n        var expiresDate = that.idx[d][p][k].expires;\n        var now = new Date();\n\n        if (isFinite(expiresDate)) {\n          if (expiresDate - now < 30 * 60) isExpired = true;\n        }\n      });\n    });\n  });\n  return isExpired;\n};\n\nFileCookieStore.prototype.isExpired = function () {\n  return this.checkExpired(null, null, null);\n};\n\nFileCookieStore.prototype.isEmpty = function () {\n  return isEmptyObject(this.idx);\n};\n\nFileCookieStore.prototype.getAllCookies = function (cb) {\n  var cookies = [];\n  var idx = this.idx;\n  var domains = Object.keys(idx);\n  domains.forEach(function (domain) {\n    var paths = Object.keys(idx[domain]);\n    paths.forEach(function (path) {\n      var keys = Object.keys(idx[domain][path]);\n      keys.forEach(function (key) {\n        if (key !== null) {\n          cookies.push(idx[domain][path][key]);\n        }\n      });\n    });\n  }); // Sort by creationIndex so deserializing retains the creation order.\n  // When implementing your own store, this SHOULD retain the order too\n\n  cookies.sort(function (a, b) {\n    return (a.creationIndex || 0) - (b.creationIndex || 0);\n  });\n  cb(null, cookies);\n}; // Avoid parallel writes to the same file\n\n\nvar _writing_ = {};\n\nfunction writeFile(filePath, data, done) {\n  var dataJson = JSON.stringify(data);\n  var wo = {\n    done: done,\n    next: []\n  };\n  _writing_[filePath] = wo;\n  fs.writeFile(filePath, dataJson, function (err) {\n    // If we have new pending writes, execute them now\n    if (wo.next.length) {\n      writeFile(filePath, wo.data, wo.next);\n    } else {\n      delete _writing_[filePath];\n    }\n\n    if (err) throw err;\n    wo.done.forEach(function (cb) {\n      cb();\n    });\n  });\n}\n\nfunction saveToFile(filePath, data, cb) {\n  var wo = _writing_[filePath]; // If not writing to this file, start writing right now\n\n  if (!wo) {\n    writeFile(filePath, data, [cb]);\n  } // If writing in process, add to pending\n  else {\n      wo.data = data;\n      wo.next.push(cb);\n    }\n}\n\nfunction loadFromFile(filePath, cb) {\n  if (fs.existsSync(filePath)) {\n    var data = fs.readFileSync(filePath, 'utf8');\n  } else {\n    var data = null;\n  }\n\n  if (data) {\n    try {\n      var dataJson = JSON.parse(data);\n    } catch (e) {\n      throw new Error('Could not parse cookie file ' + filePath + '. Please ensure it is not corrupted.');\n    }\n  } else {\n    var dataJson = null;\n  }\n\n  for (var domainName in dataJson) {\n    for (var pathName in dataJson[domainName]) {\n      for (var cookieName in dataJson[domainName][pathName]) {\n        dataJson[domainName][pathName][cookieName] = tough.fromJSON(JSON.stringify(dataJson[domainName][pathName][cookieName]));\n      }\n    }\n  }\n\n  cb(dataJson);\n}\n\nfunction isEmptyObject(obj) {\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n\n  return true;\n}","map":{"version":3,"sources":["C:/Users/denis/Desktop/archive/reactApp/node_modules/tough-cookie-file-store/lib/file-store.js"],"names":["tough","require","Store","permuteDomain","permutePath","util","fs","FileCookieStore","filePath","call","idx","self","loadFromFile","dataJson","inherits","exports","prototype","synchronous","inspect","findCookie","domain","path","key","cb","undefined","findCookies","results","pathMatcher","matchAll","domainIndex","curPath","pathIndex","push","matchSlash","paths","matchRFC","forEach","domains","curDomain","putCookie","cookie","saveToFile","updateCookie","oldCookie","newCookie","removeCookie","removeCookies","checkExpired","Object","keys","isExpired","that","d","p","k","expiresDate","expires","now","Date","isFinite","isEmpty","isEmptyObject","getAllCookies","cookies","sort","a","b","creationIndex","_writing_","writeFile","data","done","JSON","stringify","wo","next","err","length","existsSync","readFileSync","parse","e","Error","domainName","pathName","cookieName","fromJSON","obj","hasOwnProperty"],"mappings":"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","sourcesContent":["'use strict';\r\nvar tough = require('tough-cookie');\r\nvar Store = tough.Store;\r\nvar permuteDomain = tough.permuteDomain;\r\nvar permutePath = tough.permutePath;\r\nvar util = require('util');\r\nvar fs = require('fs');\r\n\r\nfunction FileCookieStore(filePath) {\r\n    Store.call(this);\r\n    this.idx = {}; // idx is memory cache\r\n    this.filePath = filePath;\r\n    var self = this;\r\n    loadFromFile(this.filePath, function(dataJson) {\r\n        if (dataJson)\r\n            self.idx = dataJson;\r\n    })\r\n}\r\n\r\nutil.inherits(FileCookieStore, Store);\r\nexports.FileCookieStore = FileCookieStore;\r\nFileCookieStore.prototype.idx = null;\r\nFileCookieStore.prototype.synchronous = true;\r\n\r\n// force a default depth:\r\nFileCookieStore.prototype.inspect = function() {\r\n    return \"{ idx: \" + util.inspect(this.idx, false, 2) + ' }';\r\n};\r\n\r\nFileCookieStore.prototype.findCookie = function(domain, path, key, cb) {\r\n    if (!this.idx[domain]) {\r\n        return cb(null, undefined);\r\n    }\r\n    if (!this.idx[domain][path]) {\r\n        return cb(null, undefined);\r\n    }\r\n    return cb(null, this.idx[domain][path][key] || null);\r\n};\r\n\r\nFileCookieStore.prototype.findCookies = function(domain, path, cb) {\r\n    var results = [];\r\n    if (!domain) {\r\n        return cb(null, []);\r\n    }\r\n\r\n    var pathMatcher;\r\n    if (!path) {\r\n        // null or '/' means \"all paths\"\r\n        pathMatcher = function matchAll(domainIndex) {\r\n            for (var curPath in domainIndex) {\r\n                var pathIndex = domainIndex[curPath];\r\n                for (var key in pathIndex) {\r\n                    results.push(pathIndex[key]);\r\n                }\r\n            }\r\n        };\r\n\r\n    } else if (path === '/') {\r\n        pathMatcher = function matchSlash(domainIndex) {\r\n            var pathIndex = domainIndex['/'];\r\n            if (!pathIndex) {\r\n                return;\r\n            }\r\n            for (var key in pathIndex) {\r\n                results.push(pathIndex[key]);\r\n            }\r\n        };\r\n\r\n    } else {\r\n        var paths = permutePath(path) || [path];\r\n        pathMatcher = function matchRFC(domainIndex) {\r\n            paths.forEach(function(curPath) {\r\n                var pathIndex = domainIndex[curPath];\r\n                if (!pathIndex) {\r\n                    return;\r\n                }\r\n                for (var key in pathIndex) {\r\n                    results.push(pathIndex[key]);\r\n                }\r\n            });\r\n        };\r\n    }\r\n\r\n    var domains = permuteDomain(domain) || [domain];\r\n    var idx = this.idx;\r\n    domains.forEach(function(curDomain) {\r\n        var domainIndex = idx[curDomain];\r\n        if (!domainIndex) {\r\n            return;\r\n        }\r\n        pathMatcher(domainIndex);\r\n    });\r\n\r\n    cb(null, results);\r\n};\r\n\r\nFileCookieStore.prototype.putCookie = function(cookie, cb) {\r\n    if (!this.idx[cookie.domain]) {\r\n        this.idx[cookie.domain] = {};\r\n    }\r\n    if (!this.idx[cookie.domain][cookie.path]) {\r\n        this.idx[cookie.domain][cookie.path] = {};\r\n    }\r\n    this.idx[cookie.domain][cookie.path][cookie.key] = cookie;\r\n    saveToFile(this.filePath, this.idx, function() {\r\n        cb(null);\r\n    });\r\n};\r\n\r\nFileCookieStore.prototype.updateCookie = function updateCookie(oldCookie, newCookie, cb) {\r\n    // updateCookie() may avoid updating cookies that are identical.  For example,\r\n    // lastAccessed may not be important to some stores and an equality\r\n    // comparison could exclude that field.\r\n    this.putCookie(newCookie, cb);\r\n};\r\n\r\nFileCookieStore.prototype.removeCookie = function removeCookie(domain, path, key, cb) {\r\n    if (this.idx[domain] && this.idx[domain][path] && this.idx[domain][path][key]) {\r\n        delete this.idx[domain][path][key];\r\n    }\r\n    saveToFile(this.filePath, this.idx, function() {\r\n        cb(null);\r\n    });\r\n};\r\n\r\nFileCookieStore.prototype.removeCookies = function removeCookies(domain, path, cb) {\r\n    if (this.idx[domain]) {\r\n        if (path) {\r\n            delete this.idx[domain][path];\r\n        } else {\r\n            delete this.idx[domain];\r\n        }\r\n    }\r\n    saveToFile(this.filePath, this.idx, function() {\r\n        return cb(null);\r\n    });\r\n};\r\n\r\nFileCookieStore.prototype.checkExpired = function(domain, path, key) {\r\n    var domains = []\r\n    if (domain) domains = [domain]\r\n    else domains = Object.keys(this.idx)\r\n    var isExpired = false\r\n    var that = this\r\n    domains.forEach(function(d) {\r\n        var paths = []\r\n        if (path) paths = [path]\r\n        else paths = Object.keys(that.idx[d])\r\n        paths.forEach(function(p) {\r\n            var keys = []\r\n            if (key) keys = [key]\r\n            else keys = Object.keys(that.idx[d][p])\r\n            keys.forEach(function(k) {\r\n                var expiresDate = that.idx[d][p][k].expires\r\n                var now = new Date()\r\n                if (isFinite(expiresDate)) {\r\n                    if (expiresDate - now < 30 * 60)\r\n                        isExpired = true\r\n                }\r\n            })\r\n        })\r\n    })\r\n    return isExpired\r\n}\r\n\r\nFileCookieStore.prototype.isExpired = function() {\r\n    return this.checkExpired(null, null, null)\r\n}\r\n\r\nFileCookieStore.prototype.isEmpty = function (){\r\n    return isEmptyObject(this.idx);\r\n}\r\n\r\nFileCookieStore.prototype.getAllCookies = function(cb) {\r\n  var cookies = [];\r\n  var idx = this.idx;\r\n \r\n  var domains = Object.keys(idx);\r\n  domains.forEach(function(domain) {\r\n    var paths = Object.keys(idx[domain]);\r\n    paths.forEach(function(path) {\r\n      var keys = Object.keys(idx[domain][path]);\r\n      keys.forEach(function(key) {\r\n        if (key !== null) {\r\n          cookies.push(idx[domain][path][key]);\r\n        }\r\n      });\r\n    });\r\n  });\r\n \r\n  // Sort by creationIndex so deserializing retains the creation order.\r\n  // When implementing your own store, this SHOULD retain the order too\r\n  cookies.sort(function(a,b) {\r\n    return (a.creationIndex||0) - (b.creationIndex||0);\r\n  });\r\n \r\n  cb(null, cookies);\r\n};\r\n\r\n// Avoid parallel writes to the same file\r\nvar _writing_ = {};\r\nfunction writeFile(filePath, data, done) {\r\n    var dataJson = JSON.stringify(data);\r\n    var wo = { done: done, next: [] };\r\n    _writing_[filePath] = wo;\r\n    fs.writeFile(filePath, dataJson, function (err) {\r\n        // If we have new pending writes, execute them now\r\n        if ( wo.next.length ) {\r\n            writeFile(filePath, wo.data, wo.next);\r\n        }\r\n        else {\r\n            delete _writing_[filePath];\r\n        }\r\n        if (err) throw err;\r\n        wo.done.forEach(function(cb) {\r\n            cb();\r\n        });\r\n    });\r\n}\r\n\r\nfunction saveToFile(filePath, data, cb) {\r\n    var wo = _writing_[filePath];\r\n    // If not writing to this file, start writing right now\r\n    if ( !wo ) {\r\n        writeFile(filePath, data, [cb]);\r\n    }\r\n    // If writing in process, add to pending\r\n    else {\r\n        wo.data = data;\r\n        wo.next.push(cb);\r\n    }\r\n}\r\n\r\nfunction loadFromFile(filePath, cb) {\r\n    if (fs.existsSync(filePath)) {\r\n        var data = fs.readFileSync(filePath, 'utf8');\r\n    } else {\r\n        var data = null;\r\n    }\r\n\r\n    if (data) {\r\n        try {\r\n            var dataJson = JSON.parse(data);\r\n        } catch (e) {\r\n            throw new Error('Could not parse cookie file ' + filePath + '. Please ensure it is not corrupted.');\r\n        }\r\n    } else {\r\n        var dataJson = null;\r\n    }\r\n\r\n    for (var domainName in dataJson) {\r\n        for (var pathName in dataJson[domainName]) {\r\n            for (var cookieName in dataJson[domainName][pathName]) {\r\n                dataJson[domainName][pathName][cookieName] = tough.fromJSON(JSON.stringify(dataJson[domainName][pathName][cookieName]));\r\n            }\r\n        }\r\n    }\r\n    cb(dataJson);\r\n}\r\n\r\nfunction isEmptyObject(obj) {\r\n    for (var key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}"]},"metadata":{},"sourceType":"script"}