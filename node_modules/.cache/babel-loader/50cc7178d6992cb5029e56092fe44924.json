{"ast":null,"code":"'use strict';\n\nvar EventEmitter = require('events');\n\nvar https = require('https');\n\nvar querystring = require('querystring');\n\nvar path = require('path');\n\nvar qs = require('qs');\n\nvar fetch = require('node-fetch');\n\nvar url = require('url');\n\nvar fs = require('fs');\n\nvar mime = require('mime-types');\n\nvar FormData = require('form-data');\n\nvar http = require('http');\n\nvar bodyParser = require('body-parser');\n\nvar WS = require('ws');\n\nvar encoding = require('encoding');\n\nvar CookieStore = require('tough-cookie-file-store');\n\nvar toughCookie = require('tough-cookie');\n\nvar ProxyAgent = require('proxy-agent');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar EventEmitter__default = /*#__PURE__*/_interopDefaultLegacy(EventEmitter);\n\nvar https__default = /*#__PURE__*/_interopDefaultLegacy(https);\n\nvar querystring__default = /*#__PURE__*/_interopDefaultLegacy(querystring);\n\nvar path__default = /*#__PURE__*/_interopDefaultLegacy(path);\n\nvar qs__default = /*#__PURE__*/_interopDefaultLegacy(qs);\n\nvar fetch__default = /*#__PURE__*/_interopDefaultLegacy(fetch);\n\nvar fs__default = /*#__PURE__*/_interopDefaultLegacy(fs);\n\nvar mime__default = /*#__PURE__*/_interopDefaultLegacy(mime);\n\nvar FormData__default = /*#__PURE__*/_interopDefaultLegacy(FormData);\n\nvar http__default = /*#__PURE__*/_interopDefaultLegacy(http);\n\nvar bodyParser__default = /*#__PURE__*/_interopDefaultLegacy(bodyParser);\n\nvar WS__default = /*#__PURE__*/_interopDefaultLegacy(WS);\n\nvar encoding__default = /*#__PURE__*/_interopDefaultLegacy(encoding);\n\nvar CookieStore__default = /*#__PURE__*/_interopDefaultLegacy(CookieStore);\n\nvar ProxyAgent__default = /*#__PURE__*/_interopDefaultLegacy(ProxyAgent);\n\nclass EventContext {\n  constructor(type, event = {}) {\n    this.type = type;\n    this.moment = new Date();\n    this.event = event;\n  }\n\n  toString() {\n    return `[${this.moment.toString()}]\\n${this.message ? this.message : JSON.stringify(this, null, '  ')}`;\n  }\n\n}\n\nclass Debugger extends EventEmitter__default['default'] {\n  constructor(...props) {\n    super(...props);\n    this._onRequest = this._onRequest.bind(this);\n    this._onResponse = this._onResponse.bind(this);\n    this.on(Debugger._toRaw(Debugger.EVENT_RESPONSE_TYPE), this._onResponse);\n    this.on(Debugger._toRaw(Debugger.EVENT_REQUEST_TYPE), this._onRequest);\n  }\n\n  static _toUpper(s) {\n    return String(s).replace(/^(.*){0,1}/, x => x[0].toUpperCase() + x.slice(1));\n  }\n\n  static _toRaw(s) {\n    return 'raw' + Debugger._toUpper(s);\n  }\n\n  _onResponse(responseEvent = {}) {\n    return this.emit('response', new EventContext(Debugger.EVENT_RESPONSE_TYPE, responseEvent));\n  }\n\n  _onRequest(requestEvent = {}) {\n    return this.emit('request', new EventContext(Debugger.EVENT_REQUEST_TYPE, requestEvent));\n  }\n\n}\n\nconst EVENT_REQUEST_TYPE = 'request';\nconst EVENT_RESPONSE_TYPE = 'response';\n\nconst VKResponseReturner = function (staticMethods, dataResponse_, returnConstructor) {\n  let response_ = dataResponse_;\n  let res = response_.response;\n  if (res === undefined || res === null) res = response_;\n  let constructorName = res.constructor.name;\n  let Constructor = global[constructorName];\n  if (!Constructor) Constructor = Object;\n\n  class VKResponse extends Constructor {\n    constructor(res) {\n      if ((staticMethods.isString(res) || !isNaN(res) || res instanceof Boolean) && constructorName !== 'Array') {\n        super(res);\n      } else if (Array.isArray(res) || constructorName === 'Array') {\n        super(...res);\n        res.forEach((a, i) => {\n          this[i] = a;\n        });\n      } else if (staticMethods.isObject(res)) {\n        super();\n        let self = this;\n        let _props = {\n          response: res\n        };\n        let canChanged = ['response'];\n\n        for (let prop in _props) {\n          let settings = {\n            value: _props[prop]\n          };\n\n          if (canChanged.indexOf(prop) !== -1) {\n            settings.configurable = true;\n          }\n\n          Object.defineProperty(self, prop, settings);\n        } // Use session data with methods\n\n\n        for (let prop in self.response) {\n          Object.defineProperty(self, prop, {\n            enumerable: true,\n            configurable: true,\n            value: self.response[prop]\n          });\n        }\n      } else {\n        super(res);\n      }\n\n      return this;\n    }\n\n    getFullResponse() {\n      return response_;\n    }\n\n  }\n\n  if (returnConstructor) {\n    return VKResponse;\n  }\n\n  return new VKResponse(res);\n};\n\nconst PROTOCOL = 'https';\nconst BASE_DOMAIN = 'vk.com';\nvar configuration = {\n  api_v: '5.101',\n  reauth: false,\n  save_session: true,\n  session_file: path__default['default'].join(process.cwd(), './vksession'),\n  PROTOCOL,\n  BASE_DOMAIN,\n  MOBILE_SUBDOMAIN: 'm',\n  BASE_CALL_URL: PROTOCOL + '://' + 'api.' + BASE_DOMAIN + '/method/',\n  BASE_OAUTH_URL: PROTOCOL + '://' + 'oauth.' + BASE_DOMAIN + '/',\n  ANDROID_CLIENT_ID: '2274003',\n  ANDROID_CLIENT_SECRET: 'hHbZxrka2uZ6jB1inYsH',\n  HTTP_CLIENT: {\n    USER_AGENT: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',\n    COOKIE_PATH: path__default['default'].join(process.cwd(), '.evk-cookies.json')\n  },\n  DEFAULT_USER_AGENT_STATIC: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',\n  DEFAULT_UTILS: {},\n  DEFAULT_USER_AGENT: 'VKAndroidApp/6.2-5112 (Android 6.0; SDK 23; arm64-v8a; alps Razar; ru; 1280x720)'\n}; // This is an object error for know: code, message, desciption and other information from stack\n\nclass VKResponseError extends Error {\n  constructor(message, code = 0, request = {}, banInfo = null) {\n    super(message); // generate message\n\n    this.error_code = code;\n    this.request_params = request;\n    this.error_msg = message || code;\n    this.name = 'VKResponseError';\n    this.ban_info = banInfo;\n  }\n\n}\n\nclass StaticMethods {\n  constructor(settings = {}, evkParams = {}) {\n    this.params = evkParams;\n    this.settings = settings;\n\n    if (evkParams.mode.name === 'highload') {\n      this._requests = {};\n      this.canComplete = true;\n      evkParams.mode.timeout = Number(evkParams.mode.timeout);\n\n      if (!evkParams.mode.timeout) {\n        evkParams.mode.timeout = 15;\n      }\n    }\n  }\n\n  static createExecute(method = '', params = {}) {\n    params.v = undefined;\n    params.lang = undefined;\n    return `API.${method}(${JSON.stringify(params)})`;\n  }\n\n  static isString(n) {\n    return Object.prototype.toString.call(n) === '[object String]';\n  }\n\n  static isObject(n) {\n    return Object.prototype.toString.call(n) === '[object Object]';\n  }\n\n  static checkJSONErrors(vkr, reject) {\n    let self = this;\n\n    try {\n      vkr = Object.prototype.toString.call(vkr) === '[object Object]' ? vkr : JSON.parse(vkr);\n      let err = self.checkErrors(vkr);\n\n      if (err) {\n        if (typeof err === 'string') {\n          // new error\n          err = new Error(err);\n        }\n\n        reject(err);\n        return false;\n      }\n\n      return VKResponseReturner(self, vkr);\n    } catch (e) {\n      if (e.name === 'SyntaxError') {\n        let err = new Error('Server sent not a json object (' + vkr + ')');\n        return reject(err);\n      }\n\n      return reject(new Error(e));\n    }\n  }\n\n  static urlencode(object = {}) {\n    let self = this;\n    return Object.keys(object).map(prop => prop + '=' + (self.isObject(object[prop]) ? encodeURIComponent(JSON.stringify(object[prop])) : encodeURIComponent(object[prop]))).join('&');\n  }\n\n  static checkErrors(vkr) {\n    try {\n      if (vkr.error) {\n        if (vkr.error === 'need_captcha' || vkr.error.error_code === 14) {\n          return JSON.stringify(vkr);\n        } else if (vkr.error === 'need_validation') {\n          if (vkr.ban_info) {\n            return vkr.error_description;\n          } else {\n            let type = 'sms';\n\n            if (vkr.validation_type.match('app')) {\n              type = 'app';\n            }\n\n            return {\n              error: `Please, enter your ${type} code in code parameter!`,\n              error_code: vkr.error,\n              validation_type: vkr.validation_type,\n              validation_sid: vkr.validation_sid,\n              redirect_uri: vkr.redirect_uri\n            };\n          }\n        } else if (vkr.error.error_code === 17) {\n          return {\n            redirect_uri: vkr.error.redirect_uri,\n            error: vkr.error.error_msg,\n            error_code: vkr.error.error_code\n          };\n        }\n\n        if (vkr.error.error_msg) {\n          return new VKResponseError(vkr.error.error_msg, vkr.error.error_code, vkr.error.request_params, vkr.error.ban_info);\n        } else if (vkr.error.message) {\n          return new VKResponseError(vkr.error.message, vkr.error.code, vkr.error.params, vkr.error.ban_info);\n        } else {\n          return new VKResponseError(vkr.error_description ? vkr.error_description : vkr.error, vkr.error_code ? vkr.error_code : vkr.error, {}, vkr.ban_info);\n        }\n      }\n    } catch (e) {\n      return e;\n    }\n  }\n\n  static async call(methodName, data = {}, methodType = 'get', debuggerIS = null, Agent, settings = {}) {\n    let self = this;\n    return new Promise((resolve, reject) => {\n      let methodTypeLower = methodType.toString().toLocaleLowerCase();\n\n      if (methodTypeLower !== 'post') {\n        methodType = 'get';\n      }\n\n      if (!methodName) {\n        return reject(new Error('Put method name in your call request!'));\n      }\n\n      if (!data.v) {\n        data.v = configuration.api_v;\n      }\n\n      if (!settings.userAgent) {\n        settings.userAgent = self.params ? configuration.DEFAULT_USER_AGENT : configuration.DEFAULT_USER_AGENT_STATIC;\n      }\n\n      let callParams = {\n        url: configuration.BASE_CALL_URL + methodName\n      };\n      let data2 = Object.assign({}, data);\n\n      if (methodType === 'post') {\n        // prepare post request\n        callParams.agent = Agent;\n        callParams.body = qs__default['default'].stringify(data);\n        callParams.headers = {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          'User-agent': settings.userAgent\n        };\n\n        if (settings.debug) {\n          settings.debug(EVENT_REQUEST_TYPE, {\n            url: callParams.url,\n            method: 'POST',\n            query: data,\n            section: 'vk.call'\n          });\n        }\n      }\n\n      if (debuggerIS) {\n        try {\n          debuggerIS.push('fullRequest', callParams);\n        } catch (e) {\n          return reject(new Error('No have a complite debuggerIS'));\n        }\n      }\n\n      if (methodType === 'get') {\n        data = querystring__default['default'].stringify(data);\n        let options = {\n          host: 'api.' + configuration.BASE_DOMAIN,\n          agent: Agent,\n          path: '/method/' + methodName + '?' + data,\n          headers: {\n            'User-Agent': settings.userAgent\n          }\n        };\n\n        if (settings.debug) {\n          settings.debug(EVENT_REQUEST_TYPE, {\n            url: 'https://' + options.host + options.path,\n            method: 'GET',\n            query: data,\n            section: 'vk.call'\n          });\n        }\n\n        let req;\n\n        const abortListener = () => {\n          req.abort();\n          let err = new Error('Request aborted!');\n          err.code = 'aborted';\n          err.type = err.code;\n          return reject(err);\n        };\n\n        req = https__default['default'].get(options, res => {\n          if (settings.signal) {\n            settings.signal.removeEventListener('abort', abortListener);\n          }\n\n          let vkr = '';\n          res.setEncoding('utf8');\n          res.on('data', chu => {\n            vkr += chu;\n          });\n          res.on('end', () => {\n            return parseResponse(vkr);\n          });\n        }).on('error', e => {\n          if (settings.signal) {\n            settings.signal.removeEventListener('abort', abortListener);\n          }\n\n          try {\n            reject(e);\n          } catch (err) {\n            throw e;\n          }\n        });\n\n        if (settings.signal) {\n          settings.signal.addEventListener('abort', abortListener);\n        }\n      } else {\n        callParams.method = 'POST';\n        callParams.signal = settings.signal;\n        fetch__default['default'](callParams.url, callParams).then(async res => {\n          res = await res.text();\n\n          if (debuggerIS) {\n            try {\n              debuggerIS.push('response', res);\n            } catch (e) {}\n          }\n\n          if (settings.debug) {\n            settings.debug(EVENT_RESPONSE_TYPE, {\n              body: res,\n              section: 'vk.call'\n            });\n          }\n\n          try {\n            res = JSON.parse(res);\n          } catch (e) {\n            e.body = res;\n            e.type = 'invalid-json';\n            return reject(e);\n          }\n\n          return parseResponse(res);\n        }).catch(e => {\n          if (e.type === 'aborted') e.code = e.type;\n          reject(e);\n        });\n      }\n\n      async function parseResponse(vkr) {\n        if (vkr) {\n          if (debuggerIS) {\n            try {\n              debuggerIS.push('response', vkr);\n            } catch (e) {}\n          }\n\n          if (settings.debug) {\n            settings.debug(EVENT_RESPONSE_TYPE, {\n              body: vkr,\n              section: 'vk.call'\n            });\n          }\n\n          let json = self.checkJSONErrors(vkr, reject);\n\n          if (json) {\n            json.queryData = data2;\n            return resolve(json);\n          } else {\n            return reject(new Error(\"JSON is not valid... oor i don't know\"));\n          }\n        } else {\n          return reject(new Error(`Empty response ${vkr}`));\n        }\n      }\n    });\n  }\n\n  static randomId(peerId = 0) {\n    return parseInt(new Date().getTime() + '' + peerId + '' + Math.floor(Math.random() * 10000), 10);\n  }\n\n  async _completeExecute(token = '', Agent, settings) {\n    if (!token) throw new Error('Unused token');\n    let requests = this._requests[token];\n    if (!requests.stack) throw new Error('Unknow error');\n    let execCode;\n    let execs = [];\n    let execsData = [];\n    let stack = [...requests.stack];\n    requests.stack = [];\n    this.canComplete = true;\n    stack.forEach(requestExec => {\n      execs.push(requestExec.exec);\n      execsData.push(requestExec.data);\n    });\n    execCode = `return [${execs.join(',')}];`;\n    let data = {\n      access_token: token,\n      v: this.params.api_v,\n      code: execCode\n    };\n    if (this.params.lang !== 'undefined') data.lang = this.params.lang;\n    StaticMethods.call('execute', data, 'post', null, Agent, settings).then(vkr => {\n      let vkrFull = vkr.getFullResponse();\n      let errorIndex = 0;\n      vkr.forEach((val, i) => {\n        let req = stack[i];\n\n        if (val === false) {\n          if (vkrFull.execute_errors) {\n            let err = vkrFull.execute_errors[errorIndex];\n\n            if (err && execs[i].match(err.method)) {\n              // \"API.messages.send()\".match(\"messages.send\")\n              err = new VKResponseError(err.error_msg, err.error_code, execsData[i].data, err.ban_info);\n              return req.reject(err);\n            }\n          }\n\n          let err = new Error('Error occured in execute method');\n          err.response = val;\n          err.request = req;\n          req.reject(err);\n          errorIndex += 1;\n        } else {\n          let vkr = VKResponseReturner(StaticMethods, val);\n          req.resolve(vkr);\n        }\n      });\n    }).catch(err => {\n      let req = stack[stack.length - 1];\n      err.highload = {\n        stack,\n        settings,\n        data\n      };\n      req.reject(err);\n    });\n  }\n\n  async initHighLoadRequest(method, data, type, debuggerIS, Agent) {\n    let self = this;\n    return new Promise((resolve, reject) => {\n      // disable custom version and language in execute methods\n      data.v = undefined;\n      data.lang = undefined;\n      data = JSON.parse(JSON.stringify(data));\n      let accessToken = data.access_token;\n      data.access_token = undefined;\n      let requests = self._requests[accessToken];\n\n      if (!requests) {\n        requests = self._requests[accessToken] = {\n          stack: [],\n          timeoutId: 0\n        };\n      }\n\n      if (requests.timeoutId) {\n        clearTimeout(requests.timeoutId);\n      }\n\n      requests.stack.push({\n        exec: self.createExecute(method, data),\n        data: {\n          method: method,\n          data: data,\n          token: accessToken\n        },\n        resolve,\n        reject\n      });\n\n      function complete() {\n        if (self.canComplete) {\n          self.canComplete = false;\n\n          self._completeExecute(accessToken, Agent, self.settings);\n        }\n      }\n\n      if (requests.stack.length === 25) {\n        complete();\n        return;\n      }\n\n      requests.timeoutId = setTimeout(function () {\n        complete();\n      }, self.params.mode.timeout);\n    });\n  }\n\n  createExecute() {\n    return StaticMethods.createExecute(...arguments);\n  }\n\n  async call() {\n    if (this.params.mode.name === 'highload' && arguments[0] !== 'execute') {\n      return this.initHighLoadRequest(...arguments);\n    }\n\n    return StaticMethods.call(...arguments, this.settings);\n  }\n\n}\n\nlet stack = [];\n\nclass RequestsDebugger extends EventEmitter__default['default'] {\n  // Push to debugger\n  async push(type = 'response', data) {\n    let self = this;\n    let logData = {\n      type: type.toString(),\n      data: data\n    };\n    stack.splice(0, 1);\n    stack.push(logData);\n    self.emit('push', logData);\n    return stack.length - 1;\n  } // Get last log from stack\n\n\n  lastLog() {\n    return stack[stack.length - 1];\n  }\n\n}\n\nclass EasyVKUploader {\n  constructor(vk) {\n    let self = this;\n    self._vk = vk;\n  }\n  /*\n   *\n   *  Function for upload file from other server only by fileUrl\n   *\n   */\n\n\n  async uploadFetchedFile(url, fileUrl, fieldName = 'file', paramsUpload = {}) {\n    return new Promise((resolve, reject) => {\n      if (!url || !StaticMethods.isString(url)) {\n        return reject(this._vk._error('is_not_string', {\n          parameter: 'url',\n          method: 'uploadFetchedFile',\n          format: 'http(s)://www.domain.example.com/path?request=get'\n        }));\n      }\n\n      if (!fileUrl || !StaticMethods.isString(fileUrl) && !StaticMethods.isObject(fileUrl)) {\n        return reject(this._vk._error('is_not_string', {\n          parameter: 'fileUrl',\n          method: 'uploadFetchedFile',\n          format: 'https://vk.com/images/community_100.png'\n        }));\n      }\n\n      if (fieldName) {\n        if (!StaticMethods.isString(fieldName)) {\n          return reject(this._vk._error('is_not_string', {\n            parameter: 'fieldName',\n            method: 'uploadFetchedFile',\n            required: false\n          }));\n        }\n      }\n\n      if (!StaticMethods.isObject(paramsUpload)) {\n        paramsUpload = {};\n      }\n\n      if (StaticMethods.isString(fileUrl)) {\n        fileUrl = {\n          url: fileUrl\n        };\n      }\n\n      let fetchingFileUrl = fileUrl.url;\n      let filename = fileUrl.name || fetchingFileUrl.split('/').pop().split('#')[0].split('?')[0];\n\n      if (!filename) {\n        return reject(this._vk._error('is_not_string', {\n          parameter: 'fileUrl.name',\n          method: 'uploadFile',\n          format: 'example.jpeg or example.rar'\n        }));\n      }\n\n      return fetch__default['default'](fetchingFileUrl, {\n        agent: this._agent\n      }).then(async res => {\n        let buff = await res.buffer();\n        let form = new FormData__default['default']();\n        filename = filename || fieldName + '.' + mime__default['default'].extension(res.headers.get('content-type') || 'text/plain');\n        form.append(fieldName, buff, {\n          filename\n        });\n        return fetch__default['default'](url, {\n          method: 'POST',\n          body: form,\n          agent: this._agent\n        }).then(async response => {\n          let vkr = await response.json();\n\n          if (vkr) {\n            if (paramsUpload.custom) {\n              return resolve(vkr);\n            } else {\n              let json = StaticMethods.checkJSONErrors(vkr, reject);\n\n              if (json) {\n                return resolve(vkr);\n              } else {\n                return reject(this._vk._error('invalid_response', {\n                  response: response\n                }));\n              }\n            }\n          } else {\n            return reject(this._vk._error('empty_response', {\n              response: response\n            }));\n          }\n        });\n      });\n    });\n  }\n  /*\n   *\n   *  Function for upload file from local machine\n   *\n   */\n\n\n  async uploadFile(url, filePath, fieldName = 'file', paramsUpload = {}) {\n    let self = this;\n    return new Promise((resolve, reject) => {\n      if (!url || !StaticMethods.isString(url)) {\n        return reject(self._vk._error('is_not_string', {\n          parameter: 'url',\n          method: 'uploadFile',\n          format: 'http(s)://www.domain.example.com/path?request=get'\n        }));\n      }\n\n      if (!filePath || !StaticMethods.isString(filePath)) {\n        if (!(filePath instanceof fs__default['default'].ReadStream)) {\n          return reject(self._vk._error('is_not_string', {\n            parameter: 'filePath',\n            method: 'uploadFile',\n            format: path__default['default'].join(__dirname, '..', 'example', 'path')\n          }));\n        }\n      }\n\n      if (fieldName) {\n        if (!StaticMethods.isString(fieldName)) {\n          return reject(self._vk._error('is_not_string', {\n            parameter: 'fieldName',\n            method: 'uploadFile',\n            required: false\n          }));\n        }\n      }\n\n      if (!StaticMethods.isObject(paramsUpload)) {\n        paramsUpload = {};\n      }\n\n      let stream, data;\n      stream = filePath instanceof fs__default['default'].ReadStream ? filePath : fs__default['default'].createReadStream(filePath);\n      data = new FormData__default['default']();\n      Object.keys(paramsUpload).forEach(param => {\n        if (param !== fieldName) {\n          data.append(param, paramsUpload[param]);\n        }\n      });\n      stream.on('error', error => {\n        return reject(new Error(error));\n      });\n      stream.on('open', () => {\n        data.append(fieldName, stream);\n        return fetch__default['default'](url, {\n          method: 'POST',\n          body: data,\n          agent: self._agent,\n          headers: { ...data.getHeaders()\n          }\n        }).then(async response => {\n          let vkr = await response.json();\n\n          if (vkr) {\n            if (data.custom) {\n              return resolve(vkr);\n            } else {\n              let json = StaticMethods.checkJSONErrors(vkr, reject);\n\n              if (json) {\n                return resolve(vkr);\n              } else {\n                return reject(self._vk._error('invalid_response', {\n                  response: response\n                }));\n              }\n            }\n          } else {\n            return reject(self._vk._error('empty_response', {\n              response: response\n            }));\n          }\n        }).catch(reject);\n      });\n    });\n  }\n\n  async upload({\n    getUrlMethod,\n    saveMethod,\n    file,\n    getUrlParams = {},\n    saveParams = {},\n    uploadParams = {},\n    isWeb = false,\n    fieldName = 'file',\n    uploadUrlField = 'upload_url'\n  }, returnAll = false) {\n    return this.getUploadURL(getUrlMethod, getUrlParams, true).then(({\n      vkr\n    }) => {\n      let url = vkr[uploadUrlField];\n      let uploadMethod = isWeb ? 'uploadFetchedFile' : 'uploadFile';\n      return this[uploadMethod](url, file, fieldName, uploadParams).then(vkr => {\n        return this._vk.call(saveMethod, Object.assign(saveParams, vkr));\n      });\n    });\n  }\n\n  async getUploadURL(methodName, params = {}, returnAll = false) {\n    let self = this;\n    return new Promise((resolve, reject) => {\n      if (!StaticMethods.isObject(params)) {\n        return reject(self._vk._error('is_not_object', {\n          parameter: 'params',\n          method: 'getUploadURL'\n        }));\n      }\n\n      self._vk.call(methodName, params).then(vkr => {\n        if (vkr.upload_url) {\n          if (returnAll) {\n            return resolve({\n              url: vkr,\n              vkr: vkr\n            });\n          } else {\n            return resolve(vkr.upload_url);\n          }\n        } else {\n          return reject(self._vk._error('upload_url_error', {\n            response: vkr\n          }));\n        }\n      }, reject);\n    });\n  }\n\n}\n\nclass MiddlewaresMechanism {\n  constructor(instance = Object) {\n    // this.instance = instance;\n    let self = this;\n    self.middleWares = [async data => {\n      let next = data.next;\n      data.next = undefined;\n      await next(data);\n    }];\n\n    instance.use = function (middleWare = null, rejectMiddleware = Function) {\n      if (middleWare && typeof middleWare === 'function') {\n        self.middleWares.push(async p => {\n          let next = p.next;\n          return new Promise((resolve, reject) => {\n            middleWare(p).then(resNext => {\n              if (resNext) return resolve(p);\n              p.next = undefined;\n              return resolve(p);\n            }).catch(async e => {\n              if (rejectMiddleware && typeof rejectMiddleware === 'function') {\n                rejectMiddleware(e);\n              } else {\n                console.log(e);\n              }\n\n              return resolve(await next());\n            });\n          });\n        });\n      }\n\n      return this;\n    };\n  }\n\n  async run(thread = {}) {\n    let self = this;\n    let setupedMiddleWare = 0;\n    let context = {};\n    context.next = next;\n    context.thread = thread;\n\n    async function next() {\n      let changedThread = context.thread; // Call to next middleware\n\n      setupedMiddleWare += 1;\n\n      for (let prop in changedThread) {\n        if (context.thread[prop] === undefined) {\n          // if it was deleted by middleware, not changed\n          context.thread[prop] = changedThread[prop]; // need add deleted property\n        }\n      } // so, now we can use changed data in this new middleware\n\n\n      context.next = next;\n\n      if (self.middleWares[setupedMiddleWare]) {\n        let res = await self.middleWares[setupedMiddleWare](context); // console.log('Res from ', setupedMiddleWare)\n\n        if (!res) return context;\n        return res;\n      } else {\n        return context;\n      }\n    }\n\n    if (self.middleWares.length) {\n      let res = await self.middleWares[setupedMiddleWare](context);\n\n      if (typeof res !== 'object' || !res) {\n        res = {};\n      }\n\n      for (let prop in context.thread) {\n        if (res[prop] === undefined) {\n          res[prop] = context.thread[prop];\n        }\n      }\n\n      return res;\n    }\n\n    return thread;\n  }\n\n}\n\nclass AbortSignal extends EventEmitter__default['default'] {\n  constructor() {\n    super();\n    this.aborted = false;\n  }\n\n  addEventListener(...args) {\n    return this.on(...args);\n  }\n\n  removeEventListener(...args) {\n    this.removeListener(...args);\n    return this;\n  }\n\n}\n\nclass AbortController {\n  constructor() {\n    this.signal = new AbortSignal();\n  }\n\n  async abort() {\n    this.signal.aborted = true;\n    return this.signal.emit('abort');\n  }\n\n}\n\nclass LongPollConnection extends EventEmitter__default['default'] {\n  constructor(lpSettings, vk) {\n    super();\n    let self = this;\n    self.config = lpSettings;\n    self._vk = vk;\n    self.userListeners = {};\n    self.abortController = new AbortController();\n    self.supportEventTypes = {\n      '4': 'message',\n      '8': 'friendOnline',\n      '9': 'friendOffline',\n      '51': 'editChat',\n      '61': 'typeInDialog',\n      '62': 'typeInChat',\n      '3': 'changeFlags'\n    };\n    self._middlewaresController = new MiddlewaresMechanism(self);\n    init();\n\n    async function reconnect() {\n      return self._vk.call('messages.getLongPollServer', self.config.userConfig.forGetLongPollServer).then(vkr => {\n        self.config.longpollServer = vkr.server;\n        self.config.longpollTs = vkr.ts;\n        self.config.longpollKey = vkr.key;\n        return init(); // reconnect with new parameters\n      }).catch(err => {\n        self.emit('reconnectError', new Error(err));\n      });\n    }\n\n    async function init() {\n      let server, forLongPollServer, _w;\n\n      let httpsPref = 'https://';\n\n      if (self.config.longpollServer.substr(0, httpsPref.length) !== httpsPref) {\n        self.config.longpollServer = httpsPref + self.config.longpollServer;\n      }\n\n      server = `${self.config.longpollServer}`;\n      forLongPollServer = {};\n      _w = null;\n      forLongPollServer.act = 'a_check';\n      forLongPollServer.key = self.config.longpollKey;\n      forLongPollServer.ts = self.config.longpollTs;\n      forLongPollServer.mode = self.config.userConfig.forLongPollServer.mode;\n      forLongPollServer.version = self.config.userConfig.forLongPollServer.version;\n      forLongPollServer.wait = self.config.userConfig.forLongPollServer.wait;\n\n      if (isNaN(forLongPollServer.mode)) {\n        forLongPollServer.mode = 8 | 2;\n      }\n\n      if (isNaN(forLongPollServer.version)) {\n        forLongPollServer.version = '2';\n      }\n\n      _w = Number(forLongPollServer.wait);\n      let params = {\n        timeout: _w * 1000 + 1000 * 3,\n        headers: {\n          'connection': 'keep-alive',\n          'content-type': 'application/x-www-form-urlencoded'\n        },\n        agent: self._vk.agent,\n        method: 'GET',\n        signal: self.abortController.signal\n      };\n      server = server + '?' + qs__default['default'].stringify(forLongPollServer);\n\n      self._debug({\n        type: 'longPollParamsQuery',\n        data: params\n      });\n\n      self._vk.debug(EVENT_REQUEST_TYPE, {\n        url: server,\n        query: forLongPollServer,\n        method: 'GET',\n        section: 'longpoll'\n      });\n\n      self.lpConnection = fetch__default['default'](server, params).catch(e => {\n        return reconnect();\n      }).then(async res => {\n        if (!res) return false;\n        if (!res.json) return res;\n        res = await res.json();\n\n        if (self._vk._debugger) {\n          try {\n            self._vk._debugger.push('response', res);\n          } catch (e) {// Ignore\n          }\n        }\n\n        self._vk.debug(EVENT_RESPONSE_TYPE, {\n          body: res,\n          section: 'longpoll'\n        });\n\n        self._debug({\n          type: 'pollResponse',\n          data: res\n        });\n\n        let vkr = res;\n\n        if (vkr.ts) {\n          if (vkr.ts) {\n            self.config.longpollTs = vkr.ts;\n          }\n\n          if (vkr.updates && vkr.updates.length) {\n            vkr.updates.forEach((upd, i) => {\n              vkr.updates[i] = {\n                type: upd[0],\n                object: upd\n              };\n            });\n\n            self._middlewaresController.run(vkr).then(() => {\n              self._checkUpdates(vkr.updates);\n            });\n          }\n\n          return init();\n        }\n\n        if (vkr.failed) {\n          if (vkr.failed === 1) {\n            // update ts\n            if (vkr.ts) {\n              self.config.longpollTs = vkr.ts;\n            }\n\n            return init();\n          } else if ([2, 3].indexOf(vkr.failed) !== -1) {\n            // need reconnect\n            self._vk.call('messages.getLongPollServer', self.config.userConfig.forGetLongPollServer).then(vkr => {\n              self.config.longpollServer = vkr.server;\n              self.config.longpollTs = vkr.ts;\n              self.config.longpollKey = vkr.key;\n              return init(); // reconnect with new parameters\n            }).catch(err => {\n              self.emit('reconnectError', new Error(err));\n            });\n          } else {\n            return self.emit('failure', vkr);\n          }\n        }\n\n        if (vkr.error) {\n          self.emit('error', vkr.error);\n          return reconnect();\n        }\n      }).catch(err => {\n        if (err.toString().match('TIMEDOUT') || err.toString().match('ENOENT') || err.toString().match('timeout')) {\n          return reconnect();\n        }\n\n        return self.emit('error', err);\n      });\n    }\n  }\n\n  async _debug() {\n    if (this._debugg) {\n      this._debugg(...arguments);\n    }\n  }\n\n  async _checkUpdates(updates) {\n    let self = this;\n    let len = updates.length;\n\n    for (let updateIndex = 0; updateIndex < len; updateIndex++) {\n      let typeEvent = updates[updateIndex].type.toString();\n      self.emit('update', updates[updateIndex].object);\n\n      if (self.supportEventTypes[typeEvent]) {\n        typeEvent = self.supportEventTypes[typeEvent];\n        self.emit(typeEvent, updates[updateIndex].object);\n      }\n\n      try {\n        if (self.userListeners[typeEvent]) {\n          self.userListeners[typeEvent](updates[updateIndex].object);\n        }\n      } catch (e) {\n        self.emit('error', e);\n      }\n    }\n  }\n  /**\n   *\n   *  If my SDK not support certain event it doesn't mean that my SDK not support it :D\n   *  You can add yours listeners with this function.\n   *\n   *  Docs: vk.com/dev/using_longpoll\n   *\n   *  @param {Number} eventCode number of event which you can find on the docs page\n   *  @param {Function} handler is a handler function\n   *\n   */\n\n\n  async addEventCodeListener(eventCode, handler) {\n    // Only for create new event listeneres (if there are not in default listeners, you can get a code and add it!)\n    let self = this;\n    return new Promise((resolve, reject) => {\n      if (isNaN(eventCode)) {\n        return reject(self._vk._error('is_not_number', {\n          'where': 'LongPoll.addEventCodeListener',\n          'parameter': 'eventCode'\n        }));\n      } else if (Object.prototype.toString.call(handler) !== '[object Function]') {\n        return reject(self._vk._error('is_not_function', {\n          'where': 'LongPoll.addEventCodeListener',\n          'parameter': 'handler'\n        }));\n      } else {\n        eventCode = eventCode.toString();\n\n        if (!self.supportEventTypes[eventCode]) {\n          self.supportEventTypes[eventCode] = eventCode;\n          self.userListeners[eventCode] = handler;\n        } else {\n          return reject(self._vk._error('longpoll_api', {}, 'event_already_have'));\n        }\n      }\n    });\n  }\n\n  async close() {\n    let self = this;\n    return new Promise((resolve, reject) => {\n      if (self.lpConnection) {\n        self.emit('close', {\n          time: new Date().getTime()\n        });\n        return resolve(self.abortController.abort());\n      } else {\n        return reject(self._vk._error('longpoll_api', {}, 'not_connected'));\n      }\n    });\n  }\n\n  debug(debugg) {\n    let self = this;\n    console.warn('[Deprecated method warning] \\nThis method will be deprecated in next releases. Please, use new easyvk.Debugger() and set it up in the easyvk configuration like params.debug = myDebugger');\n\n    if (Object.prototype.toString.call(debugg).match(/function/i)) {\n      self._debugg = debugg;\n    } else {\n      return false;\n    }\n\n    return self;\n  }\n\n}\n\nclass LongPollConnector {\n  constructor(vk) {\n    let self = this; // For the future\n\n    self._vk = vk;\n  }\n\n  async connect(params = {}) {\n    let self = this;\n    return new Promise((resolve, reject) => {\n      if (!StaticMethods.isObject(params)) {\n        return reject(self._vk._error('is_not_object', {\n          'where': 'LongPoll.connect',\n          'parameter': 'params'\n        }));\n      } else {\n        if (params.forGetLongPollServer) {\n          if (!StaticMethods.isObject(params.forGetLongPollServer)) {\n            params.forGetLongPollServer = {};\n          }\n        } else {\n          params.forGetLongPollServer = {};\n        }\n\n        if (params.forLongPollServer) {\n          if (!StaticMethods.isObject(params.forLongPollServer)) {\n            params.forLongPollServer = {};\n          }\n        } else {\n          params.forLongPollServer = {};\n        }\n\n        if (isNaN(params.forGetLongPollServer.lp_version)) {\n          params.forGetLongPollServer.lp_version = '2';\n        }\n\n        if (isNaN(params.forLongPollServer.wait)) {\n          params.forLongPollServer.wait = '25';\n        }\n\n        if (params.forGetLongPollServer.use_ssl !== 0) {\n          params.forGetLongPollServer.use_ssl = 1;\n        }\n\n        self._vk.call('messages.getLongPollServer', params.forGetLongPollServer).then(vkr => {\n          let forLongPoll = {\n            longpollServer: vkr.server,\n            longpollTs: vkr.ts,\n            longpollKey: vkr.key,\n            responseGetServer: vkr,\n            userConfig: params\n          };\n          let con = new LongPollConnection(forLongPoll, self._vk);\n          return resolve(con);\n        }, reject);\n      }\n    });\n  }\n\n}\n/*\n *  It's a Callbakc API module for EasyVK\n *  You can use it\n *\n *  Author: @ciricc\n *  License: MIT\n *\n */\n\n\nclass CallbackAPI extends EventEmitter__default['default'] {\n  constructor(vk) {\n    super();\n    let self = this;\n    self._vk = vk;\n    self._middlewaresController = new MiddlewaresMechanism(self);\n  }\n\n  __initVKRequest(req, res) {\n    let postData, self;\n    self = this;\n    postData = req.body;\n\n    if (!postData.group_id) {\n      res.status(400).send('only vk requests');\n      return self.emit('eventEmpty', {\n        postData: postData,\n        description: \"This request haven't group_id of event. Event name is empty\"\n      });\n    }\n\n    let group = self._cbparams.groups[postData.group_id.toString()];\n\n    if (postData.type === 'confirmation') {\n      if (group) {\n        if (group.secret) {\n          // If you use a password fro menage it\n          if (postData.secret && postData.secret.toString() === group.secret.toString()) {\n            res.status(200).send(group.confirmCode);\n          } else {\n            res.status(400).send('secret error');\n            self.emit('secretError', {\n              postData: postData,\n              description: 'We got the secret key which no uses in your settings! If you want to add secret, set up it in secret parameter!'\n            });\n          }\n        } else {\n          res.status(200).send(group.confirmCode);\n        }\n      } else {\n        res.status(400).send('not have this group');\n        self.emit('confirmationError', {\n          postData: postData,\n          description: \"You don't use this group, becouse we don't know this groupId\"\n        });\n      }\n    } else if (postData.type !== 'confirmation') {\n      if (group) {\n        if (group.secret) {\n          if (postData.secret && postData.secret.toString() !== group.secret.toString()) {\n            res.status(400).send('secret error');\n            self.emit('secretError', {\n              postData: postData,\n              description: 'Secret from request and from your settings are not the same'\n            });\n            return;\n          } else if (!postData.secret) {\n            res.status(400).send('secret error');\n            self.emit('secretError', {\n              postData: postData,\n              description: 'Request has not a secret password, but you use it in this group'\n            });\n            return;\n          }\n        }\n\n        if (postData.type) {\n          self.emit(postData.type, postData);\n          res.status(200).send('ok');\n        } else {\n          res.status(400).send('invalid type event');\n          self.emit('eventEmpty', {\n            postData: postData,\n            description: \"This request haven't type of event. Event name is empty\"\n          });\n        }\n      } else {\n        res.status(400).send('not have this group');\n        self.emit('confirmationError', {\n          postData: postData,\n          description: \"You don't use this group, becouse we don't know this groupId\"\n        });\n      }\n    } else {\n      res.status(400).send('only vk requests');\n    }\n  }\n\n  __init404Error(req, res) {\n    res.status(404).send('Not Found');\n  }\n\n  async __initApp(params = {}) {\n    let self = this;\n    self._cbparams = params;\n    return new Promise((resolve, reject) => {\n      let {\n        app\n      } = params;\n      let server;\n      if (!app) throw new Error('You must have app parameter, like express application');\n      app.use(bodyParser__default['default'].json());\n      app.post(params.path, (req, res) => {\n        self.__initVKRequest(req, res);\n      });\n      app.get(params.path, (req, res) => {\n        self.__init404Error(req, res);\n      });\n      server = http__default['default'].createServer(app);\n      this._server = server;\n      server.listen(params.port || process.env.PORT || 3000);\n      return resolve(true);\n    });\n  }\n\n}\n\nclass CallbackAPIConnector {\n  // Auto constructed by EasyVK\n  constructor(vk) {\n    let self = this;\n    self._vk = vk;\n  }\n  /*\n   *  This function is up your server for listen group events\n   *\n   *  @param {Object} callbackParams - Object for setup your server\n   *  @param {Object[]} [callbackParams.groups] - Array of your groups which you want listen\n   *  @param {String|Number} [callbackParams.groupId] - Group id which you want listen, if you use groups[] then it will be added too\n   *  but you can't no input neither callbackParams.groups nor groupId and etc.\n   *  You need select your group at least one way\n   *  @param {String|Number} [callbackParams.confirmCode] - Your confirmation code. This code will be sended for confirmation query\n   *  @param {String|Number} [callbackParams.secret] - Your secret code for one group, I am recommend you to use it for secure\n   *  @param {String|Number} [callbackParams.port=(process.env.PORT || 3000)] - Port for http server, default is process.env.PORT || 3000\n   *\n   *  If you use many groups, you need separate (spread) groupId, secret and condirmCode parameters on objects in array of groups\n   *  like { groups: [{groupId: ..., secret: ..., confirmCode: ...}, ...] }\n   *\n   *  @return {Promise}\n   *  @promise up your server for listen group events\n   *  @resolve {Object} - Object with web application, CallbackAPI connection object\n   *  and EasyVK parameter:\n   *  {vk: EasyVK, connection: CallbackAPI, web: expressApplication}\n   *  @reject {Error} - express run and up server error\n   *\n   */\n\n\n  async listen(callbackParams = {}) {\n    let self = this;\n    return new Promise((resolve, reject) => {\n      if (callbackParams) {\n        if (!StaticMethods.isObject(callbackParams)) {\n          callbackParams = {};\n        }\n      }\n\n      if (!Array.isArray(callbackParams.groups)) {\n        callbackParams.groups = [];\n      }\n\n      if (!callbackParams.groupId) {\n        if (self._vk.session && self._vk.session.group_id) {\n          callbackParams.groupId = self._vk.session.group_id;\n        }\n      }\n\n      if (callbackParams.groupId) {\n        // If user wants only one group init\n        if (!callbackParams.confirmCode && self._vk.session && self._vk.session.group_id && callbackParams.groupId !== self._vk.session.group_id) {\n          return reject(new Error(\"You don't puted confirmation code\"));\n        }\n\n        callbackParams.groups.push({\n          confirmCode: callbackParams.confirmCode,\n          groupId: callbackParams.groupId\n        });\n\n        if (callbackParams.secret) {\n          callbackParams.groups[callbackParams.groups.length - 1].secret = callbackParams.secret;\n        }\n      }\n\n      if (callbackParams.groups.length === 0) {\n        return reject(new Error('Select a group for listen calls'));\n      } else {\n        let grTemp = {};\n        let registered = [];\n        callbackParams.groups.forEach(async (elem, index) => {\n          let group = callbackParams.groups[index];\n\n          if (!StaticMethods.isObject(group)) {\n            return reject(new Error(`Group settings is not an object (in ${index} index)`));\n          }\n\n          if (!group.groupId) {\n            if (self._vk.session && self._vk.session.group_id) {\n              group.groupId = self._vk.session.group_id;\n            }\n          }\n\n          if (!group.groupId || registered.indexOf(group.groupId) !== -1) {\n            return reject(new Error(`Group id must be (groupId in ${index} index)`));\n          }\n\n          registered.push(group.groupId);\n\n          if (!group.confirmCode) {\n            if (self._vk.session && group.groupId === self._vk.session.group_id) {\n              let confirmToken = await self._vk.call('groups.getCallbackConfirmationCode', {\n                group_id: group.groupId\n              });\n              group.confirmCode = confirmToken.code;\n            }\n          }\n\n          if (!group.confirmCode) {\n            return reject(new Error(`Confirmation code must be (confirmCode in ${index} index)`));\n          } else {\n            grTemp[group.groupId.toString()] = group;\n          }\n        });\n        callbackParams.groups = grTemp;\n      }\n\n      if (!callbackParams.path) {\n        callbackParams.path = '/';\n      }\n\n      let cbserver = new CallbackAPI(self._vk);\n\n      cbserver.__initApp(callbackParams).then(app => {\n        return resolve(cbserver);\n      });\n    });\n  }\n\n}\n\nclass StreamingAPIConnection extends EventEmitter__default['default'] {\n  constructor(vk, session, wsc) {\n    super();\n    let self = this;\n    self._vk = vk;\n    self._session = session;\n    self._wsc = wsc;\n    self._urlHttp = `${configuration.PROTOCOL}://${self._session.server.endpoint}`;\n    self._key = self._session.server.key;\n\n    self.__initWebSocket();\n  }\n\n  __initWebSocket() {\n    let self = this;\n\n    self._wsc.on('error', error => {\n      self.emit('error', new Error(error.toString()));\n    });\n\n    self._wsc.on('message', message => {\n      self.__initMessage(message);\n    });\n\n    self._wsc.on('close', r => {\n      self.emit('failure', `Connection closed ${r ? '(' + r + ')' : ''}`);\n    });\n  }\n\n  __initMessage(msgBody) {\n    var self = this;\n\n    try {\n      let body = JSON.parse(msgBody);\n\n      if (parseInt(body.code) === 100) {\n        self.emit(body.event.event_type, body.event);\n        self.emit('pullEvent', body.event);\n      } else if (body.code === 300) {\n        self.emit('serviceMessage', body.service_message);\n      }\n    } catch (e) {\n      self.emit('error', e);\n    }\n  }\n\n  async close() {\n    let self = this;\n    return new Promise((resolve, reject) => {\n      if (self._wsc) {\n        return resolve(self._wsc.close());\n      } else {\n        return reject(new Error('WebSocket not connected'));\n      }\n    });\n  }\n\n  async __MRHTTPURL(method, json) {\n    return new Promise((resolve, reject) => {\n      method = method.toString().toLocaleLowerCase();\n      let url = `${this._urlHttp}/rules`;\n      json = { ...json,\n        key: this._key\n      };\n      let queryParams = {\n        method: method,\n        body: method === 'get' ? null : JSON.stringify(json),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        agent: this._vk.agent\n      };\n\n      if (this._vk && this._vk.debug) {\n        this._vk.debug(EVENT_REQUEST_TYPE, {\n          url,\n          query: json,\n          section: 'streamingAPI',\n          method: method.toUpperCase()\n        });\n      }\n\n      if (method === 'get') {\n        url = url + '?' + qs__default['default'].stringify(json);\n      } else {\n        url = url + '?key=' + this._key;\n      }\n\n      return fetch__default['default'](url, queryParams).then(async res => {\n        let vkr = await res.json();\n\n        if (this._vk && this._vk._debugger) {\n          try {\n            this._vk._debugger.push('response', vkr);\n          } catch (e) {// Ignore\n          }\n        }\n\n        if (this._vk && this._vk.debug) {\n          this._vk.debug(EVENT_RESPONSE_TYPE, {\n            body: vkr,\n            section: 'streamingAPI'\n          });\n        }\n\n        if (vkr) {\n          let json = StaticMethods.checkJSONErrors(vkr, reject);\n\n          if (json) {\n            return resolve(json);\n          } else {\n            return reject(new Error(\"JSON is not valid... oor i don't know\"));\n          }\n        } else {\n          reject(new Error(`Empty response ${vkr}`));\n        }\n      });\n    });\n  }\n\n  async addRule(tag, rule) {\n    let MRHTTPParams = {\n      'rule': {\n        'value': rule,\n        'tag': tag\n      }\n    };\n    return this.__MRHTTPURL('POST', MRHTTPParams);\n  }\n\n  async deleteRule(tag) {\n    let MRHTTPParams = {\n      'tag': tag\n    };\n    return this.__MRHTTPURL('DELETE', MRHTTPParams);\n  }\n\n  async getRules() {\n    return this.__MRHTTPURL('GET', {});\n  }\n\n  async deleteAllRules() {\n    let self = this;\n    return new Promise((resolve, reject) => {\n      // For begin - get All rules\n      self.getRules().then(rules => {\n        rules = rules.rules;\n        let i = 0;\n\n        function del() {\n          if (i === rules.length) {\n            return resolve(true);\n          }\n\n          let rule = rules[i];\n          self.deleteRule(rule.tag).then(() => {\n            i++;\n            setTimeout(() => {\n              del();\n            }, 600);\n          }, reject);\n        }\n\n        if (rules) {\n          del();\n        } else {\n          return resolve(true);\n        }\n      }, reject);\n    });\n  }\n\n  async initRules(rulesObject = {}, callBackError) {\n    let self = this;\n    return new Promise((resolve, reject) => {\n      if (!StaticMethods.isObject(rulesObject)) {\n        return reject(new Error('rules must be an object'));\n      }\n\n      if (callBackError) {\n        if (Object.prototype.toString.call(callBackError) !== '[object Function]') {\n          return reject(new Error('callBackError must be function'));\n        }\n      } // For begin get all rules and then change/add/delete rules\n\n\n      self.getRules().then(startedRules => {\n        let changedRules, stRulesObject, tags, addedRules, deletedRules;\n        startedRules = startedRules.rules;\n\n        if (!startedRules) {\n          startedRules = [];\n        }\n\n        changedRules = [];\n        addedRules = [];\n        deletedRules = [];\n        stRulesObject = {};\n        tags = [];\n\n        for (let l = 0; l < startedRules.length; l++) {\n          let rule = startedRules[l];\n          stRulesObject[rule.tag] = rule.value;\n        }\n\n        for (let tag in rulesObject) {\n          tags.push(tag);\n        }\n\n        let iN = 0;\n        let i = 0;\n\n        function next() {\n          i++;\n          setTimeout(() => {\n            initRule();\n          }, 400);\n        }\n\n        function initRule() {\n          if (i >= startedRules.length) {\n            return initAddRule();\n          }\n\n          let rule = startedRules[i];\n\n          if (rulesObject[rule.tag]) {\n            // Change rule\n            if (rule.value === rulesObject[rule.tag]) {\n              // No need change\n              next();\n            } else {\n              // Need change it. Delete and it and then add\n              self.deleteRule(rule.tag).then(() => {\n                // Add again\n                self.addRule(rule.tag, rulesObject[rule.tag]).then(() => {\n                  // Success changed\n                  changedRules.push({\n                    tag: rule.tag,\n                    lastValue: rule.value,\n                    newValue: rulesObject[rule.tag]\n                  });\n                  next();\n                }, err => {\n                  if (callBackError) {\n                    callBackError({\n                      where: 'add changes',\n                      rule: rule,\n                      from: 'user_rules',\n                      description: 'Occured error in add method when we tried add rule which was changed',\n                      error: err\n                    });\n                  } else {\n                    throw err;\n                  }\n\n                  next();\n                });\n              }, err => {\n                if (callBackError) {\n                  callBackError({\n                    where: 'delete changes',\n                    rule: rule,\n                    from: 'vk_rules',\n                    description: 'Occured error in delete method when we tried delete rule which was changed',\n                    error: err\n                  });\n                } else {\n                  throw err;\n                }\n\n                next();\n              });\n            }\n          } else {\n            // Delete rule\n            self.deleteRule(rule.tag).then(() => {\n              // Success deleted\n              deletedRules.push({\n                tag: rule.tag,\n                value: rule.value\n              });\n              next();\n            }, err => {\n              if (callBackError) {\n                callBackError({\n                  where: 'delete',\n                  rule: rule,\n                  from: 'vk_rules',\n                  description: 'Occured error in delete method when we tried delete rule which not declared in init object',\n                  error: err\n                });\n              } else {\n                throw err;\n              }\n\n              next();\n            });\n          }\n        }\n\n        initRule();\n\n        function nextAdd() {\n          iN++;\n          setTimeout(() => {\n            initAddRule();\n          }, 400);\n        }\n\n        function initAddRule() {\n          if (iN >= tags.length) {\n            return resolve({\n              changedRules: changedRules,\n              addedRules: addedRules,\n              deletedRules: deletedRules\n            });\n          }\n\n          let rule = tags[iN];\n\n          if (!stRulesObject.hasOwnProperty(tags[iN])) {\n            // Need add new rules\n            self.addRule(tags[iN], rulesObject[tags[iN]]).then(() => {\n              // Success add\n              addedRules.push({\n                tag: tags[iN],\n                value: rulesObject[tags[iN]]\n              });\n              nextAdd();\n            }, err => {\n              if (callBackError) {\n                callBackError({\n                  where: 'add',\n                  rule: rule,\n                  from: 'user_rules',\n                  description: 'Occured error in add method when we tried add rule which not declared in vk rules',\n                  error: err\n                });\n              } else {\n                throw err;\n              }\n\n              nextAdd();\n            });\n          } else {\n            nextAdd();\n          }\n        }\n      }, reject);\n    });\n  }\n\n}\n\nclass StreamingAPIConnector {\n  constructor(vk) {\n    let self = this;\n    self._vk = vk;\n  }\n\n  async connect(applicationParams = {}) {\n    let self = this;\n\n    function initConnect(json = {}) {\n      return new Promise((resolve, reject) => {\n        StaticMethods.call('streaming.getServerUrl', {\n          access_token: json.access_token\n        }).then(vkrURL => {\n          let streamingSession, wsc;\n          streamingSession = {\n            server: vkrURL,\n            client: json\n          };\n          wsc = new WS__default['default'](`wss://${streamingSession.server.endpoint}/stream?key=${streamingSession.server.key}`, {\n            agent: self._vk.agent\n          });\n          wsc.on('open', () => {\n            let _StreamingAPIConnecton = new StreamingAPIConnection(self._vk, streamingSession, wsc);\n\n            return resolve(_StreamingAPIConnecton);\n          });\n        }, reject);\n      });\n    }\n\n    return new Promise((resolve, reject) => {\n      if (applicationParams) {\n        if (!StaticMethods.isObject(applicationParams)) {\n          return reject(new Error('application params must be an objct parameter'));\n        }\n      }\n\n      if (!applicationParams.clientId || !applicationParams.clientSecret) {\n        if (self._vk && self._vk.__credentials_flow_type) {\n          applicationParams.clientId = self._vk.params.client_id;\n          applicationParams.clientSecret = self._vk.params.client_secret;\n        }\n      }\n\n      if (applicationParams.clientId && applicationParams.clientSecret) {\n        if (self._vk && self._vk.__credentials_flow_type) {\n          initConnect(self._vk.session).then(resolve, reject);\n        } else {\n          let getParams = {\n            client_id: applicationParams.clientId,\n            client_secret: applicationParams.clientSecret,\n            grant_type: 'client_credentials'\n          };\n          let url = `${configuration.BASE_OAUTH_URL}access_token?` + qs__default['default'].stringify(getParams);\n\n          if (this._vk && this._vk.debug) {\n            this._vk.debug(EVENT_REQUEST_TYPE, {\n              url,\n              query: getParams,\n              section: 'streamingAPI',\n              method: 'GET'\n            });\n          }\n\n          return fetch__default['default'](url, {\n            agent: self._vk.agent\n          }).then(async res => {\n            let vkr = await res.json();\n\n            if (self._vk && self._vk._debugger) {\n              try {\n                self._vk._debugger.push('response', vkr);\n              } catch (e) {// Ignore\n              }\n            }\n\n            if (this._vk && this._vk.debug) {\n              this._vk.debug(EVENT_RESPONSE_TYPE, {\n                body: vkr,\n                section: 'streamingAPI'\n              });\n            }\n\n            if (vkr) {\n              let json = StaticMethods.checkJSONErrors(vkr, reject);\n\n              if (json) {\n                initConnect(json).then(resolve, reject);\n              } else {\n                return reject(new Error(\"JSON is not valid... oor i don't know\"));\n              }\n            } else {\n              return reject(new Error(`Empty response ${vkr}`));\n            }\n          });\n        }\n      } else {\n        return reject(new Error('clientId and clientSecret not declared'));\n      }\n    });\n  }\n\n}\n\nclass Widgets {\n  // For call to methods an others, standard procedure\n  constructor(vk) {\n    let self = this;\n    self._vk = vk;\n    this.userAgent = 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.84 Safari/537.36';\n  }\n\n  async getLiveViews(videoSourceId = '') {\n    let self = this;\n    return new Promise((resolve, reject) => {\n      if (!videoSourceId || !StaticMethods.isString(videoSourceId)) {\n        return reject(self._vk._error('videoSourceId', {\n          parameter: 'videoSourceId',\n          method: 'widgets.getLiveViews',\n          format: 'need format like -2222_22222 (from url)'\n        }));\n      }\n\n      let headers, alVideoUrl, video, oid, vid, queryParams;\n      headers = {\n        'origin': 'https://vk.com',\n        'referer': `https://vk.com/video?z=video${videoSourceId}`,\n        'user-agent': self._vk.params.user_agent || this.userAgent,\n        'x-requested-with': 'XMLHttpRequest',\n        'content-type': 'application/x-www-form-urlencoded'\n      };\n      alVideoUrl = `${configuration.PROTOCOL}://${configuration.BASE_DOMAIN}/al_video.php`;\n      video = videoSourceId.split('_');\n      oid = video[0];\n      vid = video[1];\n      let form = {\n        'act': 'show',\n        'al': 1,\n        'autoplay': 0,\n        'module': 'videocat',\n        'video': videoSourceId\n      }; // Get specify hash for get permissions to watch\n\n      queryParams = {\n        headers: headers,\n        body: qs__default['default'].stringify(form),\n        encoding: 'binary',\n        agent: self._vk.agent,\n        method: 'POST'\n      };\n\n      self._vk.debug(EVENT_REQUEST_TYPE, {\n        url: alVideoUrl,\n        query: form,\n        method: 'POST',\n        section: 'widgets'\n      });\n\n      return fetch__default['default'](alVideoUrl, queryParams).then(async res => {\n        res = await res.text();\n        res = encoding__default['default'].convert(res, 'utf-8', 'windows-1251').toString();\n\n        if (self._vk._debugger) {\n          try {\n            self._vk._debugger.push('response', res);\n          } catch (e) {// ignore\n          }\n        }\n\n        self._vk.debug(EVENT_RESPONSE_TYPE, {\n          body: res,\n          section: 'widgets'\n        }); // Parsing hash from response body {\"action_hash\" : \"hash\"}\n\n\n        let matCH = String(res).match(/(\"|')action_hash(\"|')(\\s)?:(\\s)?('|\")(.*?)('|\")/i);\n\n        if (matCH) {\n          let hash, getVideoViewsQueryParams;\n          hash = matCH[0].replace(/([\\s':\"])/g, '').replace('action_hash', '');\n          let url = `${alVideoUrl}?act=live_heartbeat`;\n          getVideoViewsQueryParams = {\n            body: `al=1&hash=${hash}&oid=${oid}&user_id=0&vid=${vid}`,\n            encoding: 'binary',\n            // Special\n            headers: headers,\n            agent: self._vk.agent,\n            method: 'POST'\n          }; // Here is magic\n\n          return fetch__default['default'](url, getVideoViewsQueryParams).then(async res => {\n            res = await res.text();\n\n            self._vk._debugger.push('response', res);\n\n            try {\n              res = JSON.parse(res);\n              let countViews = res.payload[1][0];\n\n              if (countViews !== undefined) {\n                countViews = parseInt(countViews, 10);\n                return resolve(countViews);\n              } else {\n                return reject(self._vk._error('live_error', {\n                  video: video\n                }));\n              }\n            } catch (e) {\n              return reject(self._vk._error('live_error', {\n                video: video\n              }));\n            }\n          });\n        } else {\n          return reject(self._vk._error('widgets', {\n            video: video\n          }, 'live_not_streaming'));\n        }\n      }).catch(e => reject(e));\n    });\n  }\n\n} // LongPollConnection initing automatically by me\n\n\nclass LongPollConnection$1 extends EventEmitter__default['default'] {\n  constructor(lpSettings, vk) {\n    super();\n    let self = this;\n    self.config = lpSettings;\n    self._vk = vk;\n    self.userListeners = {};\n    self.closed = false;\n    self._middlewaresController = new MiddlewaresMechanism(self);\n    self.abortController = new AbortController();\n    init();\n\n    async function reconnect() {\n      return self._vk.call('groups.getLongPollServer', self.config.userConfig.forGetLongPollServer).then(vkr => {\n        self.config.longpollServer = vkr.server;\n        self.config.longpollTs = vkr.ts;\n        self.config.longpollKey = vkr.key;\n        return init(); // reconnect with new parameters\n      }).catch(err => {\n        self.emit('reconnectError', new Error(err));\n      });\n    }\n\n    async function init() {\n      let server, forLongPollServer, _w;\n\n      let httpsPref = 'https://';\n\n      if (self.config.longpollServer.substr(0, httpsPref.length) !== httpsPref) {\n        self.config.longpollServer = httpsPref + self.config.longpollServer;\n      }\n\n      server = `${self.config.longpollServer}`;\n      forLongPollServer = {};\n      _w = null;\n      forLongPollServer.act = 'a_check';\n      forLongPollServer.key = self.config.longpollKey;\n      forLongPollServer.ts = self.config.longpollTs;\n      forLongPollServer.version = self.config.userConfig.forLongPollServer.version;\n      forLongPollServer.wait = self.config.userConfig.forLongPollServer.wait;\n\n      if (isNaN(forLongPollServer.version)) {\n        forLongPollServer.version = '2';\n      }\n\n      _w = forLongPollServer.wait;\n      let params = {\n        timeout: _w * 1000 + 1000 * 3,\n        headers: {\n          'connection': 'keep-alive',\n          'content-type': 'application/x-www-form-urlencoded'\n        },\n        agent: self._vk.agent,\n        signal: self.abortController.signal\n      };\n      server = server + '?' + qs__default['default'].stringify(forLongPollServer);\n\n      if (self._debug) {\n        self._debug({\n          type: 'longPollParamsQuery',\n          data: params\n        });\n      }\n\n      self._vk.debug(EVENT_REQUEST_TYPE, {\n        url: server,\n        query: forLongPollServer,\n        method: 'GET',\n        section: 'bots.longpoll'\n      });\n\n      if (self.closed) return false;\n      self.lpConnection = fetch__default['default'](server, params).catch(e => {\n        return reconnect();\n      }).then(async res => {\n        if (!res) return false;\n        if (!res.json) return res;\n        res = await res.json();\n\n        if (self._vk._debugger) {\n          try {\n            self._vk._debugger.push('response', res);\n          } catch (e) {// Ignore\n          }\n        }\n\n        self._vk.debug(EVENT_RESPONSE_TYPE, {\n          body: res,\n          section: 'bots.longpoll'\n        });\n\n        if (self._debug) {\n          self._debug({\n            type: 'pollResponse',\n            data: res\n          });\n        }\n\n        let vkr = res;\n\n        if (vkr.ts) {\n          self.config.longpollTs = vkr.ts;\n        }\n\n        if (vkr.updates) {\n          if (vkr.updates.length > 0) {\n            self._middlewaresController.run(vkr).then(() => {\n              self._checkUpdates(vkr.updates);\n            });\n          }\n\n          return init();\n        }\n\n        if (vkr.failed) {\n          if (vkr.failed === 1) {\n            // update ts\n            if (vkr.ts) {\n              self.config.longpollTs = vkr.ts;\n            }\n\n            return init();\n          } else if ([2, 3].indexOf(vkr.failed) !== -1) {\n            // need reconnect\n            return reconnect();\n          } else {\n            return self.emit('failure', vkr);\n          }\n        }\n\n        if (vkr.error) {\n          self.emit('error', vkr.error);\n          return reconnect();\n        }\n      }).catch(err => {\n        if (err.toString().match('TIMEDOUT') || err.toString().match('ENOENT') || err.toString().match('timeout')) {\n          return reconnect();\n        }\n\n        return self.emit('error', err);\n      });\n    }\n  }\n\n  async _checkUpdates(updates) {\n    let self = this;\n\n    if (Array.isArray(updates)) {\n      let len = updates.length;\n\n      for (let updateIndex = 0; updateIndex < len; updateIndex++) {\n        let typeEvent = updates[updateIndex].type.toString();\n        self.emit(typeEvent, updates[updateIndex].object);\n      }\n    } else {\n      return 'Is not array!';\n    }\n  }\n  /*\n   *  This function closes connection and stop it\n   *\n   *  @return {Promise}\n   *  @promise Close connection\n   *  @resolve {*} response from abort() method\n   *  @rejet {Error} - Eror if connection not inited\n   *\n   */\n\n\n  async close() {\n    let self = this;\n    return new Promise((resolve, reject) => {\n      if (self.lpConnection) {\n        self.emit('close', {\n          time: new Date().getTime()\n        });\n        self.closed = true;\n        return resolve(self.abortController.abort());\n      } else {\n        return reject(self._vk._error('longpoll_api', {}, 'not_connected'));\n      }\n    });\n  }\n  /*\n   *  This function enables (adds) your debugger for each query\n   *  For example: you can see error if it occured and log it with debugger function\n   *\n   *  @param {Function|Async Function} [debugg] - Function for debugg all queries\n   *  In this function will sending all responses from vk, you can log this object in console for know more\n   *\n   *  @return {Boolean|Object} - If your function is not a function, then will be returned false,\n   *  else LongPollConnection object for chain it\n   *\n   */\n\n\n  debug(debugg) {\n    let self = this;\n    console.warn('[Deprecated method warning] \\nThis method will be deprecated in next releases. Please, use new easyvk.Debugger() and set it up in the easyvk configuration like params.debug = myDebugger');\n\n    if (Object.prototype.toString.call(debugg).match(/function/i)) {\n      self._debug = debugg;\n    } else {\n      return false;\n    }\n\n    return self;\n  }\n\n}\n\nclass LongPollConnector$1 {\n  // From EasyVK contructed\n  constructor(vk) {\n    let self = this; // For the future\n\n    self._vk = vk;\n  }\n  /*\n   *\n   *  This function create LongPollConnection and then re-calls to a server for\n   *  get new events\n   *\n   *  @param {Object} [params] - Is your settings for LongPoll connection\n   *  @param {Object} [params.forGetLongPollServer] - Is object for firs query\n   *  when LongPollConnector getting url for connect. This parameters will be sended with\n   *  query uri, and you can see them here https://vk.com/dev/bots_longpoll\n   *  @param {Object} [params.forLongPollServer] - Is object with params for each query on longpoll server.\n   *  For example: { \"wait\": 10 } //wait 10seconds for new call\n   *\n   *  @return {Promise}\n   *  @promise Conneto to longpoll server\n   *  @resolve {Object} - Is object which contents LongPollConnection\n   *  @reject {Error} - vk.com error or just an error from node-fetch module\n   *\n   */\n\n\n  async connect(params = {}) {\n    let self = this;\n    return new Promise((resolve, reject) => {\n      if (!StaticMethods.isObject(params)) {\n        reject(self._vk._error('is_not_object', {\n          'where': 'BotsLongPoll.connect',\n          'parameter': 'params'\n        }));\n      } else {\n        if (!StaticMethods.isObject(params.forGetLongPollServer)) {\n          params.forGetLongPollServer = {};\n        }\n\n        if (params.forLongPollServer) {\n          if (!StaticMethods.isObject(params.forLongPollServer)) {\n            params.forLongPollServer = {};\n          }\n        } else {\n          params.forLongPollServer = {};\n        }\n\n        if (isNaN(params.forGetLongPollServer.lp_version)) {\n          params.forGetLongPollServer.lp_version = '2';\n        }\n\n        if (isNaN(params.forLongPollServer.wait)) {\n          params.forLongPollServer.wait = '25';\n        }\n\n        if (!params.forGetLongPollServer.group_id && self._vk.session.group_id) {\n          params.forGetLongPollServer.group_id = self._vk.session.group_id;\n        }\n\n        self._vk.call('groups.getLongPollServer', params.forGetLongPollServer).then(vkr => {\n          let forLongPoll = {\n            longpollServer: vkr.server,\n            longpollTs: vkr.ts,\n            longpollKey: vkr.key,\n            responseGetServer: vkr,\n            userConfig: params\n          };\n          return resolve(new LongPollConnection$1(forLongPoll, self._vk));\n        }, reject);\n      }\n    });\n  }\n\n}\n\nclass EasyVKSession {\n  constructor(vk, dataSession = {}) {\n    let self = this;\n    let _props = {\n      session: dataSession,\n      path: vk.params.session_file,\n      vk: vk\n    };\n    let canChanged = ['path'];\n\n    for (let prop in _props) {\n      let settings = {\n        value: _props[prop]\n      };\n\n      if (canChanged.indexOf(prop) !== -1) {\n        settings.configurable = true;\n      }\n\n      Object.defineProperty(self, prop, settings);\n    } // Use session data with methods\n\n\n    for (let prop in self.session) {\n      Object.defineProperty(self, prop, {\n        enumerable: true,\n        configurable: true,\n        value: self.session[prop]\n      });\n    }\n\n    return self;\n  }\n  /*\n   *  This method saved your session in file\n   *\n   *  @return {Promise}\n   *\n   */\n\n\n  async save() {\n    let self = this;\n    return new Promise((resolve, reject) => {\n      let s;\n\n      if (!self.path) {\n        return reject(self.vk._error('session', {}, 'need_path'));\n      }\n\n      s = JSON.stringify(self);\n      let buf = Buffer.from(s, 'utf8');\n      fs__default['default'].writeFile(self.path, buf, err => {\n        if (err) {\n          return reject(new Error(err));\n        }\n\n        return resolve({\n          vk: self.vk\n        });\n      });\n    });\n  }\n  /*\n   *  This function saves your session and cleaning it, make this empty\n   *  @returns Promise\n   *\n   */\n\n\n  async clear() {\n    let self = this;\n    return new Promise((resolve, reject) => {\n      for (let prop in self) {\n        Object.defineProperty(self, prop, {\n          value: undefined,\n          enumerable: true,\n          configurable: true\n        });\n      }\n\n      self.save().then(resolve, reject);\n    });\n  }\n  /*\n   *  This function set up your path session, ou can change sesson path\n   *\n   *  @param {String} path is absolute path for you file\n   *  @return {Promise}\n   *\n   */\n\n\n  async setPath(path = '') {\n    let self = this;\n    return new Promise((resolve, reject) => {\n      fs__default['default'].writeFile(path, '', err => {\n        if (err) {\n          return reject(err);\n        }\n\n        Object.defineProperty(self, 'path', {\n          configurable: true,\n          value: path\n        }); // Update for easyvk functions, for latest releases\n\n        self.vk.params.session_file = path;\n        return resolve({\n          vk: self.vk\n        });\n      });\n    });\n  }\n\n}\n/**\n *   In this file are http widgets for EasyVK\n *   You can use it\n *\n *   Author: @ciricc\n *   License: MIT\n *\n */\n\n\nclass HTTPEasyVKClient {\n  constructor({\n    _jar,\n    vk,\n    httpVk,\n    config,\n    parser,\n    fetch\n  }) {\n    this._config = config;\n    this.fetch = fetch;\n    this.headersRequest = {\n      'User-Agent': this._config.userAgent,\n      'content-type': 'application/x-www-form-urlencoded'\n    };\n    this.LOGIN_ERROR = 'Need login by form, use .loginByForm() method';\n    this._vk = vk;\n    this._authjar = _jar;\n    this._parser = parser;\n    Object.defineProperty(this, 'audio', {\n      get: () => {\n        console.warn('[Deprecated] Audio API is fully deprecated!');\n      }\n    });\n  }\n\n  async post(file, form, isMobile) {\n    return this.request(file, form, true, isMobile);\n  }\n\n  async get(file, form, isMobile) {\n    return this.request(file, form, false, isMobile);\n  }\n\n  async fullRequest(file, form, post, isMobile, settings = {}) {\n    return this.request(file, form, post, isMobile, true, settings);\n  }\n\n  async request(file, form = {}, post = true, isMobile = false, getOriginResponse = false, settings = {}) {\n    let self = this;\n    return new Promise((resolve, reject) => {\n      let mobile = '';\n\n      if (isMobile) {\n        mobile = 'm.';\n      }\n\n      let method = 'post';\n      if (post !== true) method = 'get';\n      let headers = {\n        'user-agent': self._config.userAgent\n      };\n\n      if (isMobile && method === 'post' || form.XML === true) {\n        headers['x-requested-with'] = 'XMLHttpRequest';\n      }\n\n      headers['content-type'] = 'application/x-www-form-urlencoded';\n      let url = file.match(/^http(s):\\/\\//) ? file : `${configuration.PROTOCOL}://${mobile}${configuration.BASE_DOMAIN}/` + file;\n\n      self._vk._debugger.push('request', {\n        url,\n        method,\n        headers,\n        form\n      });\n\n      self._vk.debug(EVENT_REQUEST_TYPE, {\n        url,\n        query: form,\n        section: 'httpClient',\n        method: method\n      });\n\n      return self.fetch(url, {\n        agent: self._vk.agent,\n        headers,\n        method,\n        body: method === 'get' ? undefined : qs__default['default'].stringify(form),\n        qs: method === 'get' ? form : undefined,\n        ...settings\n      }).then(async res => {\n        let _origin = res;\n\n        if (getOriginResponse) {\n          return resolve(_origin);\n        }\n\n        res = await res.textConverted();\n\n        self._vk._debugger.push('response', res);\n\n        self._vk.debug(EVENT_RESPONSE_TYPE, {\n          url: url,\n          query: form,\n          section: 'httpClient',\n          body: res\n        });\n\n        if (!res.length) {\n          return reject(self._vk._error('http_client', {}, 'not_have_access'));\n        }\n\n        if (form.utf8) {\n          res = encoding__default['default'].convert(res, 'utf-8', 'windows-1251').toString();\n        }\n\n        if (form.retOnlyBody) return resolve(res);\n\n        let json = self._parseResponse(res);\n\n        if (json.payload && String(json.payload[0]) === '3') {\n          await this.request('', {\n            _origin: 'https://vk.com',\n            // Only known in Desktop methods\n            ip_h: JSON.parse(json.payload[1][0]),\n            role: 'al_frame',\n            to: JSON.parse(json.payload[1][1])\n          });\n          return resolve(await this.request(...arguments));\n        }\n\n        if (form.autoParse) {\n          return resolve(VKResponseReturner(StaticMethods, {\n            response: json\n          }));\n        }\n\n        return resolve(json);\n      }).catch(err => reject(err));\n    });\n  }\n\n  async goDesktop() {\n    return this.request('fv?to=/mail?_fm=mail&_fm2=1', {}, false, true);\n  }\n\n  async goMobile() {\n    return this.request('mail?act=show&peer=0&_ff=1', {}, false, true);\n  }\n\n  async requestMobile(...args) {\n    return this.request(...args, true);\n  }\n\n  _parseResponse(e) {\n    return this._parser(e);\n  }\n\n  _parseJSON(body, reject) {\n    let self = this;\n\n    let json = self._parseResponse(body.split('<!>'));\n\n    if (typeof json[6] === 'object') json[5] = json[6];\n\n    if (typeof json[5] === 'string') {\n      return reject(new Error(json[5]));\n    }\n\n    if (!json[5]) {\n      return reject(self._vk._error('http_client', {}, 'not_have_access'));\n    }\n\n    json = json[5];\n    return json;\n  }\n\n}\n\nclass HTTPEasyVK {\n  constructor(vk) {\n    let self = this;\n    self.headersRequest = {\n      'content-type': 'application/x-www-form-urlencoded'\n    };\n    self._vk = vk;\n  }\n\n  async __checkHttpParams(params = {}) {\n    return new Promise((resolve, reject) => {\n      if (!params.userAgent) {\n        params.userAgent = configuration['HTTP_CLIENT']['USER_AGENT'];\n      }\n\n      params.userAgent = String(params.userAgent);\n\n      if (!params.cookies) {\n        params.cookies = configuration['HTTP_CLIENT']['COOKIE_PATH'];\n      }\n\n      params.cookies = String(params.cookies);\n      return resolve(params);\n    });\n  }\n\n  _parseResponse(e, json = true) {\n    if (e) {\n      e = String(e).replace('<!--', '');\n\n      if (json) {\n        try {\n          e = JSON.parse(e);\n        } catch (_e) {\n          return e;\n        }\n      }\n    }\n\n    return e;\n  }\n\n  async loginByForm(params = {}) {\n    let self = this;\n    return new Promise((resolve, reject) => {\n      let pass = params.password || self._vk.params.password;\n      let login = params.username || self._vk.params.username;\n      let captchaSid = params.captchaSid || self._vk.params.captcha_sid;\n      let captchaKey = params.captchaKey || self._vk.params.captcha_key;\n      let checkCodeUrl = params.checkCodeUrl || '';\n      let code = params.code;\n      const captchaHandler = params.captchaHandler || self._vk.params.captchaHandler;\n      if (!pass || !login) return reject(self._vk._error('http_client', {}, 'need_auth'));\n\n      self.__checkHttpParams(params).then(p => {\n        let params = p;\n        self._config = params;\n        self.headersRequest['User-Agent'] = self._config.userAgent;\n        let cookiepath = self._config.cookies;\n\n        if (!self._vk.params.reauth && !params.reauth) {\n          let data;\n\n          if (!fs__default['default'].existsSync(cookiepath)) {\n            fs__default['default'].closeSync(fs__default['default'].openSync(cookiepath, 'w'));\n          }\n\n          data = fs__default['default'].readFileSync(cookiepath).toString();\n\n          try {\n            data = JSON.parse(data);\n          } catch (e) {\n            data = null;\n          }\n\n          if (data) {\n            let jar = new toughCookie.CookieJar(new CookieStore__default['default'](cookiepath));\n            self._authjar = jar;\n            self.fetch = getJarFetch(self._authjar);\n            return createClient(resolve);\n          }\n        }\n\n        let vHttp = self._vk;\n        let jar = new toughCookie.CookieJar(new CookieStore__default['default'](cookiepath));\n        self._authjar = jar;\n        self.fetch = getJarFetch(self._authjar);\n\n        if (!self._vk.params.reauth && !params.reauth) {\n          if (Object.keys(jar).length) {\n            return actCheckLogin().then(() => {\n              return createClient(resolve, vHttp);\n            }, r => {\n              return goLogin();\n            });\n          }\n        }\n\n        if (!code && !checkCodeUrl) {\n          fs__default['default'].writeFileSync(cookiepath, '{}');\n          jar = new toughCookie.CookieJar(new CookieStore__default['default'](cookiepath));\n          self._authjar = jar;\n        }\n\n        self.fetch = getJarFetch(self._authjar);\n        return goLogin();\n\n        async function makeAuthWithoutCode(_needSolve, _resolverReCall, _rejecterReCall, getData) {\n          return new Promise(async (resolve, reject) => {\n            let body = await self.fetch(checkCodeUrl, {\n              method: 'POST',\n              agent: self._vk.agent,\n              body: qs__default['default'].stringify(getData),\n              headers: { ...self.headersRequest\n              }\n            });\n            body = await body.text();\n\n            if (body.match(/captcha/)) {\n              let captchaUrl = body.match(/\\/captcha.php([^\"]+)/);\n\n              if (captchaUrl) {\n                captchaUrl = `${configuration.PROTOCOL}://${configuration.BASE_DOMAIN}${captchaUrl[0]}`;\n                let captchaSid = captchaUrl.match(/sid=([0-9]+)/);\n\n                if (captchaSid) {\n                  captchaSid = Number(captchaSid[1]);\n                  let err = {\n                    captcha_sid: captchaSid,\n                    captcha_img: captchaUrl\n                  };\n                  return _catchCaptcha({\n                    err,\n                    reCall: () => {\n                      return makeAuthWithoutCode(0, 0, 0, getData);\n                    },\n                    _needSolve,\n                    _resolverReCall,\n                    _rejecterReCall,\n                    data: getData,\n                    reject\n                  });\n                } else {\n                  return reject(new Error('You have captcha error, but http client dont recognize where is captcha_sid parameter'));\n                }\n              } else {\n                return reject(new Error('You have captcha error, but http client dont recognize where'));\n              }\n            }\n\n            if (body.match(/authcheck_code/)) {\n              let err = new Error('Wrong code');\n              err.is2fa = true;\n              err.isWrong = true;\n              return reject(err);\n            }\n\n            self._vk.debug(EVENT_RESPONSE_TYPE, {\n              body: body,\n              section: 'httpClient'\n            });\n\n            self._vk._debugger.push('response', body);\n\n            if (_needSolve) {\n              return _resolverReCall(createClient(resolve, vHttp));\n            } else {\n              return createClient(resolve, vHttp);\n            }\n          });\n        }\n\n        async function goLogin() {\n          if (checkCodeUrl && code) {\n            return makeAuthWithoutCode(0, 0, 0, {\n              code,\n              remember: 1,\n              captcha_sid: captchaSid,\n              captcha_key: captchaKey\n            }).then(resolve, reject);\n          }\n\n          let url = `${configuration.PROTOCOL}://${configuration.MOBILE_SUBDOMAIN}.${configuration.BASE_DOMAIN}/`;\n\n          self._vk.debug(EVENT_REQUEST_TYPE, {\n            url,\n            query: ``,\n            method: 'GET',\n            section: 'httpClient'\n          });\n\n          self.fetch(url, {\n            method: 'GET',\n            headers: { ...self.headersRequest\n            },\n            agent: self._vk.agent,\n            cache: 'no-cache'\n          }).then(async res => {\n            res = await res.text();\n\n            self._vk.debug(EVENT_RESPONSE_TYPE, {\n              body: res,\n              section: 'httpClient'\n            });\n\n            let body = res;\n\n            self._vk._debugger.push('response', res);\n\n            let matches = body.match(/action=\"(.*?)\"/);\n\n            if (!matches || !body.match(/password/)) {\n              // Если пользовтаель уже авторизован по кукисам, чекаем сессию\n              return actCheckLogin().then(() => {\n                return createClient(resolve, vHttp);\n              }, reject);\n            }\n\n            let POSTLoginFormUrl = matches[1];\n            if (!POSTLoginFormUrl.match(/login\\.vk\\.com/)) return reject(self._vk._error('http_client', {}, 'not_supported'));\n            return actLogin(POSTLoginFormUrl).then(resolve, reject);\n          }).catch(err => reject(err));\n        }\n\n        async function actCheckLogin(jar) {\n          return new Promise((resolve, reject) => {\n            if (params.checkAuth === false) {\n              return resolve(true);\n            }\n\n            let url = `${configuration.PROTOCOL}://${configuration.BASE_DOMAIN}/al_im.php`;\n            let form = {\n              act: 'a_dialogs_preload',\n              al: 1,\n              gid: 0,\n              im_v: 3,\n              rs: ''\n            };\n\n            self._vk.debug(EVENT_REQUEST_TYPE, {\n              url,\n              query: form,\n              method: 'POST',\n              section: 'httpClient'\n            });\n\n            return self.fetch(url, {\n              method: 'POST',\n              url,\n              body: qs__default['default'].stringify(form),\n              agent: self._vk.agent,\n              headers: { ...self.headersRequest,\n                'x-requested-with': 'XMLHttpRequest'\n              }\n            }).then(async res => {\n              res = await res.text();\n\n              self._vk.debug(EVENT_RESPONSE_TYPE, {\n                body: res,\n                section: 'httpClient'\n              });\n\n              self._vk._debugger.push('response', res);\n\n              res = self._parseResponse(res);\n\n              if (Number(res.payload[0]) === 0) {\n                return resolve(true);\n              } else {\n                return reject(new Error('Need update session'));\n              }\n            }).catch(err => reject(err));\n          });\n        }\n\n        function _catchCaptcha(params = {}) {\n          let {\n            err,\n            reCall,\n            _needSolve,\n            _rejecterReCall,\n            data,\n            reject\n          } = params;\n          let vkr = err;\n\n          if (_needSolve) {\n            try {\n              _rejecterReCall({\n                error: false,\n                reCall: () => {\n                  return reCall();\n                }\n              });\n            } catch (e) {\n              reject(e);\n            }\n\n            return;\n          }\n\n          const captchaSid = vkr.captcha_sid;\n          const captchaImg = vkr.captcha_img;\n          let paramsForHandler = {\n            captcha_sid: captchaSid,\n            captcha_img: captchaImg,\n            params: data,\n            vk: self._vk\n          };\n\n          paramsForHandler.resolve = captchaKey => {\n            return new Promise((resolve, reject) => {\n              data.captcha_key = captchaKey;\n              data.captcha_sid = captchaSid;\n\n              try {\n                reCall('NEED SOLVE', resolve, reject, data);\n              } catch (errorRecall) {\n                /* Need pass it */\n              }\n            });\n          };\n\n          try {\n            captchaHandler(paramsForHandler);\n          } catch (e) {\n            reject(e);\n          }\n        }\n\n        async function actLogin(loginURL) {\n          return new Promise(async (resolve, reject) => {\n            async function makeAuth(_needSolve, _resolverReCall, _rejecterReCall, getData) {\n              return self.fetch(loginURL, {\n                method: 'POST',\n                agent: self._vk.agent,\n                body: qs__default['default'].stringify(getData),\n                headers: { ...self.headersRequest\n                }\n              }).then(async res => {\n                let body = await res.text();\n\n                if (body.match(/service_msg service_msg_warning/g)) {\n                  let errText = body.match(/<div class=\"service_msg service_msg_warning\">(.*)<\\/div>/);\n\n                  if (errText && errText[1]) {\n                    errText = errText[1].replace(/<[^>]*>/g, '');\n                  }\n\n                  let err = new Error(errText || 'Invalid login or password');\n                  err.type = 'invalid-login';\n                  return reject(err);\n                }\n\n                if (body.match(/authcheck_code/)) {\n                  if (code) {\n                    let checkCodeURL = checkCodeUrl;\n\n                    if (!checkCodeURL) {\n                      checkCodeURL = body.match(/action([\\s]+)?=([\\s]+)?(\"|')(\\/login\\?act=authcheck_code([^\"']+))/);\n                      checkCodeURL = checkCodeURL ? checkCodeURL[4] : null;\n                      if (!checkCodeURL) return reject(new Error('Not found authcheck url'));\n                      checkCodeURL = `${configuration.PROTOCOL}://${configuration.MOBILE_SUBDOMAIN}.${configuration.BASE_DOMAIN}${checkCodeURL}`;\n                    }\n\n                    let checkCodeData = {\n                      _ajax: 1,\n                      code,\n                      remember: 1\n                    };\n                    let res = await self.fetch(checkCodeURL, {\n                      method: 'POST',\n                      agent: self._vk.agent,\n                      body: qs__default['default'].stringify(checkCodeData),\n                      headers: { ...self.headersRequest\n                      }\n                    });\n                    res = await res.text();\n\n                    if (res.match(/authcheck_code/)) {\n                      let err = new Error('Wrong code');\n                      err.is2fa = true;\n                      err.isWrong = true;\n                      return reject(err);\n                    }\n                  } else {\n                    let err = new Error('You need input two factor code');\n                    err.is2fa = true;\n                    let checkCodeURL = body.match(/action([\\s]+)?=([\\s]+)?(\"|')(\\/login\\?act=authcheck_code([^\"']+))/);\n                    checkCodeURL = checkCodeURL ? checkCodeURL[4] : '';\n                    checkCodeURL = `${configuration.PROTOCOL}://${configuration.MOBILE_SUBDOMAIN}.${configuration.BASE_DOMAIN}${checkCodeURL}`;\n                    err.checkCodeUrl = checkCodeURL;\n                    return reject(err);\n                  }\n                }\n\n                if (body.match(/captcha/)) {\n                  let captchaUrl = body.match(/\\/captcha.php([^\"]+)/);\n\n                  if (captchaUrl) {\n                    captchaUrl = `${configuration.PROTOCOL}://${configuration.BASE_DOMAIN}${captchaUrl[0]}`;\n                    let captchaSid = captchaUrl.match(/sid=([0-9]+)/);\n\n                    if (captchaSid) {\n                      captchaSid = Number(captchaSid[1]);\n                      let err = {\n                        captcha_sid: captchaSid,\n                        captcha_img: captchaUrl\n                      };\n                      return _catchCaptcha({\n                        err,\n                        reCall: () => {\n                          return makeAuth(0, 0, 0, getData);\n                        },\n                        _needSolve,\n                        _resolverReCall,\n                        _rejecterReCall,\n                        data: getData,\n                        reject\n                      });\n                    } else {\n                      return reject(new Error('You have captcha error, but http client dont recognize where is captcha_sid parameter'));\n                    }\n                  } else {\n                    return reject(new Error('You have captcha error, but http client dont recognize where'));\n                  }\n                }\n\n                self._vk.debug(EVENT_RESPONSE_TYPE, {\n                  body: body,\n                  section: 'httpClient'\n                });\n\n                self._vk._debugger.push('response', body);\n\n                if (_needSolve) {\n                  return _resolverReCall(createClient(resolve, vHttp));\n                } else {\n                  return createClient(resolve, vHttp);\n                }\n              }).catch(err => reject(err));\n            }\n\n            return makeAuth(0, 0, 0, {\n              email: login,\n              pass,\n              captcha_sid: captchaSid,\n              captcha_key: captchaKey\n            });\n          });\n        }\n\n        async function createClient(r, vHttp) {\n          let HTTPClient = new HTTPEasyVKClient({\n            _jar: self._authjar,\n            vk: self._vk,\n            httpVk: vHttp,\n            config: self._config,\n            parser: self._parseResponse,\n            fetch: self.fetch\n          });\n          await HTTPClient.goDesktop();\n          return r(HTTPClient);\n        }\n      }, reject);\n    });\n  }\n\n}\n\nfunction getJarFetch(jar) {\n  return async function myFetch(url, options) {\n    if (!options) options = {};\n    if (!options.headers) options.headers = {};\n    if (!options.jar) options.jar = jar;\n\n    if (options.jar) {\n      let cookies = options.jar.getCookiesSync(url).join('; ');\n      options.headers = { ...options.headers,\n        cookie: cookies\n      };\n    }\n\n    const opts = Object.assign({}, options, {\n      redirect: 'manual'\n    });\n    let res = await fetch__default['default'](url, opts);\n    return new Promise(async (resolve, reject) => {\n      if (res.headers.raw()['set-cookie']) {\n        // Set cookies like browser\n        let cookies = res.headers.raw()['set-cookie'].map(toughCookie.Cookie.parse);\n        let promises = [];\n\n        if (options.jar) {\n          cookies.forEach(cookie => {\n            promises.push(new Promise((resolve, reject) => {\n              options.jar.setCookie(cookie, res.url, () => {\n                return resolve(true);\n              });\n            }));\n          });\n        }\n\n        await Promise.all(promises);\n      }\n\n      const isRedirect = res.status === 303 || res.status === 301 || res.status === 302 || res.status === 307;\n\n      if (isRedirect) {\n        const optsForGet = Object.assign({}, {\n          method: res.status === 307 ? options.method : 'GET',\n          body: res.status === 307 ? options.body : null,\n          follow: options.follow !== undefined ? options.follow - 1 : undefined,\n          agent: options.agent,\n          headers: options.headers\n        });\n        return myFetch(res.headers.get('location'), optsForGet).then(res => {\n          return resolve(res);\n        });\n      }\n\n      return resolve(res);\n    });\n  };\n}\n\nvar errors = {\n  'session_not_valid': {\n    'code': 1,\n    'description': 'JSON in session file is not valid',\n    'ru_description': 'JSON файла сессии не имеет правильный формат'\n  },\n  'session_not_found': {\n    'code': 2,\n    'description': 'Session file is not found',\n    'ru_description': 'Файл сессии не найден'\n  },\n  'empty_session': {\n    'code': 3,\n    'description': 'Session file is empty',\n    'ru_description': 'Файл сессии пустой'\n  },\n  'empty_response': {\n    'code': 4,\n    'description': 'The server responsed us with empty data',\n    'ru_description': 'Ответ сервера пришел пустым'\n  },\n  'access_token_not_valid': {\n    'code': 5,\n    'description': 'Access token not valid',\n    'ru_description': 'Access токен не правильный'\n  },\n  'captcha_error': {\n    'code': 6,\n    'description': 'You need solve it and then put to params captcha_key, or use captchaHandler for solve it automatic',\n    'ru_description': 'Необходимо решить капчу, вставьте в параметр captcha_key код с картинки или используйте captchaHandler для того, чтобы решать капчу автоматически'\n  },\n  'method_deprecated': {\n    'code': 7,\n    'description': 'This method was deprecated',\n    'ru_description': 'Этот метод был удален'\n  },\n  'is_not_string': {\n    'code': 8,\n    'description': 'This parameter is not string',\n    'ru_description': 'Параметр должен быть строкой'\n  },\n  'live_error': {\n    'code': 10,\n    'description': \"Maybe VK algo was changed, but we can't parse count of views from this video\",\n    'ru_description': 'Может быть, алгоритмы ВКонтакте были изменены, но сейчас мы не можем получить количество просмотров этой странсляции'\n  },\n  'server_error': {\n    'code': 11,\n    'description': \"Server was down or we don't know what happaned\",\n    'ru_description': 'Сервер упал, или нам неизвестно, что произошло'\n  },\n  'invalid_response': {\n    'code': 12,\n    'description': 'Server responsed us with not a JSON format',\n    'ru_description': 'Сервер ответил не в формате JSON'\n  },\n  'is_not_object': {\n    'code': 13,\n    'description': 'This parameter is not an object',\n    'ru_description': 'Параметр должен быть объектом'\n  },\n  'upload_url_error': {\n    'code': 14,\n    'description': 'upload_url is not defied in vk response',\n    'ru_description': 'upload_url не указан в ответе сервера'\n  },\n  'is_not_function': {\n    'code': 15,\n    'description': 'This parameter is not a function',\n    'ru_description': 'Параметр должен быть функцией'\n  },\n  'is_not_number': {\n    'code': 16,\n    'description': 'This parameter is not a number',\n    'ru_description': 'Параметр должен быть числом'\n  },\n  'http_client': {\n    'parent_hash': 2000,\n    'errors': {\n      'need_auth': {\n        'code': 1,\n        'description': 'Need authenticate by password and username. This data not saving in session file!',\n        'ru_description': 'Вам нужно ввести параметр username и password, в сессии не сохранен пароль и логин'\n      },\n      'not_supported': {\n        'code': 2,\n        'description': 'Library does not support this authentication way... sorry',\n        'ru_description': 'Библиотека не поддерживает авторизацию через HTTP... к сожалению'\n      }\n    }\n  },\n  'longpoll_api': {\n    'parent_hash': 3000,\n    'errors': {\n      'not_connected': {\n        'code': 1,\n        'description': 'LongPoll not connected to the server',\n        'ru_description': 'LongPoll не подключен к серверу'\n      },\n      'event_already_have': {\n        'code': 2,\n        'description': 'This eventCode is already have listening',\n        'ru_description': 'Этот eventCode уже прослушивается'\n      }\n    }\n  },\n  'session': {\n    'parent_hash': 3100,\n    'errors': {\n      'need_path': {\n        'code': 1,\n        'description': 'You need set path for session file',\n        'ru_description': 'Вам нужно установить путь к файлу сессии'\n      }\n    }\n  },\n  'widgets': {\n    'parent_hash': 4000,\n    'errors': {\n      'live_not_streaming': {\n        'code': 1,\n        'description': 'The live video is not streaming now',\n        'ru_description': 'Live трансляция в данный момент не проводится'\n      }\n    }\n  }\n};\n\nclass EasyVKError extends Error {\n  constructor(error, name = '', data = {}) {\n    super(error.description);\n    let self = this;\n    self.error_code = error.code;\n    self.easyvk_error = true;\n    self.data = data;\n    self.name = name;\n  }\n\n}\n\nclass EasyVKErrors {\n  constructor() {\n    let self = this;\n    self._errors = errors;\n  }\n\n  error(name = '', data = {}, parent = '') {\n    let self = this;\n    name = String(name);\n    parent = String(parent);\n\n    if (self._errors[name]) {\n      let err;\n\n      if (self._errors[name]['errors'] && self._errors[name]['errors'][parent]) {\n        err = self._errors[name]['errors'][parent];\n        err.code += self._errors[name]['parent_hash'] || -100000;\n      } else {\n        err = self._errors[name];\n      }\n\n      if (err[self._lang + '_description']) {\n        err.description = err[self._lang + '_description'];\n      }\n\n      let stringId = name;\n\n      if (self._errors[name]['errors'] && self._errors[name]['errors'][parent]) {\n        stringId = name + '\\\\' + parent;\n      }\n\n      return new EasyVKError(err, stringId, data);\n    }\n\n    let notHaveError = 'Not have this error in EasyVKErrors object!';\n\n    if (self._lang === 'ru') {\n      notHaveError = 'Данная ошибка не описана в объекте EasyVKErrors';\n    }\n\n    return new Error(notHaveError);\n  }\n\n  setLang(lang = 'ru') {\n    let self = this;\n    self._lang = String(lang);\n  }\n\n}\n\nvar easyVKErrors = new EasyVKErrors();\nconst authTypes = ['user', 'group', 'app'];\n/**\r\n *  EasyVK module. In this module creates session by your params\r\n *  And then you will get a EasyVK object (Session creates in the easyvkInit.js file)\r\n *  Author: @ciricc\r\n *  License: MIT\r\n *\r\n */\n\nclass EasyVK {\n  // Here will be created session\n  constructor(params, debuggerRun) {\n    this.params = params;\n    this._debugger = new RequestsDebugger(this);\n\n    this.debug = (t, d) => {\n      if (this.params.debug) {\n        this.params.debug.emit(t, d);\n      }\n    };\n\n    this.debuggerRun = debuggerRun || this._debugger;\n    this._errors = easyVKErrors;\n\n    this._errors.setLang(params.lang);\n  }\n\n  get debugger() {\n    console.warn('[Deprecated property warning] \\nvk.debugger property will be deprecated in next releases. Please, use new easyvk.Debugger() and set it up in the easyvk configuration like params.debug = myDebugger');\n    return this._debugger;\n  }\n\n  set debugger(d) {\n    this._debugger = d;\n  }\n\n  async _init() {\n    let self = this;\n    return new Promise((resolve, reject) => {\n      let session, params;\n      session = {};\n      params = self.params;\n\n      if (params.proxy) {\n        let options = new url.URL(params.proxy);\n        let opts = {};\n\n        for (let i in options) {\n          opts[i] = options[i];\n        }\n\n        options = opts;\n\n        if (options.username || options.password) {\n          options.auth = options.username + ':' + options.password;\n        }\n\n        options.keepAlive = true;\n        options.keepAliveMsecs = 30000;\n        self.agent = new ProxyAgent__default['default'](options, true);\n      } else {\n        self.agent = new https__default['default'].Agent({\n          keepAlive: true,\n          keepAliveMsecs: 30000\n        });\n      }\n\n      let defaultDataParams = {\n        client_id: params.client_id || configuration.WINDOWS_CLIENT_ID,\n        client_secret: params.client_secret || configuration.WINDOWS_CLIENT_SECRET,\n        v: params.api_v,\n        lang: params.lang === 'undefined' ? 'ru' : params.lang,\n        '2fa_supported': 1\n      };\n\n      if (params.captcha_key) {\n        defaultDataParams.captcha_sid = params.captcha_sid;\n        defaultDataParams.captcha_key = params.captcha_key;\n      }\n\n      if (params.code && params.code.toString().length !== 0) {\n        defaultDataParams.code = params.code;\n      }\n\n      if (!params.captchaHandler || !Object.prototype.toString.call(params.captchaHandler).match(/Function/)) {\n        params.captchaHandler = thread => {\n          throw self._error('captcha_error', {\n            captcha_key: thread.captcha_key,\n            captcha_sid: thread.captcha_sid,\n            captcha_img: thread.captcha_img\n          });\n        };\n      }\n\n      self.captchaHandler = params.captchaHandler;\n      /* if user wants to get data from file, need get data from file\r\n         or generate this file automatically with new data */\n\n      if (!params.reauth) {\n        let data;\n\n        try {\n          data = fs__default['default'].readFileSync(params.session_file);\n        } catch (e) {\n          data = false;\n        }\n\n        if (data) {\n          try {\n            data = JSON.parse(data.toString());\n\n            if (data.access_token && data.access_token === params.access_token || // If config token is session token\n            params.username && params.username === data.username || params.client_id && params.client_id === data.client_id && !params.access_token && !params.username // or if login given, it need be same\n            ) {\n                if (data.access_token) {\n                  session = new EasyVKSession(self, data);\n                  self.session = session;\n                  return initResolve(self);\n                } else {\n                  if (!(params.username && params.password) && !params.access_token && !params.client_id && params.client_secret) {\n                    return reject(self._error('empty_session'));\n                  }\n                }\n              }\n          } catch (e) {\n            if (!(params.username && params.password) && !params.access_token) {\n              return reject(self._error('session_not_valid'));\n            }\n          }\n        } else {\n          if (!(params.username && params.password) && !params.access_token && !(params.client_id && params.client_secret)) {\n            return reject(self._error('empty_session'));\n          }\n        }\n      }\n\n      if (!session.access_token) {\n        // If session file contents access_token, try auth with it\n        if (params.access_token) {\n          session.access_token = params.access_token;\n\n          if (self.params.authType) {\n            let {\n              authType\n            } = self.params;\n\n            if (authType === authTypes[0]) {\n              initToken();\n            } else if (authType === authTypes[1]) {\n              groupToken();\n            } else if (authType === authTypes[2]) {\n              appToken();\n            } else {\n              initToken();\n            }\n          } else {\n            initToken();\n          }\n        } else if (params.username) {\n          // Try get access_token with auth\n          let getData = {\n            username: params.username,\n            password: params.password,\n            grant_type: 'password',\n            device_id: '',\n            libverify_support: 1,\n            scope: 'all',\n            v: '5.122'\n          };\n          makeAuth(0, 0, 0, getData); // пиздец\n        } else if (params.client_id) {\n          let getData = {\n            grant_type: 'client_credentials'\n          };\n          getData = prepareRequest(getData);\n          let url = configuration.BASE_OAUTH_URL + 'token/?' + getData;\n          let headers = {\n            'User-Agent': params.userAgent\n          };\n          self.debug(EVENT_REQUEST_TYPE, {\n            url: url,\n            query: getData,\n            method: 'GET'\n          });\n          fetch__default['default'](url, {\n            agent: self.agent,\n            headers: headers\n          }).then(async res => {\n            if (res.statusText.match(/proxy/gi)) {\n              let e = new Error('Invalid response body: no OK statusText (maybe troubles with proxy)');\n              e.type = 'invalid-json';\n              return reject(e);\n            }\n\n            self.debug(EVENT_RESPONSE_TYPE, {\n              body: res\n            });\n\n            if (self.debuggerRun) {\n              try {\n                self.debuggerRun.push('response', res);\n              } catch (e) {\n                return reject(new Error('DebuggerRun is not setuped correctly'));\n              }\n            }\n\n            res = await res.json();\n            return completeSession(null, res, {\n              credentials_flow: 1,\n              client_id: params.client_id\n            }).catch(e => {\n              if (params.onlyInstance) {\n                self.session = new EasyVKSession(self, {\n                  access_token: null\n                });\n                initResolve(self);\n              } else {\n                return reject(e);\n              }\n            });\n          }).catch(e => {\n            console.error(e);\n            reject(e);\n          });\n        }\n      }\n\n      async function makeAuth(_needSolve, _resolverReCall, _rejecterReCall, getData) {\n        let queryData = prepareRequest(getData);\n        let url = configuration.BASE_OAUTH_URL + 'token/?' + queryData;\n        self.debug(EVENT_REQUEST_TYPE, {\n          url: url,\n          query: queryData,\n          method: 'GET'\n        });\n        return fetch__default['default'](url, {\n          headers: {\n            'User-Agent': params.userAgent\n          },\n          agent: self.agent\n        }).then(async res => {\n          if (res.statusText.match(/proxy/gi)) {\n            let e = new Error('Invalid response body: no OK statusText (maybe troubles with proxy)');\n            e.type = 'invalid-json';\n            return reject(e);\n          }\n\n          res = await res.text();\n          self.debug(EVENT_RESPONSE_TYPE, {\n            body: res\n          });\n\n          if (self.debuggerRun) {\n            try {\n              self.debuggerRun.push('response', res);\n            } catch (e) {\n              return reject(new Error('DebuggerRun is not setuped correctly'));\n            }\n          }\n\n          try {\n            res = JSON.parse(res);\n          } catch (e) {\n            let _e = new Error('Invalid json sent');\n\n            _e.type = 'invalid-json';\n            return reject(_e);\n          }\n\n          return completeSession(null, res, {\n            user_id: null\n          }).catch(async err => {\n            try {\n              self._catchCaptcha({\n                err,\n                reCall: () => {\n                  return makeAuth(0, 0, 0, getData);\n                },\n                _needSolve,\n                _resolverReCall,\n                _rejecterReCall,\n                data: getData,\n                reject\n              });\n            } catch (e) {\n              if (err.validation_sid && err.validation_type && String(err.validation_type).match('sms')) {\n                let validatePhoneData = {\n                  https: 1,\n                  lang: defaultDataParams.lang,\n                  v: defaultDataParams.v,\n                  client_id: defaultDataParams.client_id,\n                  client_secret: defaultDataParams.client_secret,\n                  api_id: 2274003,\n                  libverify_support: 1,\n                  sid: err.validation_sid\n                };\n                await StaticMethods.call('auth.validatePhone', validatePhoneData, 'post', self.debuggerRun, self.agent).catch(e => {});\n              }\n\n              reject(err);\n            }\n          });\n        }).catch(e => {\n          console.error(e);\n          reject(e);\n        });\n      }\n\n      function completeSession(err, res, object = {}) {\n        return new Promise((resolve, reject) => {\n          let vkr = prepareResponse(err, res);\n          let json = generateSessionFromResponse(vkr, reject);\n\n          if (json) {\n            session = json;\n            Object.assign(session, object);\n            initToken();\n            resolve(true);\n          } else {\n            return reject(self._error('empty_response', {\n              response: vkr\n            }));\n          }\n        });\n      }\n\n      function generateSessionFromResponse(vkr, rej) {\n        let json = StaticMethods.checkJSONErrors(vkr, rej || reject);\n\n        if (json) {\n          json = JSON.parse(JSON.stringify(json));\n          json.user_id = null;\n          return json;\n        }\n      }\n\n      function prepareRequest(getDataObject = {}) {\n        let Obj = Object.assign(getDataObject, defaultDataParams);\n        Obj = StaticMethods.urlencode(Obj);\n\n        if (self.debuggerRun) {\n          try {\n            self.debuggerRun.push('request', configuration.BASE_OAUTH_URL + 'token/?' + Obj);\n          } catch (e) {\n            return reject(new Error('DebuggerRun is not setuped correctly'));\n          }\n        }\n\n        return Obj;\n      }\n\n      function prepareResponse(err, res) {\n        if (err) {\n          return reject(new Error(err));\n        }\n\n        return res;\n      }\n\n      function initToken() {\n        if (!session.user_id && !session.group_id) {\n          let token, getData;\n          token = session.access_token || params.access_token;\n\n          if (session.credentials_flow) {\n            self.__credentials_flow_type = true;\n            self.session = session;\n            initResolve(self);\n          } else {\n            getData = {\n              access_token: token,\n              v: params.api_v,\n              fields: params.fields.join(',')\n            };\n            let url = configuration.BASE_CALL_URL + 'users.get?' + prepareRequest(getData);\n            self.debug(EVENT_REQUEST_TYPE, {\n              url: url + '?' + StaticMethods.urlencode(getData),\n              query: getData,\n              method: 'GET'\n            });\n            return fetch__default['default'](url, {\n              agent: self.agent,\n              headers: {\n                'User-agent': params.userAgent\n              }\n            }).then(async res => {\n              if (res.statusText.match(/proxy/gi)) {\n                let e = new Error('Invalid response body: no OK statusText (maybe troubles with proxy)');\n                e.type = 'invalid-json';\n                return reject(e);\n              }\n\n              self.debug(EVENT_RESPONSE_TYPE, {\n                body: res\n              });\n\n              if (self.debuggerRun) {\n                try {\n                  self.debuggerRun.push('response', res);\n                } catch (e) {\n                  return reject(new Error('DebuggerRun is not setuped correctly'));\n                }\n              }\n\n              res = await res.json();\n              let vkr = prepareResponse(null, res);\n\n              if (vkr) {\n                let json = StaticMethods.checkJSONErrors(vkr, reject);\n\n                if (json) {\n                  if (Array.isArray(json) && json.length === 0) {\n                    session = {\n                      access_token: session.access_token\n                    };\n\n                    if (self.params.authType && self.params.authType === authTypes[0]) {\n                      return reject(new Error('Is not a user token! Or this token is not valid (expired)'));\n                    } else {\n                      appToken();\n                    }\n                  } else {\n                    session = {\n                      access_token: session.access_token\n                    };\n                    session.user_id = json[0].id;\n                    session.first_name = json[0].first_name;\n                    session.last_name = json[0].last_name;\n                    session.username = params.username;\n\n                    for (let i = 0; i < params.fields.length; i++) {\n                      if (json[0][params.fields[i]] && session[params.fields[i]] === undefined) {\n                        session[params.fields[i]] = json[0][params.fields[i]];\n                      }\n                    }\n\n                    self.session = new EasyVKSession(self, session);\n                    initResolve(self);\n                  }\n                }\n              } else {\n                return reject(self._error('empty_response', {\n                  response: vkr,\n                  where: 'in auth with token (user)'\n                }));\n              }\n            }).catch(e => reject(e));\n          }\n        } else {\n          self.session = session;\n          initResolve(self);\n        }\n      }\n\n      function appToken() {\n        let getData;\n        let data = {\n          access_token: params.access_token,\n          v: params.api_v,\n          fields: params.fields.join(',')\n        };\n        if (params.lang !== undefined) data.lang = params.lang;\n        getData = data;\n\n        if (self.debuggerRun) {\n          try {\n            self.debuggerRun.push('request', configuration.BASE_CALL_URL + 'apps.get?' + StaticMethods.urlencode(data));\n          } catch (e) {// Ignore\n          }\n        }\n\n        let url = configuration.BASE_CALL_URL + 'apps.get?' + prepareRequest(getData);\n        self.debug(EVENT_REQUEST_TYPE, {\n          url,\n          query: getData,\n          method: 'GET'\n        });\n        fetch__default['default'](url, {\n          agent: self.agent,\n          headers: {\n            'User-Agent': params.userAgent\n          }\n        }).then(async res => {\n          if (res.statusText.match(/proxy/gi)) {\n            let e = new Error('Invalid response body: no OK statusText (maybe troubles with proxy)');\n            e.type = 'invalid-json';\n            return reject(e);\n          }\n\n          let vkr = await res.json();\n\n          if (self.debuggerRun) {\n            try {\n              self.debuggerRun.push('response', vkr);\n            } catch (e) {// Ignore\n            }\n          }\n\n          self.debug(EVENT_RESPONSE_TYPE, {\n            body: vkr\n          });\n\n          if (vkr) {\n            let json;\n            json = StaticMethods.checkJSONErrors(vkr, e => {\n              if (e.error_code === 5 || e.error_code === 27 || e.error_code === 28) {\n                if (self.params.authType && self.params.authType === authTypes[2]) {\n                  return reject(new Error('Is not an application token! Or this token is not valid (expired)'));\n                } else {\n                  groupToken();\n                }\n              } else {\n                reject(e);\n              }\n            });\n\n            if (json) {\n              json = json.items[0];\n\n              if (Array.isArray(json) && json.length === 0) {\n                if (self.params.authType && self.params.authType === authTypes[2]) {\n                  return reject(new Error('Is not an application token! Or this token is not valid (expired)'));\n                } else {\n                  groupToken();\n                }\n              } else {\n                session.app_id = json.id;\n                session.app_title = json.title;\n                session.app_type = json.type;\n                session.app_icons = [json.icon_75, json.icon_150];\n                session.author = {\n                  id: json.author_id\n                };\n                session.app_members = json.members_count;\n\n                for (let i = 0; i < params.fields.length; i++) {\n                  if (json[params.fields[i]]) {\n                    session[params.fields[i]] = json[params.fields[i]];\n                  }\n                }\n\n                self.session = new EasyVKSession(self, session);\n                initResolve(self);\n              }\n            }\n          } else {\n            return reject(self._error('empty_response', {\n              response: vkr,\n              where: 'in auth with token (group)'\n            }));\n          }\n        }).catch(e => reject(e));\n      }\n\n      function groupToken() {\n        let getData;\n        getData = {\n          access_token: params.access_token,\n          v: params.api_v,\n          lang: params.lang || 'ru',\n          fields: params.fields.join(',')\n        };\n\n        if (self.debuggerRun) {\n          try {\n            self.debuggerRun.push('request', configuration.BASE_CALL_URL + 'groups.getById?' + StaticMethods.urlencode(getData));\n          } catch (e) {// Ignore\n          }\n        }\n\n        let url = configuration.BASE_CALL_URL + 'groups.getById?' + prepareRequest(getData);\n        self.debug(EVENT_REQUEST_TYPE, {\n          url,\n          query: getData,\n          method: 'GET'\n        });\n        fetch__default['default'](url, {\n          agent: self.agent,\n          headers: {\n            'User-Agent': params.userAgent\n          }\n        }).then(async res => {\n          if (res.statusText.match(/proxy/gi)) {\n            let e = new Error('Invalid response body: no OK statusText (maybe troubles with proxy)');\n            e.type = 'invalid-json';\n            return reject(e);\n          }\n\n          let vkr = await res.json();\n\n          if (self.debuggerRun) {\n            try {\n              self.debuggerRun.push('response', vkr);\n            } catch (e) {// Ignore\n            }\n          }\n\n          self.debug(EVENT_RESPONSE_TYPE, {\n            body: vkr\n          });\n\n          if (vkr) {\n            let json = StaticMethods.checkJSONErrors(vkr, e => {\n              if ((e.error_code === 100 || e.error_code === 5) && self.params.authType && self.params.authType === authTypes[1]) {\n                return reject(new Error('Is not a group token! Or this token is not valid (expired)'));\n              } else {\n                return reject(new Error('EasyVK can not recognize this token authentication type'));\n              }\n            });\n\n            if (json) {\n              if (Array.isArray(json) && json.length === 0) {\n                return reject(self._error('access_token_not_valid'));\n              } else {\n                session = {\n                  access_token: session.access_token\n                };\n                session.group_id = json[0].id;\n                session.group_name = json[0].name;\n                session.group_screen = json[0].screen_name;\n\n                for (let i = 0; i < params.fields.length; i++) {\n                  if (json[0][params.fields[i]]) {\n                    session[params.fields[i]] = json[0][params.fields[i]];\n                  }\n                }\n\n                self.session = new EasyVKSession(self, session);\n                initResolve(self);\n              }\n            }\n          } else {\n            return reject(self._error('empty_response', {\n              response: vkr,\n              where: 'in auth with token (group)'\n            }));\n          }\n        }).catch(e => reject(e));\n      }\n\n      function getConnectedUtil(UtilObject) {\n        if (typeof UtilObject === 'function') return new UtilObject(self);\n        return UtilObject;\n      }\n\n      function connectUtil(prop, util, connectBool) {\n        if (connectBool === undefined) {\n          connectBool = params.utils[prop] !== false;\n        }\n\n        if (connectBool) {\n          if (Array.isArray(util)) {\n            let utilsWrapper = {};\n            util.forEach(util => {\n              utilsWrapper[util[0]] = getConnectedUtil(util[1]);\n            });\n            Object.defineProperty(self, prop, {\n              value: utilsWrapper\n            });\n          } else {\n            Object.defineProperty(self, prop, {\n              value: getConnectedUtil(util)\n            });\n          }\n        } else {\n          Object.defineProperty(self, prop, {\n            get: () => {\n              throw new Error(`This util not connected. Make params.utils[${prop}] = true in easyvk options`);\n            }\n          });\n        }\n      }\n\n      function initResolve(s) {\n        if (params.clear) {\n          fs__default['default'].writeFileSync(params.session_file, '{}');\n        }\n\n        let httpConnetBool = params.utils.http !== false && self.session.user_id || params.utils.http === true;\n        let botsConnectBool = params.utils.bots !== false && (self.session.group_id || self.session.user_id) || params.utils.bots === true;\n        let longpollConnectBool = params.utils.longpoll !== false && self.session.user_id || params.utils.longpoll === true;\n        connectUtil('uploader', EasyVKUploader);\n        connectUtil('widgets', Widgets);\n        connectUtil('streamingAPI', StreamingAPIConnector);\n        connectUtil('callbackAPI', CallbackAPIConnector);\n        connectUtil('http', HTTPEasyVK, httpConnetBool);\n        connectUtil('longpoll', LongPollConnector, longpollConnectBool);\n        connectUtil('bots', [['longpoll', LongPollConnector$1], ['cb', self.callbackAPI ? self.callbackAPI : CallbackAPIConnector]], botsConnectBool);\n        self._static = new StaticMethods({\n          userAgent: params.userAgent,\n          debug: self.debug\n        }, self.params);\n        self.config = configuration; // Here is a middlewares will be saved\n\n        self.middleWares = [async data => {\n          let next = data.next;\n          data.next = undefined;\n          await next(data);\n        }];\n        self._middlewaresController = new MiddlewaresMechanism(self); // http module for http requests from cookies and jar session\n        // Re init all cases\n\n        self.session = new EasyVKSession(self, self.session);\n\n        if (params.save_session) {\n          return self.session.save().then(() => {\n            return resolve(s);\n          }).catch(reject);\n        }\n\n        return resolve(s);\n      }\n    });\n  }\n\n  async post(methodName, data, other) {\n    let self = this;\n    return new Promise((resolve, reject) => {\n      return self.call(methodName, data, 'post', other).then(resolve, reject);\n    });\n  }\n  /**\r\n  *\r\n  *Function for calling to methods and get anything form VKontakte API\r\n  *See more: https://vk.com/dev/methods\r\n  *\r\n  *@param {String} methodName - Is just a method name which you need to call and get data,\r\n  *  for example: \"messages.send\", \"users.get\"\r\n  *@param {Object} [data={}] - Is data object for query params, it will be serialized from object to uri string.\r\n  *  If vk.com asks a parameters, you can send they.\r\n  *  (Send access_token to this from session is not necessary, but also you can do this)\r\n  *@param {String} [methodType=get] - Is type for query, [\"post\", \"delete\", \"get\", \"put\"]\r\n  *\r\n  *  @return {Promise}\r\n  *  @promise Call to a method, send request for VKontakte API\r\n  *  @resolve {Object} - Standard object like {vk: EasyVK, vkr: Response}\r\n  *  @reject {Error} - vk.com error response or node-fetch module error\r\n     *\r\n  */\n\n\n  async call(methodName, data = {}, methodType = 'get', other = {}) {\n    let self = this;\n    let {\n      middleWare\n    } = other;\n    let highloadStack = null;\n    return new Promise((resolve, reject) => {\n      async function reCall(_needSolve, _resolverReCall, _rejecterReCall) {\n        methodType = String(methodType).toLowerCase();\n\n        if (methodType !== 'post') {\n          methodType = 'get';\n        }\n\n        if (!StaticMethods.isObject(data)) reject(new Error('Data must be an object'));\n        if (!data.access_token) data.access_token = self.session.access_token;\n        if (!data.v) data.v = self.params.api_v;\n        if (!data.captcha_sid && self.params.captcha_sid) data.captcha_sid = self.params.captcha_sid;\n        if (!data.captcha_key && self.params.captcha_key) data.captcha_key = self.params.captcha_key;\n\n        if (!data.lang && self.params.lang && self.params.lang !== 'undefined') {\n          data.lang = self.params.lang || 'ru';\n        }\n\n        if (middleWare && typeof middleWare === 'function') {\n          data = await middleWare(data);\n        }\n\n        let thread = {\n          methodType,\n          method: methodName,\n          query: data,\n          _needSolve\n        };\n        let FromMiddleWare = await self._middlewaresController.run(thread);\n        methodName = FromMiddleWare.method;\n        methodType = FromMiddleWare.methodType;\n        data = FromMiddleWare.query;\n        return self._static.call(methodName, data, methodType, self._debugger, self.agent, {\n          signal: other.signal,\n          userAgent: self.params.userAgent\n        }).then(vkr => {\n          if (_needSolve) {\n            try {\n              _resolverReCall(true);\n            } catch (e) {}\n          }\n\n          if (highloadStack) {\n            highloadStack.forEach((stack, i) => {\n              if (i === highloadStack.length - 1) {\n                return resolve(vkr);\n              }\n\n              return stack.resolve(vkr);\n            });\n          } else {\n            return resolve(vkr);\n          }\n        }).catch(err => {\n          try {\n            if (err.highload) {\n              data = {\n                access_token: err.highload.token || self.params.access_token,\n                ...err.highload.data\n              };\n              highloadStack = err.highload.stack;\n              methodName = 'execute';\n            }\n\n            self._catchCaptcha({\n              err,\n              reCall,\n              _needSolve,\n              _resolverReCall,\n              _rejecterReCall,\n              data,\n              reject\n            });\n          } catch (e) {\n            if (highloadStack) {\n              highloadStack.forEach((stack, i) => {\n                if (i === highloadStack.length - 1) {\n                  return reject(err);\n                }\n\n                return stack.reject(err);\n              });\n            } else {\n              reject(err);\n            }\n          }\n        });\n      }\n\n      reCall();\n    });\n  }\n\n  _catchCaptcha(params = {}) {\n    let self = this;\n    let {\n      err,\n      reCall,\n      _needSolve,\n      _rejecterReCall,\n      data,\n      reject\n    } = params;\n    let vkr = JSON.parse(err.message);\n\n    if (vkr.error === 'need_captcha' || vkr.error.error_code === 14) {\n      if (_needSolve) {\n        try {\n          _rejecterReCall({\n            error: false,\n            reCall: () => {\n              return reCall();\n            }\n          });\n        } catch (e) {}\n\n        return;\n      } // Captcha error, handle it\n\n\n      const captchaSid = vkr.error.captcha_sid || vkr.captcha_sid;\n      const captchaImg = vkr.error.captcha_img || vkr.captcha_img;\n      let paramsForHandler = {\n        captcha_sid: captchaSid,\n        captcha_img: captchaImg,\n        vk: self,\n        params: data\n      };\n\n      paramsForHandler.resolve = captchaKey => {\n        return new Promise((resolve, reject) => {\n          data.captcha_key = captchaKey;\n          data.captcha_sid = captchaSid;\n\n          try {\n            reCall('NEED SOLVE', resolve, reject, data);\n          } catch (errorRecall) {\n            /* Need pass it */\n          }\n        });\n      };\n\n      self.captchaHandler(paramsForHandler);\n    } else {\n      reject(err);\n    }\n  } // Ony for mer\n\n\n  _error(...args) {\n    let self = this;\n    return self._errors.error(...args);\n  }\n\n}\n\nconst is = (obj1, obj2) => Object.getPrototypeOf(obj1).constructor.name === obj2;\n\nconst classes = {\n  VKResponse: 'VKResponse',\n  VKResponseError: 'VKResponseError',\n  EasyVKError: 'EasyVKError'\n};\nconst version = '2.8.2';\nconst callbackAPI = new CallbackAPIConnector({});\nconst streamingAPI = new StreamingAPIConnector({});\nconst debuggerRun = new RequestsDebugger(Boolean(false));\nconst authTypes$1 = ['user', 'group', 'app'];\n/**\n *\n *  This function check all parameters\n *  @see createSession()\n *  @return {Promise}\n *  @promise Check errors\n *  @resolve {Object} changed user parameters for create session\n *  @reject {Error} auth error or just an error from responses\n *\n */\n\nasync function checkInitParams(params = {}) {\n  return new Promise((resolve, reject) => {\n    if (params.save !== undefined) {\n      params.save_session = params.save;\n    }\n\n    if (params.token !== undefined) {\n      params.access_token = params.token;\n    }\n\n    if (params.v !== undefined) {\n      params.api_v = params.v;\n    }\n\n    if (params.captchaSid !== undefined) {\n      params.captcha_sid = params.captchaSid;\n    }\n\n    if (params.captchaKey !== undefined) {\n      params.captcha_key = params.captchaKey;\n    }\n\n    if (params.clientId !== undefined) {\n      params.client_id = params.clientId;\n    }\n\n    if (params.clientSecret !== undefined) {\n      params.client_secret = params.clientSecret;\n    }\n\n    if (params.sessionFile !== undefined) {\n      params.session_file = params.sessionFile;\n    }\n\n    if (params.save_session !== false) {\n      params.save_session = configuration.save_session;\n    }\n\n    if (params.session_file) {\n      if (!StaticMethods.isString(params.session_file)) {\n        return reject(new Error('The session_file must be a string'));\n      }\n    } else {\n      params.session_file = configuration.session_file;\n    }\n\n    if (params.api_v && params.api_v !== configuration.api_v) {\n      if (isNaN(params.api_v.toString())) {\n        return reject(new Error('The api_v parameter must be numeric'));\n      } else if (Number(params.api_v) < 5) {\n        return reject(new Error('The api_v parameter must be more then 5.0 version, other not support'));\n      }\n    } else {\n      params.api_v = configuration.api_v;\n    }\n\n    if (params.captcha_key && !params.captcha_sid) {\n      return reject(new Error('You puted captcha_key but not using captcha_sid parameter'));\n    } else if (!params.captcha_key && params.captcha_sid) {\n      return reject(new Error('You puted captcha_sid but not puted captcha_key parameter'));\n    } else if (params.captcha_key && params.captcha_sid) {\n      if (isNaN(params.captcha_sid.toString())) {\n        return reject(new Error('The captcha_sid must be numeric'));\n      }\n    }\n\n    if (params.reauth !== true) {\n      params.reauth = configuration.reauth;\n    }\n\n    if (params.reauth) {\n      if (params.access_token && params.username) {\n        return reject(new Error('Select only one way auth: access_token XOR username'));\n      }\n\n      if (params.access_token) {\n        if (!StaticMethods.isString(params.access_token)) {\n          return reject(new Error('The access_token must be a string'));\n        }\n      }\n\n      if (params.username && !params.password) {\n        return reject(new Error('Put password if you want aut with username'));\n      }\n\n      if (params.username && params.password) {\n        params.username = params.username.toString();\n        params.password = params.password.toString();\n      }\n    }\n\n    if (!params.client_id || !params.client_secret) {\n      params.client_id = configuration['ANDROID_CLIENT_ID'];\n      params.client_secret = configuration['ANDROID_CLIENT_SECRET'];\n    }\n\n    params.lang = String(params.lang);\n\n    if (!params.lang) {\n      params.lang = 'ru';\n    }\n\n    if (StaticMethods.isString(params.fields)) {\n      params.fields = params.fields.split(',');\n    }\n\n    if (!params.fields || !Array.isArray(params.fields)) {\n      params.fields = [];\n    } else {\n      params.fields = params.fields.map(a => String(a));\n    }\n\n    if (!params.userAgent) {\n      params.userAgent = configuration.DEFAULT_USER_AGENT;\n    }\n\n    if (!params.utils) {\n      params.utils = configuration.DEFAULT_UTILS;\n    }\n\n    if (!params.mode) {\n      params.mode = '';\n    }\n\n    if (StaticMethods.isString(params.mode)) {\n      params.mode = {\n        name: params.mode\n      };\n    }\n\n    if (!params.mode.name) {\n      params.mode.name = 'default';\n    }\n\n    if (params.authType && authTypes$1.indexOf(params.authType) === -1) {\n      return reject(new Error('Auth type must be contents in ' + JSON.stringify(authTypes$1)));\n    } else if (params.authType && !params.access_token) {\n      params.authType = null;\n    }\n\n    if (params.debug && !(params.debug instanceof Debugger)) return reject(new Error('Debug parameter must instances only from Debugger class'));\n    if (params.onlyInstance !== true) params.onlyInstance = false;\n    resolve(params);\n  });\n}\n/*\n *  This function check you easyVK(params) parameters\n *  @param {Object} params - Settings for authentication, for create session\n *  @param {Boolean} [params.save_session=true] - If is true then session will be saved in params.session_file file\n *  @param {(String|Number)} [params.api_v=5.73] - API version for all requests, I am\n *  recommend you use API version >= 5\n *  @param {String} [params.access_token=] - Your access token, group or user. If is user token then\n *  easyVK will get user_id for you, else [group_id, screen_name, group_name] for session file\n *  @param {String|Number} [params.username] - Your login for authenticate, your_email@example.com or +7(916)7888886 (example)\n *  It need only if you puted params.password and not puted params.access_token parameter\n *  @param {String|Number} [params.password] - Your password for user account, it will be authenticated\n *  from windows app_id, from official client. I am not saving your data for hack, all is opened for you\n *  @param {Boolean} [params.reauth=false] - Need ignore session file and log in with newest parameters?\n *  @param {String} [params.session_file=.vksession] - Path for your session file, i am recommend you to use the path module\n *  for create path.join(__dirname, '.session-vk')\n *  @param {String|Number} [params.code] - Is your code from application which generate your 2-factor-auth\n *  code\n *  @param {String} [params.captcha_key] - Is your code from captcha, only if you got an error and not solved it\n *  before\n *  @param {String|Number} [params.captcha_sid] - Is a captcha id from captcha error, if you got it and not solved before\n *  @param {Function|Async Function} [params.captchaHandler] - Is a captcha Handler function for\n *  handle all captcha errors\n *\n *  @promise Authenticate you and create session\n *  @resolve {Object} EasyVK object, which contents session and all methods\n *  for work with VKontakte API\n *\n */\n\n\nconst Auth = async (params = {}) => {\n  return checkInitParams(params).then(p => {\n    let vk = new EasyVK(p, debuggerRun);\n    return vk._init();\n  });\n}; // That's realy bad :(\n\n\nAuth.static = StaticMethods;\nAuth.debuggerRun = debuggerRun;\nAuth.Debugger = Debugger;\nAuth.callbackAPI = callbackAPI;\nAuth.call = StaticMethods.call;\nAuth.randomId = StaticMethods.randomId;\nAuth.createExecute = StaticMethods.createExecute;\nAuth.authTypes = authTypes$1;\nAuth.version = version;\nAuth.streamingAPI = streamingAPI;\nAuth.is = is;\nAuth.class = classes;\nAuth.AbortController = AbortController;\nmodule.exports = Auth;","map":{"version":3,"sources":["C:/Users/denis/Desktop/archive/reactApp/node_modules/easyvk/lib/bundle.js"],"names":["EventEmitter","require","https","querystring","path","qs","fetch","url","fs","mime","FormData","http","bodyParser","WS","encoding","CookieStore","toughCookie","ProxyAgent","_interopDefaultLegacy","e","EventEmitter__default","https__default","querystring__default","path__default","qs__default","fetch__default","fs__default","mime__default","FormData__default","http__default","bodyParser__default","WS__default","encoding__default","CookieStore__default","ProxyAgent__default","EventContext","constructor","type","event","moment","Date","toString","message","JSON","stringify","Debugger","props","_onRequest","bind","_onResponse","on","_toRaw","EVENT_RESPONSE_TYPE","EVENT_REQUEST_TYPE","_toUpper","s","String","replace","x","toUpperCase","slice","responseEvent","emit","requestEvent","VKResponseReturner","staticMethods","dataResponse_","returnConstructor","response_","res","response","undefined","constructorName","name","Constructor","global","Object","VKResponse","isString","isNaN","Boolean","Array","isArray","forEach","a","i","isObject","self","_props","canChanged","prop","settings","value","indexOf","configurable","defineProperty","enumerable","getFullResponse","PROTOCOL","BASE_DOMAIN","configuration","api_v","reauth","save_session","session_file","join","process","cwd","MOBILE_SUBDOMAIN","BASE_CALL_URL","BASE_OAUTH_URL","ANDROID_CLIENT_ID","ANDROID_CLIENT_SECRET","HTTP_CLIENT","USER_AGENT","COOKIE_PATH","DEFAULT_USER_AGENT_STATIC","DEFAULT_UTILS","DEFAULT_USER_AGENT","VKResponseError","Error","code","request","banInfo","error_code","request_params","error_msg","ban_info","StaticMethods","evkParams","params","mode","_requests","canComplete","timeout","Number","createExecute","method","v","lang","n","prototype","call","checkJSONErrors","vkr","reject","parse","err","checkErrors","urlencode","object","keys","map","encodeURIComponent","error","error_description","validation_type","match","validation_sid","redirect_uri","methodName","data","methodType","debuggerIS","Agent","Promise","resolve","methodTypeLower","toLocaleLowerCase","userAgent","callParams","data2","assign","agent","body","headers","debug","query","section","push","options","host","req","abortListener","abort","get","signal","removeEventListener","setEncoding","chu","parseResponse","addEventListener","then","text","catch","json","queryData","randomId","peerId","parseInt","getTime","Math","floor","random","_completeExecute","token","requests","stack","execCode","execs","execsData","requestExec","exec","access_token","vkrFull","errorIndex","val","execute_errors","length","highload","initHighLoadRequest","accessToken","timeoutId","clearTimeout","complete","setTimeout","arguments","RequestsDebugger","logData","splice","lastLog","EasyVKUploader","vk","_vk","uploadFetchedFile","fileUrl","fieldName","paramsUpload","_error","parameter","format","required","fetchingFileUrl","filename","split","pop","_agent","buff","buffer","form","extension","append","custom","uploadFile","filePath","ReadStream","__dirname","stream","createReadStream","param","getHeaders","upload","getUrlMethod","saveMethod","file","getUrlParams","saveParams","uploadParams","isWeb","uploadUrlField","returnAll","getUploadURL","uploadMethod","upload_url","MiddlewaresMechanism","instance","middleWares","next","use","middleWare","rejectMiddleware","Function","p","resNext","console","log","run","thread","setupedMiddleWare","context","changedThread","AbortSignal","aborted","args","removeListener","AbortController","LongPollConnection","lpSettings","config","userListeners","abortController","supportEventTypes","_middlewaresController","init","reconnect","userConfig","forGetLongPollServer","longpollServer","server","longpollTs","ts","longpollKey","key","forLongPollServer","_w","httpsPref","substr","act","version","wait","_debug","lpConnection","_debugger","updates","upd","_checkUpdates","failed","_debugg","len","updateIndex","typeEvent","addEventCodeListener","eventCode","handler","close","time","debugg","warn","LongPollConnector","connect","lp_version","use_ssl","forLongPoll","responseGetServer","con","CallbackAPI","__initVKRequest","postData","group_id","status","send","description","group","_cbparams","groups","secret","confirmCode","__init404Error","__initApp","app","post","createServer","_server","listen","port","env","PORT","CallbackAPIConnector","callbackParams","groupId","session","grTemp","registered","elem","index","confirmToken","cbserver","StreamingAPIConnection","wsc","_session","_wsc","_urlHttp","endpoint","_key","__initWebSocket","__initMessage","r","msgBody","event_type","service_message","__MRHTTPURL","queryParams","addRule","tag","rule","MRHTTPParams","deleteRule","getRules","deleteAllRules","rules","del","initRules","rulesObject","callBackError","startedRules","changedRules","stRulesObject","tags","addedRules","deletedRules","l","iN","initRule","initAddRule","lastValue","newValue","where","from","nextAdd","hasOwnProperty","StreamingAPIConnector","applicationParams","initConnect","vkrURL","streamingSession","client","_StreamingAPIConnecton","clientId","clientSecret","__credentials_flow_type","client_id","client_secret","getParams","grant_type","Widgets","getLiveViews","videoSourceId","alVideoUrl","video","oid","vid","user_agent","convert","matCH","hash","getVideoViewsQueryParams","countViews","payload","LongPollConnection$1","closed","LongPollConnector$1","EasyVKSession","dataSession","save","buf","Buffer","writeFile","clear","setPath","HTTPEasyVKClient","_jar","httpVk","parser","_config","headersRequest","LOGIN_ERROR","_authjar","_parser","isMobile","fullRequest","getOriginResponse","mobile","XML","_origin","textConverted","utf8","retOnlyBody","_parseResponse","ip_h","role","to","autoParse","goDesktop","goMobile","requestMobile","_parseJSON","HTTPEasyVK","__checkHttpParams","cookies","_e","loginByForm","pass","password","login","username","captchaSid","captcha_sid","captchaKey","captcha_key","checkCodeUrl","captchaHandler","cookiepath","existsSync","closeSync","openSync","readFileSync","jar","CookieJar","getJarFetch","createClient","vHttp","actCheckLogin","goLogin","writeFileSync","makeAuthWithoutCode","_needSolve","_resolverReCall","_rejecterReCall","getData","captchaUrl","captcha_img","_catchCaptcha","reCall","is2fa","isWrong","remember","cache","matches","POSTLoginFormUrl","actLogin","checkAuth","al","gid","im_v","rs","captchaImg","paramsForHandler","errorRecall","loginURL","makeAuth","errText","checkCodeURL","checkCodeData","_ajax","email","HTTPClient","myFetch","getCookiesSync","cookie","opts","redirect","raw","Cookie","promises","setCookie","all","isRedirect","optsForGet","follow","errors","EasyVKError","easyvk_error","EasyVKErrors","_errors","parent","_lang","stringId","notHaveError","setLang","easyVKErrors","authTypes","EasyVK","debuggerRun","t","d","debugger","_init","proxy","URL","auth","keepAlive","keepAliveMsecs","defaultDataParams","WINDOWS_CLIENT_ID","WINDOWS_CLIENT_SECRET","initResolve","authType","initToken","groupToken","appToken","device_id","libverify_support","scope","prepareRequest","statusText","completeSession","credentials_flow","onlyInstance","user_id","validatePhoneData","api_id","sid","prepareResponse","generateSessionFromResponse","rej","getDataObject","Obj","fields","id","first_name","last_name","items","app_id","app_title","title","app_type","app_icons","icon_75","icon_150","author","author_id","app_members","members_count","group_name","group_screen","screen_name","getConnectedUtil","UtilObject","connectUtil","util","connectBool","utils","utilsWrapper","httpConnetBool","botsConnectBool","bots","longpollConnectBool","longpoll","callbackAPI","_static","other","highloadStack","toLowerCase","FromMiddleWare","is","obj1","obj2","getPrototypeOf","classes","streamingAPI","authTypes$1","checkInitParams","sessionFile","Auth","static","class","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar EventEmitter = require('events');\nvar https = require('https');\nvar querystring = require('querystring');\nvar path = require('path');\nvar qs = require('qs');\nvar fetch = require('node-fetch');\nvar url = require('url');\nvar fs = require('fs');\nvar mime = require('mime-types');\nvar FormData = require('form-data');\nvar http = require('http');\nvar bodyParser = require('body-parser');\nvar WS = require('ws');\nvar encoding = require('encoding');\nvar CookieStore = require('tough-cookie-file-store');\nvar toughCookie = require('tough-cookie');\nvar ProxyAgent = require('proxy-agent');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar EventEmitter__default = /*#__PURE__*/_interopDefaultLegacy(EventEmitter);\nvar https__default = /*#__PURE__*/_interopDefaultLegacy(https);\nvar querystring__default = /*#__PURE__*/_interopDefaultLegacy(querystring);\nvar path__default = /*#__PURE__*/_interopDefaultLegacy(path);\nvar qs__default = /*#__PURE__*/_interopDefaultLegacy(qs);\nvar fetch__default = /*#__PURE__*/_interopDefaultLegacy(fetch);\nvar fs__default = /*#__PURE__*/_interopDefaultLegacy(fs);\nvar mime__default = /*#__PURE__*/_interopDefaultLegacy(mime);\nvar FormData__default = /*#__PURE__*/_interopDefaultLegacy(FormData);\nvar http__default = /*#__PURE__*/_interopDefaultLegacy(http);\nvar bodyParser__default = /*#__PURE__*/_interopDefaultLegacy(bodyParser);\nvar WS__default = /*#__PURE__*/_interopDefaultLegacy(WS);\nvar encoding__default = /*#__PURE__*/_interopDefaultLegacy(encoding);\nvar CookieStore__default = /*#__PURE__*/_interopDefaultLegacy(CookieStore);\nvar ProxyAgent__default = /*#__PURE__*/_interopDefaultLegacy(ProxyAgent);\n\nclass EventContext {\n  constructor (type, event = {}) {\n    this.type = type;\n    this.moment = new Date();\n    this.event = event;\n  }\n  toString () {\n    return `[${this.moment.toString()}]\\n${this.message ? this.message : JSON.stringify(this, null, '  ')}`\n  }\n}\n\nclass Debugger extends EventEmitter__default['default'] {\n  constructor (...props) {\n    super(...props);\n\n    this._onRequest = this._onRequest.bind(this);\n    this._onResponse = this._onResponse.bind(this);\n\n    this.on(Debugger._toRaw(Debugger.EVENT_RESPONSE_TYPE), this._onResponse);\n    this.on(Debugger._toRaw(Debugger.EVENT_REQUEST_TYPE), this._onRequest);\n  }\n\n  static _toUpper (s) {\n    return String(s).replace(/^(.*){0,1}/, x => x[0].toUpperCase() + x.slice(1))\n  }\n\n  static _toRaw (s) {\n    return 'raw' + Debugger._toUpper(s)\n  }\n\n  _onResponse (responseEvent = {}) {\n    return this.emit('response', new EventContext(Debugger.EVENT_RESPONSE_TYPE, responseEvent))\n  }\n\n  _onRequest (requestEvent = {}) {\n    return this.emit('request', new EventContext(Debugger.EVENT_REQUEST_TYPE, requestEvent))\n  }\n}\n\nconst EVENT_REQUEST_TYPE = 'request';\nconst EVENT_RESPONSE_TYPE = 'response';\n\nconst VKResponseReturner = function (staticMethods, dataResponse_, returnConstructor) {\n  let response_ = dataResponse_;\n\n  let res = response_.response;\n\n  if (res === undefined || res === null) res = response_;\n\n  let constructorName = (res).constructor.name;\n  let Constructor = global[constructorName];\n\n  if (!Constructor) Constructor = Object;\n\n  class VKResponse extends Constructor {\n    constructor (res) {\n      if ((staticMethods.isString(res) || !isNaN(res) || res instanceof Boolean) && constructorName !== 'Array') {\n        super(res);\n      } else if (Array.isArray(res) || constructorName === 'Array') {\n        super(...res);\n        res.forEach((a, i) => {\n          this[i] = a;\n        });\n      } else if (staticMethods.isObject(res)) {\n        super();\n\n        let self = this;\n\n        let _props = {\n          response: res\n        };\n\n        let canChanged = ['response'];\n\n        for (let prop in _props) {\n          let settings = {\n            value: _props[prop]\n          };\n\n          if (canChanged.indexOf(prop) !== -1) {\n            settings.configurable = true;\n          }\n\n          Object.defineProperty(self, prop, settings);\n        }\n\n        // Use session data with methods\n        for (let prop in self.response) {\n          Object.defineProperty(self, prop, {\n            enumerable: true,\n            configurable: true,\n            value: self.response[prop]\n          });\n        }\n      } else {\n        super(res);\n      }\n\n      return this\n    }\n\n    getFullResponse () {\n      return response_\n    }\n  }\n\n  if (returnConstructor) {\n    return VKResponse\n  }\n\n  return new VKResponse(res)\n};\n\nconst PROTOCOL = 'https';\nconst BASE_DOMAIN = 'vk.com';\n\nvar configuration = {\n\n  api_v: '5.101',\n  reauth: false,\n  save_session: true,\n  session_file: path__default['default'].join(process.cwd(), './vksession'),\n\n  PROTOCOL,\n  BASE_DOMAIN,\n  MOBILE_SUBDOMAIN: 'm',\n\n  BASE_CALL_URL: PROTOCOL + '://' + 'api.' + BASE_DOMAIN + '/method/',\n  BASE_OAUTH_URL: PROTOCOL + '://' + 'oauth.' + BASE_DOMAIN + '/',\n\n  ANDROID_CLIENT_ID: '2274003',\n  ANDROID_CLIENT_SECRET: 'hHbZxrka2uZ6jB1inYsH',\n\n  HTTP_CLIENT: {\n    USER_AGENT: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',\n    COOKIE_PATH: path__default['default'].join(process.cwd(), '.evk-cookies.json')\n  },\n\n  DEFAULT_USER_AGENT_STATIC: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',\n\n  DEFAULT_UTILS: {},\n  DEFAULT_USER_AGENT: 'VKAndroidApp/6.2-5112 (Android 6.0; SDK 23; arm64-v8a; alps Razar; ru; 1280x720)'\n};\n\n// This is an object error for know: code, message, desciption and other information from stack\n\nclass VKResponseError extends Error {\n  constructor (message, code = 0, request = {}, banInfo = null) {\n    super(message); // generate message\n\n    this.error_code = code;\n    this.request_params = request;\n    this.error_msg = message || code;\n    this.name = 'VKResponseError';\n    this.ban_info = banInfo;\n  }\n}\n\nclass StaticMethods {\n  constructor (settings = {}, evkParams = {}) {\n    this.params = evkParams;\n    this.settings = settings;\n\n    if (evkParams.mode.name === 'highload') {\n      this._requests = {};\n      this.canComplete = true;\n\n      evkParams.mode.timeout = Number(evkParams.mode.timeout);\n\n      if (!evkParams.mode.timeout) {\n        evkParams.mode.timeout = 15;\n      }\n    }\n  }\n\n  static createExecute (method = '', params = {}) {\n    params.v = undefined;\n    params.lang = undefined;\n    return `API.${method}(${JSON.stringify(params)})`\n  }\n\n  static isString (n) {\n    return Object.prototype.toString.call(n) === '[object String]'\n  }\n\n  static isObject (n) {\n    return Object.prototype.toString.call(n) === '[object Object]'\n  }\n\n  static checkJSONErrors (vkr, reject) {\n    let self = this;\n\n    try {\n      vkr = Object.prototype.toString.call(vkr) === '[object Object]' ? vkr : JSON.parse(vkr);\n\n      let err = self.checkErrors(vkr);\n\n      if (err) {\n        if (typeof err === 'string') {\n          // new error\n          err = new Error(err);\n        }\n\n        reject(err);\n        return false\n      }\n\n      return VKResponseReturner(self, vkr)\n    } catch (e) {\n      if (e.name === 'SyntaxError') {\n        let err = new Error('Server sent not a json object (' + vkr + ')');\n\n        return reject(err)\n      }\n\n      return reject(new Error(e))\n    }\n  }\n\n  static urlencode (object = {}) {\n    let self = this;\n\n    return Object.keys(object)\n      .map(prop =>\n        prop + '=' + (\n          (self.isObject(object[prop]))\n            ? (encodeURIComponent(JSON.stringify(object[prop]))) : encodeURIComponent(object[prop])\n        )\n      )\n      .join('&')\n  }\n\n  static checkErrors (vkr) {\n    try {\n      if (vkr.error) {\n        if (vkr.error === 'need_captcha' || vkr.error.error_code === 14) {\n          return JSON.stringify(vkr)\n        } else if (vkr.error === 'need_validation') {\n          if (vkr.ban_info) {\n            return vkr.error_description\n          } else {\n            let type = 'sms';\n\n            if (vkr.validation_type.match('app')) {\n              type = 'app';\n            }\n\n            return {\n              error: `Please, enter your ${type} code in code parameter!`,\n              error_code: vkr.error,\n              validation_type: vkr.validation_type,\n              validation_sid: vkr.validation_sid,\n              redirect_uri: vkr.redirect_uri\n            }\n          }\n        } else if (vkr.error.error_code === 17) {\n          return {\n            redirect_uri: vkr.error.redirect_uri,\n            error: vkr.error.error_msg,\n            error_code: vkr.error.error_code\n          }\n        }\n\n        if (vkr.error.error_msg) {\n          return new VKResponseError(vkr.error.error_msg, vkr.error.error_code, vkr.error.request_params, vkr.error.ban_info)\n        } else if (vkr.error.message) {\n          return new VKResponseError(vkr.error.message, vkr.error.code, vkr.error.params, vkr.error.ban_info)\n        } else {\n          return new VKResponseError(vkr.error_description ? vkr.error_description : vkr.error, vkr.error_code ? vkr.error_code : vkr.error, {}, vkr.ban_info)\n        }\n      }\n    } catch (e) {\n      return e\n    }\n  }\n\n  static async call (methodName, data = {}, methodType = 'get', debuggerIS = null, Agent, settings = {}) {\n    let self = this;\n\n    return new Promise((resolve, reject) => {\n      let methodTypeLower = methodType.toString().toLocaleLowerCase();\n\n      if (methodTypeLower !== 'post') {\n        methodType = 'get';\n      }\n\n      if (!methodName) {\n        return reject(new Error('Put method name in your call request!'))\n      }\n\n      if (!data.v) {\n        data.v = configuration.api_v;\n      }\n\n      if (!settings.userAgent) {\n        settings.userAgent = self.params ? configuration.DEFAULT_USER_AGENT : configuration.DEFAULT_USER_AGENT_STATIC;\n      }\n\n      let callParams = {\n        url: configuration.BASE_CALL_URL + methodName\n      };\n\n      let data2 = Object.assign({}, data);\n\n      if (methodType === 'post') {\n        // prepare post request\n        callParams.agent = Agent;\n\n        callParams.body = qs__default['default'].stringify(data);\n        callParams.headers = {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          'User-agent': settings.userAgent\n        };\n\n        if (settings.debug) {\n          settings.debug(EVENT_REQUEST_TYPE, {\n            url: callParams.url,\n            method: 'POST',\n            query: data,\n            section: 'vk.call'\n          });\n        }\n      }\n\n      if (debuggerIS) {\n        try {\n          debuggerIS.push('fullRequest', callParams);\n        } catch (e) {\n          return reject(new Error('No have a complite debuggerIS'))\n        }\n      }\n\n      if (methodType === 'get') {\n        data = querystring__default['default'].stringify(data);\n\n        let options = {\n          host: 'api.' + configuration.BASE_DOMAIN,\n          agent: Agent,\n          path: '/method/' + methodName + '?' + data,\n          headers: {\n            'User-Agent': settings.userAgent\n          }\n        };\n\n        if (settings.debug) {\n          settings.debug(EVENT_REQUEST_TYPE, {\n            url: 'https://' + options.host + options.path,\n            method: 'GET',\n            query: data,\n            section: 'vk.call'\n          });\n        }\n\n        let req;\n\n        const abortListener = () => {\n          req.abort();\n          let err = new Error('Request aborted!');\n          err.code = 'aborted';\n          err.type = err.code;\n          return reject(err)\n        };\n\n        req = https__default['default'].get(options, (res) => {\n          if (settings.signal) {\n            settings.signal.removeEventListener('abort', abortListener);\n          }\n\n          let vkr = '';\n          res.setEncoding('utf8');\n          res.on('data', (chu) => {\n            vkr += chu;\n          });\n          res.on('end', () => { return parseResponse(vkr) });\n        }).on('error', (e) => {\n          if (settings.signal) {\n            settings.signal.removeEventListener('abort', abortListener);\n          }\n\n          try {\n            reject(e);\n          } catch (err) {\n            throw e\n          }\n        });\n\n        if (settings.signal) {\n          settings.signal.addEventListener('abort', abortListener);\n        }\n      } else {\n        callParams.method = 'POST';\n        callParams.signal = settings.signal;\n\n        fetch__default['default'](callParams.url, callParams).then(async (res) => {\n          res = await res.text();\n\n          if (debuggerIS) {\n            try {\n              debuggerIS.push('response', res);\n            } catch (e) {}\n          }\n\n          if (settings.debug) {\n            settings.debug(EVENT_RESPONSE_TYPE, {\n              body: res,\n              section: 'vk.call'\n            });\n          }\n\n          try {\n            res = JSON.parse(res);\n          } catch (e) {\n            e.body = res;\n            e.type = 'invalid-json';\n            return reject(e)\n          }\n\n          return parseResponse(res)\n        }).catch(e => {\n          if (e.type === 'aborted') e.code = e.type;\n          reject(e);\n        });\n      }\n\n      async function parseResponse (vkr) {\n        if (vkr) {\n          if (debuggerIS) {\n            try {\n              debuggerIS.push('response', vkr);\n            } catch (e) {}\n          }\n\n          if (settings.debug) {\n            settings.debug(EVENT_RESPONSE_TYPE, {\n              body: vkr,\n              section: 'vk.call'\n            });\n          }\n\n          let json = self.checkJSONErrors(vkr, reject);\n\n          if (json) {\n            json.queryData = data2;\n\n            return resolve(json)\n          } else {\n            return reject(new Error(\"JSON is not valid... oor i don't know\"))\n          }\n        } else {\n          return reject(new Error(`Empty response ${vkr}`))\n        }\n      }\n    })\n  }\n\n  static randomId (peerId = 0) {\n    return parseInt(new Date().getTime() + '' + peerId + '' + Math.floor(Math.random() * 10000), 10)\n  }\n\n  async _completeExecute (token = '', Agent, settings) {\n    if (!token) throw new Error('Unused token')\n\n    let requests = this._requests[token];\n\n    if (!requests.stack) throw new Error('Unknow error')\n\n    let execCode;\n    let execs = [];\n    let execsData = [];\n    let stack = [...requests.stack];\n\n    requests.stack = [];\n    this.canComplete = true;\n\n    stack.forEach((requestExec) => {\n      execs.push(requestExec.exec);\n      execsData.push(requestExec.data);\n    });\n\n    execCode = `return [${execs.join(',')}];`;\n\n    let data = {\n      access_token: token,\n      v: this.params.api_v,\n      code: execCode\n    };\n\n    if (this.params.lang !== 'undefined') data.lang = this.params.lang;\n    StaticMethods.call('execute', data, 'post', null, Agent, settings).then((vkr) => {\n      let vkrFull = vkr.getFullResponse();\n      let errorIndex = 0;\n      vkr.forEach((val, i) => {\n        let req = stack[i];\n\n        if (val === false) {\n          if (vkrFull.execute_errors) {\n            let err = vkrFull.execute_errors[errorIndex];\n            if (err && execs[i].match(err.method)) { // \"API.messages.send()\".match(\"messages.send\")\n              err = new VKResponseError(err.error_msg, err.error_code, execsData[i].data, err.ban_info);\n              return req.reject(err)\n            }\n          }\n\n          let err = new Error('Error occured in execute method');\n\n          err.response = val;\n          err.request = req;\n          req.reject(err);\n          errorIndex += 1;\n        } else {\n          let vkr = VKResponseReturner(StaticMethods, val);\n          req.resolve(vkr);\n        }\n      });\n    }).catch(err => {\n      let req = stack[stack.length - 1];\n\n      err.highload = {\n        stack,\n        settings,\n        data\n      };\n\n      req.reject(err);\n    });\n  }\n\n  async initHighLoadRequest (method, data, type, debuggerIS, Agent) {\n    let self = this;\n\n    return new Promise((resolve, reject) => {\n      // disable custom version and language in execute methods\n      data.v = undefined;\n      data.lang = undefined;\n\n      data = JSON.parse(JSON.stringify(data));\n\n      let accessToken = data.access_token;\n      data.access_token = undefined;\n\n      let requests = self._requests[accessToken];\n\n      if (!requests) {\n        requests = self._requests[accessToken] = {\n          stack: [],\n          timeoutId: 0\n        };\n      }\n\n      if (requests.timeoutId) {\n        clearTimeout(requests.timeoutId);\n      }\n\n      requests.stack.push({\n        exec: self.createExecute(method, data),\n        data: {\n          method: method,\n          data: data,\n          token: accessToken\n        },\n        resolve,\n        reject\n      });\n\n      function complete () {\n        if (self.canComplete) {\n          self.canComplete = false;\n          self._completeExecute(accessToken, Agent, self.settings);\n        }\n      }\n\n      if (requests.stack.length === 25) {\n        complete();\n        return\n      }\n\n      requests.timeoutId = setTimeout(function () {\n        complete();\n      }, self.params.mode.timeout);\n    })\n  }\n\n  createExecute () {\n    return StaticMethods.createExecute(...arguments)\n  }\n\n  async call () {\n    if (this.params.mode.name === 'highload' && arguments[0] !== 'execute') {\n      return this.initHighLoadRequest(...arguments)\n    }\n\n    return StaticMethods.call(...arguments, this.settings)\n  }\n}\n\nlet stack = [];\n\nclass RequestsDebugger extends EventEmitter__default['default'] {\n  // Push to debugger\n  async push (type = 'response', data) {\n    let self = this;\n\n    let logData = {\n      type: type.toString(),\n      data: data\n    };\n\n    stack.splice(0, 1);\n    stack.push(logData);\n\n    self.emit('push', logData);\n\n    return (stack.length - 1)\n  }\n\n  // Get last log from stack\n  lastLog () {\n    return stack[stack.length - 1]\n  }\n}\n\nclass EasyVKUploader {\n  constructor (vk) {\n    let self = this;\n    self._vk = vk;\n  }\n\n  /*\n   *\n   *  Function for upload file from other server only by fileUrl\n   *\n   */\n  async uploadFetchedFile (url, fileUrl, fieldName = 'file', paramsUpload = {}) {\n    return new Promise((resolve, reject) => {\n      if (!url || !StaticMethods.isString(url)) {\n        return reject(this._vk._error('is_not_string', {\n          parameter: 'url',\n          method: 'uploadFetchedFile',\n          format: 'http(s)://www.domain.example.com/path?request=get'\n        }))\n      }\n\n      if (!fileUrl || (!StaticMethods.isString(fileUrl) && !StaticMethods.isObject(fileUrl))) {\n        return reject(this._vk._error('is_not_string', {\n          parameter: 'fileUrl',\n          method: 'uploadFetchedFile',\n          format: 'https://vk.com/images/community_100.png'\n        }))\n      }\n\n      if (fieldName) {\n        if (!StaticMethods.isString(fieldName)) {\n          return reject(this._vk._error('is_not_string', {\n            parameter: 'fieldName',\n            method: 'uploadFetchedFile',\n            required: false\n          }))\n        }\n      }\n\n      if (!StaticMethods.isObject(paramsUpload)) {\n        paramsUpload = {};\n      }\n\n      if (StaticMethods.isString(fileUrl)) {\n        fileUrl = {\n          url: fileUrl\n        };\n      }\n\n      let fetchingFileUrl = fileUrl.url;\n      let filename = fileUrl.name || fetchingFileUrl.split('/').pop().split('#')[0].split('?')[0];\n\n      if (!filename) {\n        return reject(this._vk._error('is_not_string', {\n          parameter: 'fileUrl.name',\n          method: 'uploadFile',\n          format: 'example.jpeg or example.rar'\n        }))\n      }\n\n      return fetch__default['default'](fetchingFileUrl, {\n        agent: this._agent\n      }).then(async (res) => {\n        let buff = await res.buffer();\n\n        let form = new FormData__default['default']();\n\n        filename = filename || fieldName + '.' + mime__default['default'].extension(res.headers.get('content-type') || 'text/plain');\n\n        form.append(fieldName, buff, {\n          filename\n        });\n\n        return fetch__default['default'](url, {\n          method: 'POST',\n          body: form,\n          agent: this._agent\n        }).then(async (response) => {\n          let vkr = await response.json();\n          if (vkr) {\n            if (paramsUpload.custom) {\n              return resolve(vkr)\n            } else {\n              let json = StaticMethods.checkJSONErrors(vkr, reject);\n\n              if (json) {\n                return resolve(vkr)\n              } else {\n                return reject(this._vk._error('invalid_response', {\n                  response: response\n                }))\n              }\n            }\n          } else {\n            return reject(this._vk._error('empty_response', {\n              response: response\n            }))\n          }\n        })\n      })\n    })\n  }\n\n  /*\n   *\n   *  Function for upload file from local machine\n   *\n   */\n  async uploadFile (url, filePath, fieldName = 'file', paramsUpload = {}) {\n    let self = this;\n    return new Promise((resolve, reject) => {\n      if (!url || !StaticMethods.isString(url)) {\n        return reject(self._vk._error('is_not_string', {\n          parameter: 'url',\n          method: 'uploadFile',\n          format: 'http(s)://www.domain.example.com/path?request=get'\n        }))\n      }\n\n      if (!filePath || !StaticMethods.isString(filePath)) {\n        if (!(filePath instanceof fs__default['default'].ReadStream)) {\n          return reject(self._vk._error('is_not_string', {\n            parameter: 'filePath',\n            method: 'uploadFile',\n            format: path__default['default'].join(__dirname, '..', 'example', 'path')\n          }))\n        }\n      }\n\n      if (fieldName) {\n        if (!StaticMethods.isString(fieldName)) {\n          return reject(self._vk._error('is_not_string', {\n            parameter: 'fieldName',\n            method: 'uploadFile',\n            required: false\n          }))\n        }\n      }\n\n      if (!StaticMethods.isObject(paramsUpload)) {\n        paramsUpload = {};\n      }\n\n      let stream, data;\n\n      stream = (filePath instanceof fs__default['default'].ReadStream) ? filePath : fs__default['default'].createReadStream(filePath);\n      data = new FormData__default['default']();\n\n      Object.keys(paramsUpload)\n        .forEach((param) => {\n          if (param !== fieldName) {\n            data.append(param, paramsUpload[param]);\n          }\n        });\n\n      stream.on('error', (error) => {\n        return reject(new Error(error))\n      });\n\n      stream.on('open', () => {\n        data.append(fieldName, stream);\n        return fetch__default['default'](url, {\n          method: 'POST',\n          body: data,\n          agent: self._agent,\n          headers: {\n            ...(data.getHeaders())\n          }\n        }).then(async (response) => {\n          let vkr = await response.json();\n\n          if (vkr) {\n            if (data.custom) {\n              return resolve(vkr)\n            } else {\n              let json = StaticMethods.checkJSONErrors(vkr, reject);\n\n              if (json) {\n                return resolve(vkr)\n              } else {\n                return reject(self._vk._error('invalid_response', {\n                  response: response\n                }))\n              }\n            }\n          } else {\n            return reject(self._vk._error('empty_response', {\n              response: response\n            }))\n          }\n        }).catch(reject)\n      });\n    })\n  }\n\n  async upload ({\n    getUrlMethod,\n    saveMethod,\n    file,\n    getUrlParams = {},\n    saveParams = {},\n    uploadParams = {},\n    isWeb = false,\n    fieldName = 'file',\n    uploadUrlField = 'upload_url'\n  }, returnAll = false) {\n    return this.getUploadURL(getUrlMethod, getUrlParams, true).then(({ vkr }) => {\n      let url = vkr[uploadUrlField];\n      let uploadMethod = isWeb ? 'uploadFetchedFile' : 'uploadFile';\n\n      return this[uploadMethod](url, file, fieldName, uploadParams).then(vkr => {\n        return this._vk.call(saveMethod, Object.assign(saveParams, vkr))\n      })\n    })\n  }\n\n  async getUploadURL (methodName, params = {}, returnAll = false) {\n    let self = this;\n\n    return new Promise((resolve, reject) => {\n      if (!StaticMethods.isObject(params)) {\n        return reject(self._vk._error('is_not_object', {\n          parameter: 'params',\n          method: 'getUploadURL'\n        }))\n      }\n\n      self._vk.call(methodName, params).then((vkr) => {\n        if (vkr.upload_url) {\n          if (returnAll) {\n            return resolve({\n              url: vkr,\n              vkr: vkr\n            })\n          } else {\n            return resolve(vkr.upload_url)\n          }\n        } else {\n          return reject(self._vk._error('upload_url_error', {\n            response: vkr\n          }))\n        }\n      }, reject);\n    })\n  }\n}\n\nclass MiddlewaresMechanism {\n  constructor (instance = Object) {\n    // this.instance = instance;\n\n    let self = this;\n\n    self.middleWares = [async (data) => {\n      let next = data.next;\n      data.next = undefined;\n      await next(data);\n    }];\n\n    instance.use = function (middleWare = null, rejectMiddleware = Function) {\n      if (middleWare && typeof middleWare === 'function') {\n        self.middleWares.push(async (p) => {\n          let next = p.next;\n          return new Promise((resolve, reject) => {\n            middleWare(p).then(resNext => {\n              if (resNext) return resolve(p)\n              p.next = undefined;\n              return resolve(p)\n            }).catch(async (e) => {\n              if (rejectMiddleware && typeof rejectMiddleware === 'function') {\n                rejectMiddleware(e);\n              } else {\n                console.log(e);\n              }\n\n              return resolve(await next())\n            });\n          })\n        });\n      }\n\n      return this\n    };\n  }\n\n  async run (thread = {}) {\n    let self = this;\n\n    let setupedMiddleWare = 0;\n\n    let context = {};\n\n    context.next = next;\n    context.thread = thread;\n\n    async function next () {\n      let changedThread = context.thread;\n\n      // Call to next middleware\n      setupedMiddleWare += 1;\n\n      for (let prop in changedThread) {\n        if (context.thread[prop] === undefined) { // if it was deleted by middleware, not changed\n          context.thread[prop] = changedThread[prop]; // need add deleted property\n        }\n      }\n\n      // so, now we can use changed data in this new middleware\n      context.next = next;\n      if (self.middleWares[setupedMiddleWare]) {\n        let res = await self.middleWares[setupedMiddleWare](context);\n        // console.log('Res from ', setupedMiddleWare)\n        if (!res) return context\n        return res\n      } else {\n        return context\n      }\n    }\n\n    if (self.middleWares.length) {\n      let res = await self.middleWares[setupedMiddleWare](context);\n\n      if (typeof res !== 'object' || !res) {\n        res = {};\n      }\n\n      for (let prop in context.thread) {\n        if (res[prop] === undefined) {\n          res[prop] = context.thread[prop];\n        }\n      }\n\n      return res\n    }\n\n    return thread\n  }\n}\n\nclass AbortSignal extends EventEmitter__default['default'] {\r\n  constructor () {\r\n    super();\r\n    this.aborted = false;\r\n  }\r\n\r\n  addEventListener (...args) {\r\n    return this.on(...args)\r\n  }\r\n\r\n  removeEventListener (...args) {\r\n    this.removeListener(...args);\r\n    return this\r\n  }\r\n}\r\n\r\nclass AbortController {\r\n  constructor () {\r\n    this.signal = new AbortSignal();\r\n  }\r\n\r\n  async abort () {\r\n    this.signal.aborted = true;\r\n    return this.signal.emit('abort')\r\n  }\r\n}\n\nclass LongPollConnection extends EventEmitter__default['default'] {\n  constructor (lpSettings, vk) {\n    super();\n\n    let self = this;\n\n    self.config = lpSettings;\n    self._vk = vk;\n    self.userListeners = {};\n    self.abortController = new AbortController();\n\n    self.supportEventTypes = {\n      '4': 'message',\n      '8': 'friendOnline',\n      '9': 'friendOffline',\n      '51': 'editChat',\n      '61': 'typeInDialog',\n      '62': 'typeInChat',\n      '3': 'changeFlags'\n    };\n\n    self._middlewaresController = new MiddlewaresMechanism(self);\n\n    init();\n\n    async function reconnect () {\n      return self._vk.call('messages.getLongPollServer', self.config.userConfig.forGetLongPollServer).then((vkr) => {\n        self.config.longpollServer = vkr.server;\n        self.config.longpollTs = vkr.ts;\n        self.config.longpollKey = vkr.key;\n\n        return init() // reconnect with new parameters\n      }).catch((err) => {\n        self.emit('reconnectError', new Error(err));\n      })\n    }\n\n    async function init () {\n      let server, forLongPollServer, _w;\n      let httpsPref = 'https://';\n\n      if (self.config.longpollServer.substr(0, httpsPref.length) !== httpsPref) {\n        self.config.longpollServer = httpsPref + self.config.longpollServer;\n      }\n\n      server = `${self.config.longpollServer}`;\n\n      forLongPollServer = {};\n      _w = null;\n\n      forLongPollServer.act = 'a_check';\n      forLongPollServer.key = self.config.longpollKey;\n      forLongPollServer.ts = self.config.longpollTs;\n      forLongPollServer.mode = self.config.userConfig.forLongPollServer.mode;\n      forLongPollServer.version = self.config.userConfig.forLongPollServer.version;\n      forLongPollServer.wait = self.config.userConfig.forLongPollServer.wait;\n\n      if (isNaN(forLongPollServer.mode)) {\n        forLongPollServer.mode = 8 | 2;\n      }\n\n      if (isNaN(forLongPollServer.version)) {\n        forLongPollServer.version = '2';\n      }\n\n      _w = Number(forLongPollServer.wait);\n\n      let params = {\n        timeout: (_w * 1000) + (1000 * 3),\n        headers: {\n          'connection': 'keep-alive',\n          'content-type': 'application/x-www-form-urlencoded'\n        },\n        agent: self._vk.agent,\n        method: 'GET',\n        signal: self.abortController.signal\n      };\n\n      server = server + '?' + qs__default['default'].stringify(forLongPollServer);\n\n      self._debug({\n        type: 'longPollParamsQuery',\n        data: params\n      });\n\n      self._vk.debug(EVENT_REQUEST_TYPE, {\n        url: server,\n        query: forLongPollServer,\n        method: 'GET',\n        section: 'longpoll'\n      });\n\n      self.lpConnection = fetch__default['default'](server, params).catch((e) => {\n        return reconnect()\n      }).then(async (res) => {\n        if (!res) return false\n        if (!res.json) return res\n        res = await res.json();\n\n        if (self._vk._debugger) {\n          try {\n            self._vk._debugger.push('response', res);\n          } catch (e) {\n            // Ignore\n          }\n        }\n\n        self._vk.debug(EVENT_RESPONSE_TYPE, { body: res, section: 'longpoll' });\n\n        self._debug({\n          type: 'pollResponse',\n          data: res\n        });\n\n        let vkr = res;\n\n        if (vkr.ts) {\n          if (vkr.ts) {\n            self.config.longpollTs = vkr.ts;\n          }\n\n          if (vkr.updates && vkr.updates.length) {\n            vkr.updates.forEach((upd, i) => {\n              vkr.updates[i] = {\n                type: upd[0],\n                object: upd\n              };\n            });\n\n            self._middlewaresController.run(vkr).then(() => {\n              self._checkUpdates(vkr.updates);\n            });\n          }\n\n          return init()\n        }\n\n        if (vkr.failed) {\n          if (vkr.failed === 1) { // update ts\n            if (vkr.ts) {\n              self.config.longpollTs = vkr.ts;\n            }\n\n            return init()\n          } else if ([2, 3].indexOf(vkr.failed) !== -1) { // need reconnect\n            self._vk.call('messages.getLongPollServer', self.config.userConfig.forGetLongPollServer).then((vkr) => {\n              self.config.longpollServer = vkr.server;\n              self.config.longpollTs = vkr.ts;\n              self.config.longpollKey = vkr.key;\n\n              return init() // reconnect with new parameters\n            }).catch((err) => {\n              self.emit('reconnectError', new Error(err));\n            });\n          } else {\n            return self.emit('failure', vkr)\n          }\n        }\n\n        if (vkr.error) {\n          self.emit('error', vkr.error);\n          return reconnect()\n        }\n      }).catch(err => {\n        if (err.toString().match('TIMEDOUT') || err.toString().match('ENOENT') || err.toString().match('timeout')) {\n          return reconnect()\n        }\n        return self.emit('error', err)\n      });\n    }\n  }\n\n  async _debug () {\n    if (this._debugg) {\n      this._debugg(...arguments);\n    }\n  }\n\n  async _checkUpdates (updates) {\n    let self = this;\n\n    let len = updates.length;\n\n    for (let updateIndex = 0; updateIndex < len; updateIndex++) {\n      let typeEvent = updates[updateIndex].type.toString();\n\n      self.emit('update', updates[updateIndex].object);\n      if (self.supportEventTypes[typeEvent]) {\n        typeEvent = self.supportEventTypes[typeEvent];\n        self.emit(typeEvent, updates[updateIndex].object);\n      }\n\n      try {\n        if (self.userListeners[typeEvent]) {\n          self.userListeners[typeEvent](updates[updateIndex].object);\n        }\n      } catch (e) {\n        self.emit('error', e);\n      }\n    }\n  }\n\n  /**\n   *\n   *  If my SDK not support certain event it doesn't mean that my SDK not support it :D\n   *  You can add yours listeners with this function.\n   *\n   *  Docs: vk.com/dev/using_longpoll\n   *\n   *  @param {Number} eventCode number of event which you can find on the docs page\n   *  @param {Function} handler is a handler function\n   *\n   */\n\n  async addEventCodeListener (eventCode, handler) { // Only for create new event listeneres (if there are not in default listeners, you can get a code and add it!)\n    let self = this;\n\n    return new Promise((resolve, reject) => {\n      if (isNaN(eventCode)) {\n        return reject(self._vk._error('is_not_number', {\n          'where': 'LongPoll.addEventCodeListener',\n          'parameter': 'eventCode'\n        }))\n      } else if (Object.prototype.toString.call(handler) !== '[object Function]') {\n        return reject(self._vk._error('is_not_function', {\n          'where': 'LongPoll.addEventCodeListener',\n          'parameter': 'handler'\n        }))\n      } else {\n        eventCode = eventCode.toString();\n\n        if (!self.supportEventTypes[eventCode]) {\n          self.supportEventTypes[eventCode] = eventCode;\n          self.userListeners[eventCode] = handler;\n        } else {\n          return reject(self._vk._error('longpoll_api', {}, 'event_already_have'))\n        }\n      }\n    })\n  }\n\n  async close () {\n    let self = this;\n\n    return new Promise((resolve, reject) => {\n      if (self.lpConnection) {\n        self.emit('close', {\n          time: new Date().getTime()\n        });\n\n        return resolve(self.abortController.abort())\n      } else {\n        return reject(self._vk._error('longpoll_api', {}, 'not_connected'))\n      }\n    })\n  }\n\n  debug (debugg) {\n    let self = this;\n\n    console.warn('[Deprecated method warning] \\nThis method will be deprecated in next releases. Please, use new easyvk.Debugger() and set it up in the easyvk configuration like params.debug = myDebugger');\n\n    if (Object.prototype.toString.call(debugg).match(/function/i)) {\n      self._debugg = debugg;\n    } else {\n      return false\n    }\n\n    return self\n  }\n}\n\nclass LongPollConnector {\n  constructor (vk) {\n    let self = this; // For the future\n    self._vk = vk;\n  }\n\n  async connect (params = {}) {\n    let self = this;\n\n    return new Promise((resolve, reject) => {\n      if (!StaticMethods.isObject(params)) {\n        return reject(self._vk._error('is_not_object', {\n          'where': 'LongPoll.connect',\n          'parameter': 'params'\n        }))\n      } else {\n        if (params.forGetLongPollServer) {\n          if (!StaticMethods.isObject(params.forGetLongPollServer)) {\n            params.forGetLongPollServer = {};\n          }\n        } else {\n          params.forGetLongPollServer = {};\n        }\n\n        if (params.forLongPollServer) {\n          if (!StaticMethods.isObject(params.forLongPollServer)) {\n            params.forLongPollServer = {};\n          }\n        } else {\n          params.forLongPollServer = {};\n        }\n\n        if (isNaN(params.forGetLongPollServer.lp_version)) {\n          params.forGetLongPollServer.lp_version = '2';\n        }\n\n        if (isNaN(params.forLongPollServer.wait)) {\n          params.forLongPollServer.wait = '25';\n        }\n\n        if (params.forGetLongPollServer.use_ssl !== 0) {\n          params.forGetLongPollServer.use_ssl = 1;\n        }\n\n        self._vk.call('messages.getLongPollServer', params.forGetLongPollServer)\n          .then((vkr) => {\n            let forLongPoll = {\n              longpollServer: vkr.server,\n              longpollTs: vkr.ts,\n              longpollKey: vkr.key,\n              responseGetServer: vkr,\n              userConfig: params\n            };\n\n            let con = new LongPollConnection(forLongPoll, self._vk);\n\n            return resolve(con)\n          }, reject);\n      }\n    })\n  }\n}\n\n/*\n *  It's a Callbakc API module for EasyVK\n *  You can use it\n *\n *  Author: @ciricc\n *  License: MIT\n *\n */\n\nclass CallbackAPI extends EventEmitter__default['default'] {\n  constructor (vk) {\n    super();\n    let self = this;\n    self._vk = vk;\n    self._middlewaresController = new MiddlewaresMechanism(self);\n  }\n\n  __initVKRequest (req, res) {\n    let postData, self;\n\n    self = this;\n    postData = req.body;\n\n    if (!postData.group_id) {\n      res.status(400).send('only vk requests');\n      return self.emit('eventEmpty', {\n        postData: postData,\n        description: \"This request haven't group_id of event. Event name is empty\"\n      })\n    }\n\n    let group = self._cbparams.groups[postData.group_id.toString()];\n\n    if (postData.type === 'confirmation') {\n      if (group) {\n        if (group.secret) { // If you use a password fro menage it\n          if (postData.secret && postData.secret.toString() === group.secret.toString()) {\n            res.status(200).send(group.confirmCode);\n          } else {\n            res.status(400).send('secret error');\n            self.emit('secretError', {\n              postData: postData,\n              description: 'We got the secret key which no uses in your settings! If you want to add secret, set up it in secret parameter!'\n            });\n          }\n        } else {\n          res.status(200).send(group.confirmCode);\n        }\n      } else {\n        res.status(400).send('not have this group');\n        self.emit('confirmationError', {\n          postData: postData,\n          description: \"You don't use this group, becouse we don't know this groupId\"\n        });\n      }\n    } else if (postData.type !== 'confirmation') {\n      if (group) {\n        if (group.secret) {\n          if (postData.secret && postData.secret.toString() !== group.secret.toString()) {\n            res.status(400).send('secret error');\n            self.emit('secretError', {\n              postData: postData,\n              description: 'Secret from request and from your settings are not the same'\n            });\n\n            return\n          } else if (!postData.secret) {\n            res.status(400).send('secret error');\n            self.emit('secretError', {\n              postData: postData,\n              description: 'Request has not a secret password, but you use it in this group'\n            });\n\n            return\n          }\n        }\n\n        if (postData.type) {\n          self.emit(postData.type, postData);\n          res.status(200).send('ok');\n        } else {\n          res.status(400).send('invalid type event');\n          self.emit('eventEmpty', {\n            postData: postData,\n            description: \"This request haven't type of event. Event name is empty\"\n          });\n        }\n      } else {\n        res.status(400).send('not have this group');\n        self.emit('confirmationError', {\n          postData: postData,\n          description: \"You don't use this group, becouse we don't know this groupId\"\n        });\n      }\n    } else {\n      res.status(400).send('only vk requests');\n    }\n  }\n\n  __init404Error (req, res) {\n    res.status(404).send('Not Found');\n  }\n\n  async __initApp (params = {}) {\n    let self = this;\n\n    self._cbparams = params;\n\n    return new Promise((resolve, reject) => {\n      let { app } = params;\n      let server;\n\n      if (!app) throw new Error('You must have app parameter, like express application')\n\n      app.use(bodyParser__default['default'].json());\n\n      app.post(params.path, (req, res) => {\n        self.__initVKRequest(req, res);\n      });\n\n      app.get(params.path, (req, res) => {\n        self.__init404Error(req, res);\n      });\n\n      server = http__default['default'].createServer(app);\n\n      this._server = server;\n      server.listen(params.port || process.env.PORT || 3000);\n\n      return resolve(true)\n    })\n  }\n}\n\nclass CallbackAPIConnector {\n  // Auto constructed by EasyVK\n  constructor (vk) {\n    let self = this;\n    self._vk = vk;\n  }\n\n  /*\n   *  This function is up your server for listen group events\n   *\n   *  @param {Object} callbackParams - Object for setup your server\n   *  @param {Object[]} [callbackParams.groups] - Array of your groups which you want listen\n   *  @param {String|Number} [callbackParams.groupId] - Group id which you want listen, if you use groups[] then it will be added too\n   *  but you can't no input neither callbackParams.groups nor groupId and etc.\n   *  You need select your group at least one way\n   *  @param {String|Number} [callbackParams.confirmCode] - Your confirmation code. This code will be sended for confirmation query\n   *  @param {String|Number} [callbackParams.secret] - Your secret code for one group, I am recommend you to use it for secure\n   *  @param {String|Number} [callbackParams.port=(process.env.PORT || 3000)] - Port for http server, default is process.env.PORT || 3000\n   *\n   *  If you use many groups, you need separate (spread) groupId, secret and condirmCode parameters on objects in array of groups\n   *  like { groups: [{groupId: ..., secret: ..., confirmCode: ...}, ...] }\n   *\n   *  @return {Promise}\n   *  @promise up your server for listen group events\n   *  @resolve {Object} - Object with web application, CallbackAPI connection object\n   *  and EasyVK parameter:\n   *  {vk: EasyVK, connection: CallbackAPI, web: expressApplication}\n   *  @reject {Error} - express run and up server error\n   *\n   */\n\n  async listen (callbackParams = {}) {\n    let self = this;\n\n    return new Promise((resolve, reject) => {\n      if (callbackParams) {\n        if (!StaticMethods.isObject(callbackParams)) {\n          callbackParams = {};\n        }\n      }\n\n      if (!Array.isArray(callbackParams.groups)) {\n        callbackParams.groups = [];\n      }\n\n      if (!callbackParams.groupId) {\n        if (self._vk.session && self._vk.session.group_id) {\n          callbackParams.groupId = self._vk.session.group_id;\n        }\n      }\n\n      if (callbackParams.groupId) { // If user wants only one group init\n        if (!callbackParams.confirmCode && (self._vk.session && self._vk.session.group_id && callbackParams.groupId !== self._vk.session.group_id)) {\n          return reject(new Error(\"You don't puted confirmation code\"))\n        }\n\n        callbackParams.groups.push({\n          confirmCode: callbackParams.confirmCode,\n          groupId: callbackParams.groupId\n        });\n\n        if (callbackParams.secret) {\n          callbackParams.groups[callbackParams.groups.length - 1].secret = callbackParams.secret;\n        }\n      }\n\n      if (callbackParams.groups.length === 0) {\n        return reject(new Error('Select a group for listen calls'))\n      } else {\n        let grTemp = {};\n        let registered = [];\n\n        callbackParams.groups.forEach(async (elem, index) => {\n          let group = callbackParams.groups[index];\n\n          if (!StaticMethods.isObject(group)) {\n            return reject(new Error(`Group settings is not an object (in ${index} index)`))\n          }\n\n          if (!group.groupId) {\n            if (self._vk.session && self._vk.session.group_id) {\n              group.groupId = self._vk.session.group_id;\n            }\n          }\n\n          if (!group.groupId || registered.indexOf(group.groupId) !== -1) {\n            return reject(new Error(`Group id must be (groupId in ${index} index)`))\n          }\n\n          registered.push(group.groupId);\n\n          if (!group.confirmCode) {\n            if (self._vk.session && group.groupId === self._vk.session.group_id) {\n              let confirmToken = await self._vk.call('groups.getCallbackConfirmationCode', {\n                group_id: group.groupId\n              });\n\n              group.confirmCode = confirmToken.code;\n            }\n          }\n\n          if (!group.confirmCode) {\n            return reject(new Error(`Confirmation code must be (confirmCode in ${index} index)`))\n          } else {\n            grTemp[group.groupId.toString()] = group;\n          }\n        });\n\n        callbackParams.groups = grTemp;\n      }\n\n      if (!callbackParams.path) {\n        callbackParams.path = '/';\n      }\n      let cbserver = new CallbackAPI(self._vk);\n\n      cbserver.__initApp(callbackParams).then((app) => {\n        return resolve(cbserver)\n      });\n    })\n  }\n}\n\nclass StreamingAPIConnection extends EventEmitter__default['default'] {\n  constructor (vk, session, wsc) {\n    super();\n\n    let self = this;\n\n    self._vk = vk;\n    self._session = session;\n    self._wsc = wsc;\n    self._urlHttp = `${configuration.PROTOCOL}://${self._session.server.endpoint}`;\n    self._key = self._session.server.key;\n    self.__initWebSocket();\n  }\n\n  __initWebSocket () {\n    let self = this;\n\n    self._wsc.on('error', (error) => {\n      self.emit('error', new Error(error.toString()));\n    });\n\n    self._wsc.on('message', (message) => {\n      self.__initMessage(message);\n    });\n\n    self._wsc.on('close', (r) => {\n      self.emit('failure', `Connection closed ${(r) ? '(' + r + ')' : ''}`);\n    });\n  }\n\n  __initMessage (msgBody) {\n    var self = this;\n\n    try {\n      let body = JSON.parse(msgBody);\n      if (parseInt(body.code) === 100) {\n        self.emit(body.event.event_type, body.event);\n        self.emit('pullEvent', body.event);\n      } else if (body.code === 300) {\n        self.emit('serviceMessage', body.service_message);\n      }\n    } catch (e) {\n      self.emit('error', e);\n    }\n  }\n\n  async close () {\n    let self = this;\n\n    return new Promise((resolve, reject) => {\n      if (self._wsc) {\n        return resolve(self._wsc.close())\n      } else {\n        return reject(new Error('WebSocket not connected'))\n      }\n    })\n  }\n\n  async __MRHTTPURL (method, json) {\n    return new Promise((resolve, reject) => {\n      method = method.toString().toLocaleLowerCase();\n\n      let url = `${this._urlHttp}/rules`;\n      json = {\n        ...json,\n        key: this._key\n      };\n\n      let queryParams = {\n        method: method,\n        body: method === 'get' ? null : JSON.stringify(json),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        agent: this._vk.agent\n      };\n\n      if (this._vk && this._vk.debug) {\n        this._vk.debug(EVENT_REQUEST_TYPE, {\n          url,\n          query: json,\n          section: 'streamingAPI',\n          method: method.toUpperCase()\n        });\n      }\n\n      if (method === 'get') {\n        url = url + '?' + qs__default['default'].stringify(json);\n      } else {\n        url = url + '?key=' + this._key;\n      }\n\n      return fetch__default['default'](url, queryParams).then(async (res) => {\n        let vkr = await res.json();\n\n        if (this._vk && this._vk._debugger) {\n          try {\n            this._vk._debugger.push('response', vkr);\n          } catch (e) {\n            // Ignore\n          }\n        }\n\n        if (this._vk && this._vk.debug) {\n          this._vk.debug(EVENT_RESPONSE_TYPE, {\n            body: vkr,\n            section: 'streamingAPI'\n          });\n        }\n\n        if (vkr) {\n          let json = StaticMethods.checkJSONErrors(vkr, reject);\n          if (json) {\n            return resolve(json)\n          } else {\n            return reject(new Error(\"JSON is not valid... oor i don't know\"))\n          }\n        } else {\n          reject(new Error(`Empty response ${vkr}`));\n        }\n      })\n    })\n  }\n\n  async addRule (tag, rule) {\n    let MRHTTPParams = {\n      'rule': {\n        'value': rule,\n        'tag': tag\n      }\n    };\n    return this.__MRHTTPURL('POST', MRHTTPParams)\n  }\n\n  async deleteRule (tag) {\n    let MRHTTPParams = {\n      'tag': tag\n    };\n    return this.__MRHTTPURL('DELETE', MRHTTPParams)\n  }\n\n  async getRules () {\n    return this.__MRHTTPURL('GET', {})\n  }\n\n  async deleteAllRules () {\n    let self = this;\n\n    return new Promise((resolve, reject) => {\n      // For begin - get All rules\n      self.getRules().then((rules) => {\n        rules = rules.rules;\n        let i = 0;\n\n        function del () {\n          if (i === rules.length) {\n            return resolve(true)\n          }\n\n          let rule = rules[i];\n\n          self.deleteRule(rule.tag).then(() => {\n            i++;\n\n            setTimeout(() => {\n              del();\n            }, 600);\n          }, reject);\n        }\n\n        if (rules) {\n          del();\n        } else {\n          return resolve(true)\n        }\n      }, reject);\n    })\n  }\n\n  async initRules (rulesObject = {}, callBackError) {\n    let self = this;\n\n    return new Promise((resolve, reject) => {\n      if (!StaticMethods.isObject(rulesObject)) {\n        return reject(new Error('rules must be an object'))\n      }\n\n      if (callBackError) {\n        if (Object.prototype.toString.call(callBackError) !== '[object Function]') {\n          return reject(new Error('callBackError must be function'))\n        }\n      }\n\n      // For begin get all rules and then change/add/delete rules\n      self.getRules().then((startedRules) => {\n        let changedRules, stRulesObject, tags, addedRules, deletedRules;\n\n        startedRules = startedRules.rules;\n\n        if (!startedRules) {\n          startedRules = [];\n        }\n\n        changedRules = [];\n        addedRules = [];\n        deletedRules = [];\n        stRulesObject = {};\n        tags = [];\n\n        for (let l = 0; l < startedRules.length; l++) {\n          let rule = startedRules[l];\n          stRulesObject[rule.tag] = rule.value;\n        }\n\n        for (let tag in rulesObject) {\n          tags.push(tag);\n        }\n\n        let iN = 0;\n        let i = 0;\n\n        function next () {\n          i++;\n\n          setTimeout(() => {\n            initRule();\n          }, 400);\n        }\n\n        function initRule () {\n          if (i >= startedRules.length) {\n            return initAddRule()\n          }\n\n          let rule = startedRules[i];\n\n          if (rulesObject[rule.tag]) { // Change rule\n            if (rule.value === rulesObject[rule.tag]) { // No need change\n              next();\n            } else {\n              // Need change it. Delete and it and then add\n              self.deleteRule(rule.tag).then(() => {\n                // Add again\n\n                self.addRule(rule.tag, rulesObject[rule.tag]).then(() => {\n                  // Success changed\n                  changedRules.push({\n                    tag: rule.tag,\n                    lastValue: rule.value,\n                    newValue: rulesObject[rule.tag]\n                  });\n\n                  next();\n                }, (err) => {\n                  if (callBackError) {\n                    callBackError({\n                      where: 'add changes',\n                      rule: rule,\n                      from: 'user_rules',\n                      description: 'Occured error in add method when we tried add rule which was changed',\n                      error: err\n                    });\n                  } else {\n                    throw err\n                  }\n\n                  next();\n                });\n              }, (err) => {\n                if (callBackError) {\n                  callBackError({\n                    where: 'delete changes',\n                    rule: rule,\n                    from: 'vk_rules',\n                    description: 'Occured error in delete method when we tried delete rule which was changed',\n                    error: err\n                  });\n                } else {\n                  throw err\n                }\n\n                next();\n              });\n            }\n          } else { // Delete rule\n            self.deleteRule(rule.tag).then(() => {\n              // Success deleted\n              deletedRules.push({\n                tag: rule.tag,\n                value: rule.value\n              });\n\n              next();\n            }, (err) => {\n              if (callBackError) {\n                callBackError({\n                  where: 'delete',\n                  rule: rule,\n                  from: 'vk_rules',\n                  description: 'Occured error in delete method when we tried delete rule which not declared in init object',\n                  error: err\n                });\n              } else {\n                throw err\n              }\n\n              next();\n            });\n          }\n        }\n\n        initRule();\n\n        function nextAdd () {\n          iN++;\n\n          setTimeout(() => {\n            initAddRule();\n          }, 400);\n        }\n\n        function initAddRule () {\n          if (iN >= tags.length) {\n            return resolve({\n              changedRules: changedRules,\n              addedRules: addedRules,\n              deletedRules: deletedRules\n            })\n          }\n\n          let rule = tags[iN];\n\n          if (!stRulesObject.hasOwnProperty(tags[iN])) { // Need add new rules\n            self.addRule(tags[iN], rulesObject[tags[iN]]).then(() => {\n              // Success add\n              addedRules.push({\n                tag: tags[iN],\n                value: rulesObject[tags[iN]]\n              });\n\n              nextAdd();\n            }, (err) => {\n              if (callBackError) {\n                callBackError({\n                  where: 'add',\n                  rule: rule,\n                  from: 'user_rules',\n                  description: 'Occured error in add method when we tried add rule which not declared in vk rules',\n                  error: err\n                });\n              } else {\n                throw err\n              }\n\n              nextAdd();\n            });\n          } else {\n            nextAdd();\n          }\n        }\n      }, reject);\n    })\n  }\n}\n\nclass StreamingAPIConnector {\n  constructor (vk) {\n    let self = this;\n    self._vk = vk;\n  }\n\n  async connect (applicationParams = {}) {\n    let self = this;\n\n    function initConnect (json = {}) {\n      return new Promise((resolve, reject) => {\n        StaticMethods.call('streaming.getServerUrl', {\n          access_token: json.access_token\n        }).then((vkrURL) => {\n          let streamingSession, wsc;\n\n          streamingSession = {\n            server: vkrURL,\n            client: json\n          };\n\n          wsc = new WS__default['default'](`wss://${streamingSession.server.endpoint}/stream?key=${streamingSession.server.key}`, {\n            agent: self._vk.agent\n          });\n\n          wsc.on('open', () => {\n            let _StreamingAPIConnecton =\n            new StreamingAPIConnection(self._vk, streamingSession, wsc);\n\n            return resolve(_StreamingAPIConnecton)\n          });\n        }, reject);\n      })\n    }\n    return new Promise((resolve, reject) => {\n      if (applicationParams) {\n        if (!StaticMethods.isObject(applicationParams)) {\n          return reject(new Error('application params must be an objct parameter'))\n        }\n      }\n\n      if (!applicationParams.clientId || !applicationParams.clientSecret) {\n        if (self._vk && self._vk.__credentials_flow_type) {\n          applicationParams.clientId = self._vk.params.client_id;\n          applicationParams.clientSecret = self._vk.params.client_secret;\n        }\n      }\n\n      if (applicationParams.clientId && applicationParams.clientSecret) {\n        if (self._vk && self._vk.__credentials_flow_type) {\n          initConnect(self._vk.session).then(resolve, reject);\n        } else {\n          let getParams = {\n            client_id: applicationParams.clientId,\n            client_secret: applicationParams.clientSecret,\n            grant_type: 'client_credentials'\n          };\n\n          let url = `${configuration.BASE_OAUTH_URL}access_token?` + qs__default['default'].stringify(getParams);\n\n          if (this._vk && this._vk.debug) {\n            this._vk.debug(EVENT_REQUEST_TYPE, {\n              url,\n              query: getParams,\n              section: 'streamingAPI',\n              method: 'GET'\n            });\n          }\n\n          return fetch__default['default'](url, {\n            agent: self._vk.agent\n          }).then(async (res) => {\n            let vkr = await res.json();\n\n            if (self._vk && self._vk._debugger) {\n              try {\n                self._vk._debugger.push('response', vkr);\n              } catch (e) {\n                // Ignore\n              }\n            }\n\n            if (this._vk && this._vk.debug) {\n              this._vk.debug(EVENT_RESPONSE_TYPE, {\n                body: vkr,\n                section: 'streamingAPI'\n              });\n            }\n\n            if (vkr) {\n              let json = StaticMethods.checkJSONErrors(vkr, reject);\n\n              if (json) {\n                initConnect(json).then(resolve, reject);\n              } else {\n                return reject(new Error(\"JSON is not valid... oor i don't know\"))\n              }\n            } else {\n              return reject(new Error(`Empty response ${vkr}`))\n            }\n          })\n        }\n      } else {\n        return reject(new Error('clientId and clientSecret not declared'))\n      }\n    })\n  }\n}\n\nclass Widgets {\r\n  // For call to methods an others, standard procedure\r\n  constructor (vk) {\r\n    let self = this;\r\n    self._vk = vk;\r\n    this.userAgent = 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.84 Safari/537.36';\r\n  }\r\n\r\n  async getLiveViews (videoSourceId = '') {\r\n    let self = this;\r\n\r\n    return new Promise((resolve, reject) => {\r\n      if (!videoSourceId || !StaticMethods.isString(videoSourceId)) {\r\n        return reject(self._vk._error('videoSourceId', {\r\n          parameter: 'videoSourceId',\r\n          method: 'widgets.getLiveViews',\r\n          format: 'need format like -2222_22222 (from url)'\r\n        }))\r\n      }\r\n\r\n      let headers, alVideoUrl, video, oid, vid, queryParams;\r\n\r\n      headers = {\r\n        'origin': 'https://vk.com',\r\n        'referer': `https://vk.com/video?z=video${videoSourceId}`,\r\n        'user-agent': self._vk.params.user_agent || this.userAgent,\r\n        'x-requested-with': 'XMLHttpRequest',\r\n        'content-type': 'application/x-www-form-urlencoded'\r\n      };\r\n\r\n      alVideoUrl = `${configuration.PROTOCOL}://${configuration.BASE_DOMAIN}/al_video.php`;\r\n      video = videoSourceId.split('_');\r\n      oid = video[0];\r\n      vid = video[1];\r\n\r\n      let form = {\r\n        'act': 'show',\r\n        'al': 1,\r\n        'autoplay': 0,\r\n        'module': 'videocat',\r\n        'video': videoSourceId\r\n      };\r\n\r\n      // Get specify hash for get permissions to watch\r\n      queryParams = {\r\n        headers: headers,\r\n        body: qs__default['default'].stringify(form),\r\n        encoding: 'binary',\r\n        agent: self._vk.agent,\r\n        method: 'POST'\r\n      };\r\n\r\n      self._vk.debug(EVENT_REQUEST_TYPE, {\r\n        url: alVideoUrl,\r\n        query: form,\r\n        method: 'POST',\r\n        section: 'widgets'\r\n      });\r\n\r\n      return fetch__default['default'](alVideoUrl, queryParams).then(async (res) => {\r\n        res = await res.text();\r\n        res = encoding__default['default'].convert(res, 'utf-8', 'windows-1251').toString();\r\n\r\n        if (self._vk._debugger) {\r\n          try {\r\n            self._vk._debugger.push('response', res);\r\n          } catch (e) {\r\n            // ignore\r\n          }\r\n        }\r\n\r\n        self._vk.debug(EVENT_RESPONSE_TYPE, {\r\n          body: res,\r\n          section: 'widgets'\r\n        });\r\n\r\n        // Parsing hash from response body {\"action_hash\" : \"hash\"}\r\n        let matCH = String(res).match(/(\"|')action_hash(\"|')(\\s)?:(\\s)?('|\")(.*?)('|\")/i);\r\n        if (matCH) {\r\n          let hash, getVideoViewsQueryParams;\r\n\r\n          hash = matCH[0].replace(/([\\s':\"])/g, '').replace('action_hash', '');\r\n\r\n          let url = `${alVideoUrl}?act=live_heartbeat`;\r\n\r\n          getVideoViewsQueryParams = {\r\n            body: `al=1&hash=${hash}&oid=${oid}&user_id=0&vid=${vid}`,\r\n            encoding: 'binary', // Special\r\n            headers: headers,\r\n            agent: self._vk.agent,\r\n            method: 'POST'\r\n          };\r\n\r\n          // Here is magic\r\n          return fetch__default['default'](url, getVideoViewsQueryParams).then(async (res) => {\r\n            res = await res.text();\r\n\r\n            self._vk._debugger.push('response', res);\r\n\r\n            try {\r\n              res = JSON.parse(res);\r\n              let countViews = res.payload[1][0];\r\n              if (countViews !== undefined) {\r\n                countViews = parseInt(countViews, 10);\r\n                return resolve(countViews)\r\n              } else {\r\n                return reject(self._vk._error('live_error', {\r\n                  video: video\r\n                }))\r\n              }\r\n            } catch (e) {\r\n              return reject(self._vk._error('live_error', {\r\n                video: video\r\n              }))\r\n            }\r\n          })\r\n        } else {\r\n          return reject(self._vk._error('widgets', {\r\n            video: video\r\n          }, 'live_not_streaming'))\r\n        }\r\n      }).catch(e => reject(e))\r\n    })\r\n  }\r\n}\n\n// LongPollConnection initing automatically by me\nclass LongPollConnection$1 extends EventEmitter__default['default'] {\n  constructor (lpSettings, vk) {\n    super();\n    let self = this;\n\n    self.config = lpSettings;\n    self._vk = vk;\n    self.userListeners = {};\n    self.closed = false;\n\n    self._middlewaresController = new MiddlewaresMechanism(self);\n    self.abortController = new AbortController();\n\n    init();\n\n    async function reconnect () {\n      return self._vk.call('groups.getLongPollServer', self.config.userConfig.forGetLongPollServer).then((vkr) => {\n        self.config.longpollServer = vkr.server;\n        self.config.longpollTs = vkr.ts;\n        self.config.longpollKey = vkr.key;\n\n        return init() // reconnect with new parameters\n      }).catch((err) => {\n        self.emit('reconnectError', new Error(err));\n      })\n    }\n\n    async function init () {\n      let server, forLongPollServer, _w;\n\n      let httpsPref = 'https://';\n\n      if (self.config.longpollServer.substr(0, httpsPref.length) !== httpsPref) {\n        self.config.longpollServer = httpsPref + self.config.longpollServer;\n      }\n\n      server = `${self.config.longpollServer}`;\n\n      forLongPollServer = {};\n      _w = null;\n\n      forLongPollServer.act = 'a_check';\n      forLongPollServer.key = self.config.longpollKey;\n      forLongPollServer.ts = self.config.longpollTs;\n      forLongPollServer.version = self.config.userConfig.forLongPollServer.version;\n      forLongPollServer.wait = self.config.userConfig.forLongPollServer.wait;\n\n      if (isNaN(forLongPollServer.version)) {\n        forLongPollServer.version = '2';\n      }\n\n      _w = forLongPollServer.wait;\n\n      let params = {\n        timeout: (_w * 1000) + (1000 * 3),\n        headers: {\n          'connection': 'keep-alive',\n          'content-type': 'application/x-www-form-urlencoded'\n        },\n        agent: self._vk.agent,\n        signal: self.abortController.signal\n      };\n\n      server = server + '?' + qs__default['default'].stringify(forLongPollServer);\n\n      if (self._debug) {\n        self._debug({\n          type: 'longPollParamsQuery',\n          data: params\n        });\n      }\n\n      self._vk.debug(EVENT_REQUEST_TYPE, {\n        url: server,\n        query: forLongPollServer,\n        method: 'GET',\n        section: 'bots.longpoll'\n      });\n\n      if (self.closed) return false\n\n      self.lpConnection = fetch__default['default'](server, params).catch((e) => {\n        return reconnect()\n      }).then(async (res) => {\n        if (!res) return false\n        if (!res.json) return res\n        res = await res.json();\n\n        if (self._vk._debugger) {\n          try {\n            self._vk._debugger.push('response', res);\n          } catch (e) {\n            // Ignore\n          }\n        }\n\n        self._vk.debug(EVENT_RESPONSE_TYPE, {\n          body: res,\n          section: 'bots.longpoll'\n        });\n\n        if (self._debug) {\n          self._debug({\n            type: 'pollResponse',\n            data: res\n          });\n        }\n\n        let vkr = res;\n\n        if (vkr.ts) {\n          self.config.longpollTs = vkr.ts;\n        }\n\n        if (vkr.updates) {\n          if (vkr.updates.length > 0) {\n            self._middlewaresController.run(vkr).then(() => {\n              self._checkUpdates(vkr.updates);\n            });\n          }\n\n          return init()\n        }\n\n        if (vkr.failed) {\n          if (vkr.failed === 1) { // update ts\n            if (vkr.ts) {\n              self.config.longpollTs = vkr.ts;\n            }\n\n            return init()\n          } else if ([2, 3].indexOf(vkr.failed) !== -1) { // need reconnect\n            return reconnect()\n          } else {\n            return self.emit('failure', vkr)\n          }\n        }\n\n        if (vkr.error) {\n          self.emit('error', vkr.error);\n          return reconnect()\n        }\n      }).catch(err => {\n        if (err.toString().match('TIMEDOUT') || err.toString().match('ENOENT') || err.toString().match('timeout')) {\n          return reconnect()\n        }\n        return self.emit('error', err)\n      });\n    }\n  }\n\n  async _checkUpdates (updates) {\n    let self = this;\n\n    if (Array.isArray(updates)) {\n      let len = updates.length;\n      for (let updateIndex = 0; updateIndex < len; updateIndex++) {\n        let typeEvent = updates[updateIndex].type.toString();\n        self.emit(typeEvent, updates[updateIndex].object);\n      }\n    } else {\n      return 'Is not array!'\n    }\n  }\n\n  /*\n   *  This function closes connection and stop it\n   *\n   *  @return {Promise}\n   *  @promise Close connection\n   *  @resolve {*} response from abort() method\n   *  @rejet {Error} - Eror if connection not inited\n   *\n   */\n\n  async close () {\n    let self = this;\n\n    return new Promise((resolve, reject) => {\n      if (self.lpConnection) {\n        self.emit('close', {\n          time: new Date().getTime()\n        });\n\n        self.closed = true;\n\n        return resolve(self.abortController.abort())\n      } else {\n        return reject(self._vk._error('longpoll_api', {}, 'not_connected'))\n      }\n    })\n  }\n\n  /*\n   *  This function enables (adds) your debugger for each query\n   *  For example: you can see error if it occured and log it with debugger function\n   *\n   *  @param {Function|Async Function} [debugg] - Function for debugg all queries\n   *  In this function will sending all responses from vk, you can log this object in console for know more\n   *\n   *  @return {Boolean|Object} - If your function is not a function, then will be returned false,\n   *  else LongPollConnection object for chain it\n   *\n   */\n\n  debug (debugg) {\n    let self = this;\n\n    console.warn('[Deprecated method warning] \\nThis method will be deprecated in next releases. Please, use new easyvk.Debugger() and set it up in the easyvk configuration like params.debug = myDebugger');\n\n    if (Object.prototype.toString.call(debugg).match(/function/i)) {\n      self._debug = debugg;\n    } else {\n      return false\n    }\n\n    return self\n  }\n}\n\nclass LongPollConnector$1 {\n  // From EasyVK contructed\n  constructor (vk) {\n    let self = this; // For the future\n    self._vk = vk;\n  }\n\n  /*\n   *\n   *  This function create LongPollConnection and then re-calls to a server for\n   *  get new events\n   *\n   *  @param {Object} [params] - Is your settings for LongPoll connection\n   *  @param {Object} [params.forGetLongPollServer] - Is object for firs query\n   *  when LongPollConnector getting url for connect. This parameters will be sended with\n   *  query uri, and you can see them here https://vk.com/dev/bots_longpoll\n   *  @param {Object} [params.forLongPollServer] - Is object with params for each query on longpoll server.\n   *  For example: { \"wait\": 10 } //wait 10seconds for new call\n   *\n   *  @return {Promise}\n   *  @promise Conneto to longpoll server\n   *  @resolve {Object} - Is object which contents LongPollConnection\n   *  @reject {Error} - vk.com error or just an error from node-fetch module\n   *\n   */\n\n  async connect (params = {}) {\n    let self = this;\n    return new Promise((resolve, reject) => {\n      if (!StaticMethods.isObject(params)) {\n        reject(self._vk._error('is_not_object', {\n          'where': 'BotsLongPoll.connect',\n          'parameter': 'params'\n        }));\n      } else {\n        if (!StaticMethods.isObject(params.forGetLongPollServer)) {\n          params.forGetLongPollServer = {};\n        }\n\n        if (params.forLongPollServer) {\n          if (!StaticMethods.isObject(params.forLongPollServer)) {\n            params.forLongPollServer = {};\n          }\n        } else {\n          params.forLongPollServer = {};\n        }\n\n        if (isNaN(params.forGetLongPollServer.lp_version)) {\n          params.forGetLongPollServer.lp_version = '2';\n        }\n\n        if (isNaN(params.forLongPollServer.wait)) {\n          params.forLongPollServer.wait = '25';\n        }\n\n        if (!params.forGetLongPollServer.group_id && self._vk.session.group_id) {\n          params.forGetLongPollServer.group_id = self._vk.session.group_id;\n        }\n\n        self._vk.call('groups.getLongPollServer', params.forGetLongPollServer).then((vkr) => {\n          let forLongPoll = {\n            longpollServer: vkr.server,\n            longpollTs: vkr.ts,\n            longpollKey: vkr.key,\n            responseGetServer: vkr,\n            userConfig: params\n          };\n\n          return resolve(new LongPollConnection$1(forLongPoll, self._vk))\n        }, reject);\n      }\n    })\n  }\n}\n\nclass EasyVKSession {\n  constructor (vk, dataSession = {}) {\n    let self = this;\n\n    let _props = {\n      session: dataSession,\n      path: vk.params.session_file,\n      vk: vk\n    };\n\n    let canChanged = ['path'];\n\n    for (let prop in _props) {\n      let settings = {\n        value: _props[prop]\n      };\n\n      if (canChanged.indexOf(prop) !== -1) {\n        settings.configurable = true;\n      }\n\n      Object.defineProperty(self, prop, settings);\n    }\n\n    // Use session data with methods\n    for (let prop in self.session) {\n      Object.defineProperty(self, prop, {\n        enumerable: true,\n        configurable: true,\n        value: self.session[prop]\n      });\n    }\n\n    return self\n  }\n\n  /*\n   *  This method saved your session in file\n   *\n   *  @return {Promise}\n   *\n   */\n\n  async save () {\n    let self = this;\n\n    return new Promise((resolve, reject) => {\n      let s;\n\n      if (!(self.path)) {\n        return reject(self.vk._error('session', {}, 'need_path'))\n      }\n\n      s = JSON.stringify(self);\n\n      let buf = Buffer.from(s, 'utf8');\n\n      fs__default['default'].writeFile(self.path, buf, (err) => {\n        if (err) {\n          return reject(new Error(err))\n        }\n\n        return resolve({\n          vk: self.vk\n        })\n      });\n    })\n  }\n\n  /*\n   *  This function saves your session and cleaning it, make this empty\n   *  @returns Promise\n   *\n   */\n\n  async clear () {\n    let self = this;\n\n    return new Promise((resolve, reject) => {\n      for (let prop in self) {\n        Object.defineProperty(self, prop, {\n          value: undefined,\n          enumerable: true,\n          configurable: true\n        });\n      }\n\n      self.save().then(resolve, reject);\n    })\n  }\n\n  /*\n   *  This function set up your path session, ou can change sesson path\n   *\n   *  @param {String} path is absolute path for you file\n   *  @return {Promise}\n   *\n   */\n\n  async setPath (path = '') {\n    let self = this;\n\n    return new Promise((resolve, reject) => {\n      fs__default['default'].writeFile(path, '', (err) => {\n        if (err) {\n          return reject(err)\n        }\n\n        Object.defineProperty(self, 'path', {\n          configurable: true,\n          value: path\n        });\n\n        // Update for easyvk functions, for latest releases\n        self.vk.params.session_file = path;\n\n        return resolve({\n          vk: self.vk\n        })\n      });\n    })\n  }\n}\n\n/**\n *   In this file are http widgets for EasyVK\n *   You can use it\n *\n *   Author: @ciricc\n *   License: MIT\n *\n */\n\nclass HTTPEasyVKClient {\n  constructor ({ _jar, vk, httpVk, config, parser, fetch }) {\n    this._config = config;\n    this.fetch = fetch;\n    this.headersRequest = {\n      'User-Agent': this._config.userAgent,\n      'content-type': 'application/x-www-form-urlencoded'\n    };\n\n    this.LOGIN_ERROR = 'Need login by form, use .loginByForm() method';\n\n    this._vk = vk;\n    this._authjar = _jar;\n    this._parser = parser;\n\n    Object.defineProperty(this, 'audio', {\n      get: () => {\n        console.warn('[Deprecated] Audio API is fully deprecated!');\n      }\n    });\n  }\n\n  async post (file, form, isMobile) {\n    return this.request(file, form, true, isMobile)\n  }\n\n  async get (file, form, isMobile) {\n    return this.request(file, form, false, isMobile)\n  }\n\n  async fullRequest (file, form, post, isMobile, settings = {}) {\n    return this.request(file, form, post, isMobile, true, settings)\n  }\n\n  async request (file, form = {}, post = true, isMobile = false, getOriginResponse = false, settings = {}) {\n    let self = this;\n    return new Promise((resolve, reject) => {\n      let mobile = '';\n\n      if (isMobile) {\n        mobile = 'm.';\n      }\n\n      let method = 'post';\n\n      if (post !== true) method = 'get';\n\n      let headers = {\n        'user-agent': self._config.userAgent\n      };\n\n      if ((isMobile && method === 'post') || form.XML === true) {\n        headers['x-requested-with'] = 'XMLHttpRequest';\n      }\n\n      headers['content-type'] = 'application/x-www-form-urlencoded';\n\n      let url = file.match(/^http(s):\\/\\//) ? file : `${configuration.PROTOCOL}://${mobile}${configuration.BASE_DOMAIN}/` + file;\n\n      self._vk._debugger.push('request', {\n        url,\n        method,\n        headers,\n        form\n      });\n\n      self._vk.debug(EVENT_REQUEST_TYPE, {\n        url,\n        query: form,\n        section: 'httpClient',\n        method: method\n      });\n\n      return self.fetch(url, {\n        agent: self._vk.agent,\n        headers,\n        method,\n        body: method === 'get' ? undefined : qs__default['default'].stringify(form),\n        qs: method === 'get' ? form : undefined,\n        ...settings\n      }).then(async (res) => {\n        let _origin = res;\n\n        if (getOriginResponse) {\n          return resolve(_origin)\n        }\n\n        res = await res.textConverted();\n\n        self._vk._debugger.push('response', res);\n\n        self._vk.debug(EVENT_RESPONSE_TYPE, {\n          url: url,\n          query: form,\n          section: 'httpClient',\n          body: res\n        });\n\n        if (!res.length) {\n          return reject(self._vk._error('http_client', {}, 'not_have_access'))\n        }\n\n        if (form.utf8) {\n          res = encoding__default['default'].convert(res, 'utf-8', 'windows-1251').toString();\n        }\n\n        if (form.retOnlyBody) return resolve(res)\n\n        let json = self._parseResponse(res);\n        if (json.payload && String(json.payload[0]) === '3') {\n          await this.request('',\n            {\n              _origin: 'https://vk.com', // Only known in Desktop methods\n              ip_h: JSON.parse(json.payload[1][0]),\n              role: 'al_frame',\n              to: JSON.parse(json.payload[1][1])\n            }\n          );\n          return resolve(await this.request(...arguments))\n        }\n\n        if (form.autoParse) {\n          return resolve(VKResponseReturner(StaticMethods, {\n            response: json\n          }))\n        }\n\n        return resolve(json)\n      }).catch(err => reject(err))\n    })\n  }\n\n  async goDesktop () {\n    return this.request('fv?to=/mail?_fm=mail&_fm2=1', {}, false, true)\n  }\n\n  async goMobile () {\n    return this.request('mail?act=show&peer=0&_ff=1', {}, false, true)\n  }\n\n  async requestMobile (...args) {\n    return this.request(...args, true)\n  }\n\n  _parseResponse (e) {\n    return this._parser(e)\n  }\n\n  _parseJSON (body, reject) {\n    let self = this;\n\n    let json = self._parseResponse(body.split('<!>'));\n\n    if (typeof json[6] === 'object') json[5] = json[6];\n\n    if (typeof json[5] === 'string') {\n      return reject(new Error(json[5]))\n    }\n\n    if (!json[5]) {\n      return reject(self._vk._error('http_client', {}, 'not_have_access'))\n    }\n\n    json = json[5];\n\n    return json\n  }\n}\n\nclass HTTPEasyVK {\n  constructor (vk) {\n    let self = this;\n\n    self.headersRequest = {\n      'content-type': 'application/x-www-form-urlencoded'\n    };\n\n    self._vk = vk;\n  }\n\n  async __checkHttpParams (params = {}) {\n    return new Promise((resolve, reject) => {\n      if (!params.userAgent) {\n        params.userAgent = configuration['HTTP_CLIENT']['USER_AGENT'];\n      }\n\n      params.userAgent = String(params.userAgent);\n\n      if (!params.cookies) {\n        params.cookies = configuration['HTTP_CLIENT']['COOKIE_PATH'];\n      }\n\n      params.cookies = String(params.cookies);\n\n      return resolve(params)\n    })\n  }\n\n  _parseResponse (e, json = true) {\n    if (e) {\n      e = String(e).replace('<!--', '');\n      if (json) {\n        try {\n          e = JSON.parse(e);\n        } catch (_e) {\n          return e\n        }\n      }\n    }\n    return e\n  }\n\n  async loginByForm (params = {}) {\n    let self = this;\n\n    return new Promise((resolve, reject) => {\n      let pass = params.password || self._vk.params.password;\n      let login = params.username || self._vk.params.username;\n\n      let captchaSid = params.captchaSid || self._vk.params.captcha_sid;\n      let captchaKey = params.captchaKey || self._vk.params.captcha_key;\n      let checkCodeUrl = params.checkCodeUrl || '';\n\n      let code = params.code;\n\n      const captchaHandler = params.captchaHandler || self._vk.params.captchaHandler;\n\n      if (!pass || !login) return reject(self._vk._error('http_client', {}, 'need_auth'))\n\n      self.__checkHttpParams(params).then((p) => {\n        let params = p;\n        self._config = params;\n\n        self.headersRequest['User-Agent'] = self._config.userAgent;\n\n        let cookiepath = self._config.cookies;\n\n        if (!self._vk.params.reauth && !params.reauth) {\n          let data;\n\n          if (!fs__default['default'].existsSync(cookiepath)) {\n            fs__default['default'].closeSync(fs__default['default'].openSync(cookiepath, 'w'));\n          }\n\n          data = fs__default['default'].readFileSync(cookiepath).toString();\n\n          try {\n            data = JSON.parse(data);\n          } catch (e) {\n            data = null;\n          }\n\n          if (data) {\n            let jar = new toughCookie.CookieJar(new CookieStore__default['default'](cookiepath));\n\n            self._authjar = jar;\n            self.fetch = getJarFetch(self._authjar);\n\n            return createClient(resolve)\n          }\n        }\n\n        let vHttp = self._vk;\n\n        let jar = new toughCookie.CookieJar(new CookieStore__default['default'](cookiepath));\n\n        self._authjar = jar;\n        self.fetch = getJarFetch(self._authjar);\n\n        if (!self._vk.params.reauth && !params.reauth) {\n          if (Object.keys(jar).length) {\n            return actCheckLogin().then(() => {\n              return createClient(resolve, vHttp)\n            }, (r) => {\n              return goLogin()\n            })\n          }\n        }\n\n        if (!code && !checkCodeUrl) {\n          fs__default['default'].writeFileSync(cookiepath, '{}');\n          jar = new toughCookie.CookieJar(new CookieStore__default['default'](cookiepath));\n          self._authjar = jar;\n        }\n\n        self.fetch = getJarFetch(self._authjar);\n\n        return goLogin()\n\n        async function makeAuthWithoutCode (_needSolve, _resolverReCall, _rejecterReCall, getData) {\n          return new Promise(async (resolve, reject) => {\n            let body = await self.fetch(checkCodeUrl, {\n              method: 'POST',\n              agent: self._vk.agent,\n              body: qs__default['default'].stringify(getData),\n              headers: {\n                ...self.headersRequest\n              }\n            });\n\n            body = await body.text();\n\n            if (body.match(/captcha/)) {\n              let captchaUrl = body.match(/\\/captcha.php([^\"]+)/);\n              if (captchaUrl) {\n                captchaUrl = `${configuration.PROTOCOL}://${configuration.BASE_DOMAIN}${captchaUrl[0]}`;\n                let captchaSid = captchaUrl.match(/sid=([0-9]+)/);\n                if (captchaSid) {\n                  captchaSid = Number(captchaSid[1]);\n\n                  let err = {\n                    captcha_sid: captchaSid,\n                    captcha_img: captchaUrl\n                  };\n\n                  return _catchCaptcha({\n                    err,\n                    reCall: () => {\n                      return makeAuthWithoutCode(0, 0, 0, getData)\n                    },\n                    _needSolve,\n                    _resolverReCall,\n                    _rejecterReCall,\n                    data: getData,\n                    reject\n                  })\n                } else {\n                  return reject(new Error('You have captcha error, but http client dont recognize where is captcha_sid parameter'))\n                }\n              } else {\n                return reject(new Error('You have captcha error, but http client dont recognize where'))\n              }\n            }\n\n            if (body.match(/authcheck_code/)) {\n              let err = new Error('Wrong code');\n              err.is2fa = true;\n              err.isWrong = true;\n              return reject(err)\n            }\n\n            self._vk.debug(EVENT_RESPONSE_TYPE, {\n              body: body,\n              section: 'httpClient'\n            });\n\n            self._vk._debugger.push('response', body);\n\n            if (_needSolve) {\n              return _resolverReCall(createClient(resolve, vHttp))\n            } else {\n              return createClient(resolve, vHttp)\n            }\n          })\n        }\n\n        async function goLogin () {\n          if (checkCodeUrl && code) {\n            return makeAuthWithoutCode(0, 0, 0, {\n              code,\n              remember: 1,\n              captcha_sid: captchaSid,\n              captcha_key: captchaKey\n            }).then(resolve, reject)\n          }\n\n          let url = `${configuration.PROTOCOL}://${configuration.MOBILE_SUBDOMAIN}.${configuration.BASE_DOMAIN}/`;\n\n          self._vk.debug(EVENT_REQUEST_TYPE, {\n            url,\n            query: ``,\n            method: 'GET',\n            section: 'httpClient'\n          });\n\n          self.fetch(url, {\n            method: 'GET',\n            headers: {\n              ...self.headersRequest\n            },\n            agent: self._vk.agent,\n            cache: 'no-cache'\n          }).then(async (res) => {\n            res = await res.text();\n\n            self._vk.debug(EVENT_RESPONSE_TYPE, {\n              body: res,\n              section: 'httpClient'\n            });\n\n            let body = res;\n\n            self._vk._debugger.push('response', res);\n\n            let matches = body.match(/action=\"(.*?)\"/);\n\n            if (!matches || !body.match(/password/)) { // Если пользовтаель уже авторизован по кукисам, чекаем сессию\n              return actCheckLogin().then(() => {\n                return createClient(resolve, vHttp)\n              }, reject)\n            }\n\n            let POSTLoginFormUrl = matches[1];\n\n            if (!POSTLoginFormUrl.match(/login\\.vk\\.com/)) return reject(self._vk._error('http_client', {}, 'not_supported'))\n            return actLogin(POSTLoginFormUrl).then(resolve, reject)\n          }).catch(err => reject(err));\n        }\n        async function actCheckLogin (jar) {\n          return new Promise((resolve, reject) => {\n            if (params.checkAuth === false) {\n              return resolve(true)\n            }\n\n            let url = `${configuration.PROTOCOL}://${configuration.BASE_DOMAIN}/al_im.php`;\n\n            let form = {\n              act: 'a_dialogs_preload',\n              al: 1,\n              gid: 0,\n              im_v: 3,\n              rs: ''\n            };\n\n            self._vk.debug(EVENT_REQUEST_TYPE, {\n              url,\n              query: form,\n              method: 'POST',\n              section: 'httpClient'\n            });\n\n            return self.fetch(url, {\n              method: 'POST',\n              url,\n              body: qs__default['default'].stringify(form),\n              agent: self._vk.agent,\n              headers: {\n                ...self.headersRequest,\n                'x-requested-with': 'XMLHttpRequest'\n              }\n            }).then(async (res) => {\n              res = await res.text();\n\n              self._vk.debug(EVENT_RESPONSE_TYPE, {\n                body: res,\n                section: 'httpClient'\n              });\n\n              self._vk._debugger.push('response', res);\n              res = self._parseResponse(res);\n              if (Number(res.payload[0]) === 0) {\n                return resolve(true)\n              } else {\n                return reject(new Error('Need update session'))\n              }\n            }).catch(err => reject(err))\n          })\n        }\n\n        function _catchCaptcha (params = {}) {\n          let { err, reCall, _needSolve, _rejecterReCall, data, reject } = params;\n\n          let vkr = err;\n\n          if (_needSolve) {\n            try {\n              _rejecterReCall({\n                error: false,\n                reCall: () => {\n                  return reCall()\n                }\n              });\n            } catch (e) { reject(e); }\n\n            return\n          }\n\n          const captchaSid = vkr.captcha_sid;\n          const captchaImg = vkr.captcha_img;\n\n          let paramsForHandler = {\n            captcha_sid: captchaSid,\n            captcha_img: captchaImg,\n            params: data,\n            vk: self._vk\n          };\n\n          paramsForHandler.resolve = (captchaKey) => {\n            return new Promise((resolve, reject) => {\n              data.captcha_key = captchaKey;\n              data.captcha_sid = captchaSid;\n\n              try {\n                reCall('NEED SOLVE', resolve, reject, data);\n              } catch (errorRecall) { /* Need pass it */ }\n            })\n          };\n\n          try {\n            captchaHandler(paramsForHandler);\n          } catch (e) {\n            reject(e);\n          }\n        }\n\n        async function actLogin (loginURL) {\n          return new Promise(async (resolve, reject) => {\n            async function makeAuth (_needSolve, _resolverReCall, _rejecterReCall, getData) {\n              return self.fetch(loginURL, {\n                method: 'POST',\n                agent: self._vk.agent,\n                body: qs__default['default'].stringify(getData),\n                headers: {\n                  ...self.headersRequest\n                }\n              }).then(async res => {\n                let body = await res.text();\n\n                if (body.match(/service_msg service_msg_warning/g)) {\n                  let errText = body.match(/<div class=\"service_msg service_msg_warning\">(.*)<\\/div>/);\n                  if (errText && errText[1]) {\n                    errText = errText[1].replace(/<[^>]*>/g, '');\n                  }\n                  let err = new Error(errText || 'Invalid login or password');\n                  err.type = 'invalid-login';\n                  return reject(err)\n                }\n\n                if (body.match(/authcheck_code/)) {\n                  if (code) {\n                    let checkCodeURL = checkCodeUrl;\n\n                    if (!checkCodeURL) {\n                      checkCodeURL = body.match(/action([\\s]+)?=([\\s]+)?(\"|')(\\/login\\?act=authcheck_code([^\"']+))/);\n\n                      checkCodeURL = checkCodeURL ? checkCodeURL[4] : null;\n\n                      if (!checkCodeURL) return reject(new Error('Not found authcheck url'))\n\n                      checkCodeURL = `${configuration.PROTOCOL}://${configuration.MOBILE_SUBDOMAIN}.${configuration.BASE_DOMAIN}${checkCodeURL}`;\n                    }\n\n                    let checkCodeData = {\n                      _ajax: 1,\n                      code,\n                      remember: 1\n                    };\n\n                    let res = await self.fetch(checkCodeURL, {\n                      method: 'POST',\n                      agent: self._vk.agent,\n                      body: qs__default['default'].stringify(checkCodeData),\n                      headers: {\n                        ...self.headersRequest\n                      }\n                    });\n\n                    res = await res.text();\n\n                    if (res.match(/authcheck_code/)) {\n                      let err = new Error('Wrong code');\n                      err.is2fa = true;\n                      err.isWrong = true;\n                      return reject(err)\n                    }\n                  } else {\n                    let err = new Error('You need input two factor code');\n\n                    err.is2fa = true;\n\n                    let checkCodeURL = body.match(/action([\\s]+)?=([\\s]+)?(\"|')(\\/login\\?act=authcheck_code([^\"']+))/);\n\n                    checkCodeURL = checkCodeURL ? checkCodeURL[4] : '';\n                    checkCodeURL = `${configuration.PROTOCOL}://${configuration.MOBILE_SUBDOMAIN}.${configuration.BASE_DOMAIN}${checkCodeURL}`;\n\n                    err.checkCodeUrl = checkCodeURL;\n\n                    return reject(err)\n                  }\n                }\n\n                if (body.match(/captcha/)) {\n                  let captchaUrl = body.match(/\\/captcha.php([^\"]+)/);\n                  if (captchaUrl) {\n                    captchaUrl = `${configuration.PROTOCOL}://${configuration.BASE_DOMAIN}${captchaUrl[0]}`;\n                    let captchaSid = captchaUrl.match(/sid=([0-9]+)/);\n                    if (captchaSid) {\n                      captchaSid = Number(captchaSid[1]);\n\n                      let err = {\n                        captcha_sid: captchaSid,\n                        captcha_img: captchaUrl\n                      };\n\n                      return _catchCaptcha({\n                        err,\n                        reCall: () => {\n                          return makeAuth(0, 0, 0, getData)\n                        },\n                        _needSolve,\n                        _resolverReCall,\n                        _rejecterReCall,\n                        data: getData,\n                        reject\n                      })\n                    } else {\n                      return reject(new Error('You have captcha error, but http client dont recognize where is captcha_sid parameter'))\n                    }\n                  } else {\n                    return reject(new Error('You have captcha error, but http client dont recognize where'))\n                  }\n                }\n\n                self._vk.debug(EVENT_RESPONSE_TYPE, {\n                  body: body,\n                  section: 'httpClient'\n                });\n\n                self._vk._debugger.push('response', body);\n                if (_needSolve) {\n                  return _resolverReCall(createClient(resolve, vHttp))\n                } else {\n                  return createClient(resolve, vHttp)\n                }\n              }).catch(err => reject(err))\n            }\n\n            return makeAuth(0, 0, 0, {\n              email: login,\n              pass,\n              captcha_sid: captchaSid,\n              captcha_key: captchaKey\n            })\n          })\n        }\n\n        async function createClient (r, vHttp) {\n          let HTTPClient = new HTTPEasyVKClient({\n            _jar: self._authjar,\n            vk: self._vk,\n            httpVk: vHttp,\n            config: self._config,\n            parser: self._parseResponse,\n            fetch: self.fetch\n          });\n\n          await HTTPClient.goDesktop();\n\n          return r(HTTPClient)\n        }\n      }, reject);\n    })\n  }\n}\n\nfunction getJarFetch (jar) {\n  return async function myFetch (url, options) {\n    if (!options) options = {};\n    if (!options.headers) options.headers = {};\n    if (!options.jar) options.jar = jar;\n\n    if (options.jar) {\n      let cookies = options.jar.getCookiesSync(url).join('; ');\n      options.headers = {\n        ...options.headers,\n        cookie: cookies\n      };\n    }\n\n    const opts = Object.assign({}, options, { redirect: 'manual' });\n\n    let res = await fetch__default['default'](url, opts);\n\n    return new Promise(async (resolve, reject) => {\n      if (res.headers.raw()['set-cookie']) { // Set cookies like browser\n        let cookies = res.headers.raw()['set-cookie'].map(toughCookie.Cookie.parse);\n        let promises = [];\n\n        if (options.jar) {\n          cookies.forEach(cookie => {\n            promises.push(new Promise((resolve, reject) => {\n              options.jar.setCookie(cookie, res.url, () => {\n                return resolve(true)\n              });\n            }));\n          });\n        }\n\n        await Promise.all(promises);\n      }\n\n      const isRedirect = (res.status === 303 || ((res.status === 301 || res.status === 302 || res.status === 307)));\n\n      if (isRedirect) {\n        const optsForGet = Object.assign({}, {\n          method: res.status === 307 ? options.method : 'GET',\n          body: res.status === 307 ? options.body : null,\n          follow: options.follow !== undefined ? options.follow - 1 : undefined,\n          agent: options.agent,\n          headers: options.headers\n        });\n\n        return myFetch(res.headers.get('location'), optsForGet)\n          .then((res) => {\n            return resolve(res)\n          })\n      }\n\n      return resolve(res)\n    })\n  }\n}\n\nvar errors = {\n  'session_not_valid': {\n    'code': 1,\n    'description': 'JSON in session file is not valid',\n    'ru_description': 'JSON файла сессии не имеет правильный формат'\n  },\n  'session_not_found': {\n    'code': 2,\n    'description': 'Session file is not found',\n    'ru_description': 'Файл сессии не найден'\n  },\n  'empty_session': {\n    'code': 3,\n    'description': 'Session file is empty',\n    'ru_description': 'Файл сессии пустой'\n  },\n  'empty_response': {\n    'code': 4,\n    'description': 'The server responsed us with empty data',\n    'ru_description': 'Ответ сервера пришел пустым'\n  },\n  'access_token_not_valid': {\n    'code': 5,\n    'description': 'Access token not valid',\n    'ru_description': 'Access токен не правильный'\n  },\n  'captcha_error': {\n    'code': 6,\n    'description': 'You need solve it and then put to params captcha_key, or use captchaHandler for solve it automatic',\n    'ru_description': 'Необходимо решить капчу, вставьте в параметр captcha_key код с картинки или используйте captchaHandler для того, чтобы решать капчу автоматически'\n  },\n  'method_deprecated': {\n    'code': 7,\n    'description': 'This method was deprecated',\n    'ru_description': 'Этот метод был удален'\n  },\n  'is_not_string': {\n    'code': 8,\n    'description': 'This parameter is not string',\n    'ru_description': 'Параметр должен быть строкой'\n  },\n  'live_error': {\n    'code': 10,\n    'description': \"Maybe VK algo was changed, but we can't parse count of views from this video\",\n    'ru_description': 'Может быть, алгоритмы ВКонтакте были изменены, но сейчас мы не можем получить количество просмотров этой странсляции'\n  },\n  'server_error': {\n    'code': 11,\n    'description': \"Server was down or we don't know what happaned\",\n    'ru_description': 'Сервер упал, или нам неизвестно, что произошло'\n  },\n  'invalid_response': {\n    'code': 12,\n    'description': 'Server responsed us with not a JSON format',\n    'ru_description': 'Сервер ответил не в формате JSON'\n  },\n  'is_not_object': {\n    'code': 13,\n    'description': 'This parameter is not an object',\n    'ru_description': 'Параметр должен быть объектом'\n  },\n  'upload_url_error': {\n    'code': 14,\n    'description': 'upload_url is not defied in vk response',\n    'ru_description': 'upload_url не указан в ответе сервера'\n  },\n  'is_not_function': {\n    'code': 15,\n    'description': 'This parameter is not a function',\n    'ru_description': 'Параметр должен быть функцией'\n  },\n  'is_not_number': {\n    'code': 16,\n    'description': 'This parameter is not a number',\n    'ru_description': 'Параметр должен быть числом'\n  },\n  'http_client': {\n    'parent_hash': 2000,\n    'errors': {\n      'need_auth': {\n        'code': 1,\n        'description': 'Need authenticate by password and username. This data not saving in session file!',\n        'ru_description': 'Вам нужно ввести параметр username и password, в сессии не сохранен пароль и логин'\n      },\n      'not_supported': {\n        'code': 2,\n        'description': 'Library does not support this authentication way... sorry',\n        'ru_description': 'Библиотека не поддерживает авторизацию через HTTP... к сожалению'\n      }\n    }\n  },\n  'longpoll_api': {\n    'parent_hash': 3000,\n    'errors': {\n      'not_connected': {\n        'code': 1,\n        'description': 'LongPoll not connected to the server',\n        'ru_description': 'LongPoll не подключен к серверу'\n      },\n      'event_already_have': {\n        'code': 2,\n        'description': 'This eventCode is already have listening',\n        'ru_description': 'Этот eventCode уже прослушивается'\n      }\n    }\n  },\n  'session': {\n    'parent_hash': 3100,\n    'errors': {\n      'need_path': {\n        'code': 1,\n        'description': 'You need set path for session file',\n        'ru_description': 'Вам нужно установить путь к файлу сессии'\n      }\n    }\n  },\n  'widgets': {\n    'parent_hash': 4000,\n    'errors': {\n      'live_not_streaming': {\n        'code': 1,\n        'description': 'The live video is not streaming now',\n        'ru_description': 'Live трансляция в данный момент не проводится'\n      }\n    }\n  }\n};\n\nclass EasyVKError extends Error {\n  constructor (error, name = '', data = {}) {\n    super(error.description);\n\n    let self = this;\n\n    self.error_code = error.code;\n    self.easyvk_error = true;\n    self.data = data;\n    self.name = name;\n  }\n}\n\nclass EasyVKErrors {\n  constructor () {\n    let self = this;\n    self._errors = errors;\n  }\n\n  error (name = '', data = {}, parent = '') {\n    let self = this;\n\n    name = String(name);\n    parent = String(parent);\n\n    if (self._errors[name]) {\n      let err;\n\n      if (self._errors[name]['errors'] && self._errors[name]['errors'][parent]) {\n        err = self._errors[name]['errors'][parent];\n        err.code += (self._errors[name]['parent_hash'] || -100000);\n      } else {\n        err = self._errors[name];\n      }\n\n      if (err[self._lang + '_description']) {\n        err.description = err[self._lang + '_description'];\n      }\n\n      let stringId = name;\n\n      if (self._errors[name]['errors'] && self._errors[name]['errors'][parent]) {\n        stringId = name + '\\\\' + parent;\n      }\n\n      return new EasyVKError(err, stringId, data)\n    }\n\n    let notHaveError = 'Not have this error in EasyVKErrors object!';\n\n    if (self._lang === 'ru') {\n      notHaveError = 'Данная ошибка не описана в объекте EasyVKErrors';\n    }\n\n    return new Error(notHaveError)\n  }\n\n  setLang (lang = 'ru') {\n    let self = this;\n\n    self._lang = String(lang);\n  }\n}\n\nvar easyVKErrors = new EasyVKErrors();\n\nconst authTypes = ['user', 'group', 'app'];\r\n\r\n/**\r\n *  EasyVK module. In this module creates session by your params\r\n *  And then you will get a EasyVK object (Session creates in the easyvkInit.js file)\r\n *  Author: @ciricc\r\n *  License: MIT\r\n *\r\n */\r\n\r\nclass EasyVK {\r\n  // Here will be created session\r\n  constructor (params, debuggerRun) {\r\n    this.params = params;\r\n\r\n    this._debugger = new RequestsDebugger(this);\r\n\r\n    this.debug = (t, d) => {\r\n      if (this.params.debug) {\r\n        this.params.debug.emit(t, d);\r\n      }\r\n    };\r\n\r\n    this.debuggerRun = debuggerRun || this._debugger;\r\n\r\n    this._errors = easyVKErrors;\r\n\r\n    this._errors.setLang(params.lang);\r\n  }\r\n\r\n  get debugger () {\r\n    console.warn('[Deprecated property warning] \\nvk.debugger property will be deprecated in next releases. Please, use new easyvk.Debugger() and set it up in the easyvk configuration like params.debug = myDebugger');\r\n    return this._debugger\r\n  }\r\n\r\n  set debugger (d) {\r\n    this._debugger = d;\r\n  }\r\n\r\n  async _init () {\r\n    let self = this;\r\n    return new Promise((resolve, reject) => {\r\n      let session, params;\r\n\r\n      session = {};\r\n      params = self.params;\r\n\r\n      if (params.proxy) {\r\n        let options = new url.URL(params.proxy);\r\n        let opts = {};\r\n\r\n        for (let i in options) {\r\n          opts[i] = options[i];\r\n        }\r\n\r\n        options = opts;\r\n\r\n        if (options.username || options.password) {\r\n          options.auth = options.username + ':' + options.password;\r\n        }\r\n\r\n        options.keepAlive = true;\r\n        options.keepAliveMsecs = 30000;\r\n\r\n        self.agent = new ProxyAgent__default['default'](options, true);\r\n      } else {\r\n        self.agent = new https__default['default'].Agent({\r\n          keepAlive: true,\r\n          keepAliveMsecs: 30000\r\n        });\r\n      }\r\n\r\n      let defaultDataParams = {\r\n        client_id: params.client_id || configuration.WINDOWS_CLIENT_ID,\r\n        client_secret: params.client_secret || configuration.WINDOWS_CLIENT_SECRET,\r\n        v: params.api_v,\r\n        lang: params.lang === 'undefined' ? 'ru' : params.lang,\r\n        '2fa_supported': 1\r\n      };\r\n\r\n      if (params.captcha_key) {\r\n        defaultDataParams.captcha_sid = params.captcha_sid;\r\n        defaultDataParams.captcha_key = params.captcha_key;\r\n      }\r\n\r\n      if (params.code && params.code.toString().length !== 0) {\r\n        defaultDataParams.code = params.code;\r\n      }\r\n\r\n      if (!params.captchaHandler || !Object.prototype.toString.call(params.captchaHandler).match(/Function/)) {\r\n        params.captchaHandler = (thread) => {\r\n          throw self._error('captcha_error', {\r\n            captcha_key: thread.captcha_key,\r\n            captcha_sid: thread.captcha_sid,\r\n            captcha_img: thread.captcha_img\r\n          })\r\n        };\r\n      }\r\n\r\n      self.captchaHandler = params.captchaHandler;\r\n\r\n      /* if user wants to get data from file, need get data from file\r\n         or generate this file automatically with new data */\r\n\r\n      if (!params.reauth) {\r\n        let data;\r\n\r\n        try {\r\n          data = fs__default['default'].readFileSync(params.session_file);\r\n        } catch (e) {\r\n          data = false;\r\n        }\r\n\r\n        if (data) {\r\n          try {\r\n            data = JSON.parse(data.toString());\r\n\r\n            if (\r\n              (data.access_token && data.access_token === params.access_token) || // If config token is session token\r\n              (params.username && params.username === data.username) ||\r\n              (params.client_id && params.client_id === data.client_id && !params.access_token && !params.username)// or if login given, it need be same\r\n            ) {\r\n              if (data.access_token) {\r\n                session = new EasyVKSession(self, data);\r\n                self.session = session;\r\n                return initResolve(self)\r\n              } else {\r\n                if (!(params.username && params.password) && !params.access_token && !params.client_id && params.client_secret) {\r\n                  return reject(self._error('empty_session'))\r\n                }\r\n              }\r\n            }\r\n          } catch (e) {\r\n            if (!(params.username && params.password) && !params.access_token) {\r\n              return reject(self._error('session_not_valid'))\r\n            }\r\n          }\r\n        } else {\r\n          if (!(params.username && params.password) && !params.access_token && !(params.client_id && params.client_secret)) {\r\n            return reject(self._error('empty_session'))\r\n          }\r\n        }\r\n      }\r\n\r\n      if (!session.access_token) { // If session file contents access_token, try auth with it\r\n        if (params.access_token) {\r\n          session.access_token = params.access_token;\r\n          if (self.params.authType) {\r\n            let { authType } = self.params;\r\n            if (authType === authTypes[0]) {\r\n              initToken();\r\n            } else if (authType === authTypes[1]) {\r\n              groupToken();\r\n            } else if (authType === authTypes[2]) {\r\n              appToken();\r\n            } else {\r\n              initToken();\r\n            }\r\n          } else {\r\n            initToken();\r\n          }\r\n        } else if (params.username) {\r\n          // Try get access_token with auth\r\n          let getData = {\r\n            username: params.username,\r\n            password: params.password,\r\n            grant_type: 'password',\r\n            device_id: '',\r\n            libverify_support: 1,\r\n            scope: 'all',\r\n            v: '5.122'\r\n          };\r\n\r\n          makeAuth(0, 0, 0, getData); // пиздец\r\n        } else if (params.client_id) {\r\n          let getData = {\r\n            grant_type: 'client_credentials'\r\n          };\r\n\r\n          getData = prepareRequest(getData);\r\n\r\n          let url = configuration.BASE_OAUTH_URL + 'token/?' + getData;\r\n\r\n          let headers = {\r\n            'User-Agent': params.userAgent\r\n          };\r\n\r\n          self.debug(EVENT_REQUEST_TYPE, {\r\n            url: url,\r\n            query: getData,\r\n            method: 'GET'\r\n          });\r\n\r\n          fetch__default['default'](url, {\r\n            agent: self.agent,\r\n            headers: headers\r\n          }).then(async (res) => {\r\n            if (res.statusText.match(/proxy/gi)) {\r\n              let e = new Error('Invalid response body: no OK statusText (maybe troubles with proxy)');\r\n              e.type = 'invalid-json';\r\n              return reject(e)\r\n            }\r\n\r\n            self.debug(EVENT_RESPONSE_TYPE, { body: res });\r\n\r\n            if (self.debuggerRun) {\r\n              try {\r\n                self.debuggerRun.push('response', res);\r\n              } catch (e) {\r\n                return reject(new Error('DebuggerRun is not setuped correctly'))\r\n              }\r\n            }\r\n\r\n            res = await res.json();\r\n            return completeSession(null, res, {\r\n              credentials_flow: 1,\r\n              client_id: params.client_id\r\n            }).catch((e) => {\r\n              if (params.onlyInstance) {\r\n                self.session = new EasyVKSession(self, {\r\n                  access_token: null\r\n                });\r\n\r\n                initResolve(self);\r\n              } else {\r\n                return reject(e)\r\n              }\r\n            })\r\n          }).catch(e => { console.error(e); reject(e); });\r\n        }\r\n      }\r\n\r\n      async function makeAuth (_needSolve, _resolverReCall, _rejecterReCall, getData) {\r\n        let queryData = prepareRequest(getData);\r\n        let url = configuration.BASE_OAUTH_URL + 'token/?' + queryData;\r\n\r\n        self.debug(EVENT_REQUEST_TYPE, {\r\n          url: url,\r\n          query: queryData,\r\n          method: 'GET'\r\n        });\r\n\r\n        return fetch__default['default'](url, {\r\n          headers: {\r\n            'User-Agent': params.userAgent\r\n          },\r\n          agent: self.agent\r\n        }).then(async res => {\r\n          if (res.statusText.match(/proxy/gi)) {\r\n            let e = new Error('Invalid response body: no OK statusText (maybe troubles with proxy)');\r\n            e.type = 'invalid-json';\r\n            return reject(e)\r\n          }\r\n\r\n          res = await res.text();\r\n\r\n          self.debug(EVENT_RESPONSE_TYPE, { body: res });\r\n\r\n          if (self.debuggerRun) {\r\n            try {\r\n              self.debuggerRun.push('response', res);\r\n            } catch (e) {\r\n              return reject(new Error('DebuggerRun is not setuped correctly'))\r\n            }\r\n          }\r\n\r\n          try {\r\n            res = JSON.parse(res);\r\n          } catch (e) {\r\n            let _e = new Error('Invalid json sent');\r\n            _e.type = 'invalid-json';\r\n            return reject(_e)\r\n          }\r\n\r\n          return completeSession(null, res, {\r\n            user_id: null\r\n          }).catch(async (err) => {\r\n            try {\r\n              self._catchCaptcha({ err,\r\n                reCall: () => {\r\n                  return makeAuth(0, 0, 0, getData)\r\n                },\r\n                _needSolve,\r\n                _resolverReCall,\r\n                _rejecterReCall,\r\n                data: getData,\r\n                reject });\r\n            } catch (e) {\r\n              if (err.validation_sid && err.validation_type && String(err.validation_type).match('sms')) {\r\n                let validatePhoneData = {\r\n                  https: 1,\r\n                  lang: defaultDataParams.lang,\r\n                  v: defaultDataParams.v,\r\n                  client_id: defaultDataParams.client_id,\r\n                  client_secret: defaultDataParams.client_secret,\r\n                  api_id: 2274003,\r\n                  libverify_support: 1,\r\n                  sid: err.validation_sid\r\n                };\r\n                await StaticMethods.call('auth.validatePhone', validatePhoneData, 'post', self.debuggerRun, self.agent)\r\n                  .catch(e => {});\r\n              }\r\n\r\n              reject(err);\r\n            }\r\n          })\r\n        }).catch(e => {\r\n          console.error(e);\r\n          reject(e);\r\n        })\r\n      }\r\n\r\n      function completeSession (err, res, object = {}) {\r\n        return new Promise((resolve, reject) => {\r\n          let vkr = prepareResponse(err, res);\r\n          let json = generateSessionFromResponse(vkr, reject);\r\n\r\n          if (json) {\r\n            session = json;\r\n            Object.assign(session, object);\r\n            initToken();\r\n            resolve(true);\r\n          } else {\r\n            return reject(self._error('empty_response', {\r\n              response: vkr\r\n            }))\r\n          }\r\n        })\r\n      }\r\n\r\n      function generateSessionFromResponse (vkr, rej) {\r\n        let json = StaticMethods.checkJSONErrors(vkr, rej || reject);\r\n\r\n        if (json) {\r\n          json = JSON.parse(JSON.stringify(json));\r\n          json.user_id = null;\r\n\r\n          return json\r\n        }\r\n      }\r\n\r\n      function prepareRequest (getDataObject = {}) {\r\n        let Obj = Object.assign(getDataObject, defaultDataParams);\r\n\r\n        Obj = StaticMethods.urlencode(Obj);\r\n\r\n        if (self.debuggerRun) {\r\n          try {\r\n            self.debuggerRun.push('request', configuration.BASE_OAUTH_URL + 'token/?' + Obj);\r\n          } catch (e) {\r\n            return reject(new Error('DebuggerRun is not setuped correctly'))\r\n          }\r\n        }\r\n\r\n        return Obj\r\n      }\r\n\r\n      function prepareResponse (err, res) {\r\n        if (err) {\r\n          return reject(new Error(err))\r\n        }\r\n\r\n        return res\r\n      }\r\n\r\n      function initToken () {\r\n        if (!session.user_id && !session.group_id) {\r\n          let token, getData;\r\n\r\n          token = session.access_token || params.access_token;\r\n\r\n          if (session.credentials_flow) {\r\n            self.__credentials_flow_type = true;\r\n            self.session = session;\r\n\r\n            initResolve(self);\r\n          } else {\r\n            getData = {\r\n              access_token: token,\r\n              v: params.api_v,\r\n              fields: params.fields.join(',')\r\n            };\r\n\r\n            let url = configuration.BASE_CALL_URL + 'users.get?' + prepareRequest(getData);\r\n\r\n            self.debug(EVENT_REQUEST_TYPE, {\r\n              url: url + '?' + StaticMethods.urlencode(getData),\r\n              query: getData,\r\n              method: 'GET'\r\n            });\r\n\r\n            return fetch__default['default'](url, {\r\n              agent: self.agent,\r\n              headers: {\r\n                'User-agent': params.userAgent\r\n              }\r\n            }).then(async (res) => {\r\n              if (res.statusText.match(/proxy/gi)) {\r\n                let e = new Error('Invalid response body: no OK statusText (maybe troubles with proxy)');\r\n                e.type = 'invalid-json';\r\n                return reject(e)\r\n              }\r\n\r\n              self.debug(EVENT_RESPONSE_TYPE, { body: res });\r\n\r\n              if (self.debuggerRun) {\r\n                try {\r\n                  self.debuggerRun.push('response', res);\r\n                } catch (e) {\r\n                  return reject(new Error('DebuggerRun is not setuped correctly'))\r\n                }\r\n              }\r\n\r\n              res = await res.json();\r\n\r\n              let vkr = prepareResponse(null, res);\r\n\r\n              if (vkr) {\r\n                let json = StaticMethods.checkJSONErrors(vkr, reject);\r\n                if (json) {\r\n                  if (Array.isArray(json) && json.length === 0) {\r\n                    session = {\r\n                      access_token: session.access_token\r\n                    };\r\n\r\n                    if (self.params.authType && self.params.authType === authTypes[0]) {\r\n                      return reject(new Error('Is not a user token! Or this token is not valid (expired)'))\r\n                    } else {\r\n                      appToken();\r\n                    }\r\n                  } else {\r\n                    session = {\r\n                      access_token: session.access_token\r\n                    };\r\n\r\n                    session.user_id = json[0].id;\r\n                    session.first_name = json[0].first_name;\r\n                    session.last_name = json[0].last_name;\r\n                    session.username = params.username;\r\n\r\n                    for (let i = 0; i < params.fields.length; i++) {\r\n                      if (json[0][params.fields[i]] && session[params.fields[i]] === undefined) {\r\n                        session[params.fields[i]] = json[0][params.fields[i]];\r\n                      }\r\n                    }\r\n\r\n                    self.session = new EasyVKSession(self, session);\r\n\r\n                    initResolve(self);\r\n                  }\r\n                }\r\n              } else {\r\n                return reject(self._error('empty_response', {\r\n                  response: vkr,\r\n                  where: 'in auth with token (user)'\r\n                }))\r\n              }\r\n            }).catch(e => reject(e))\r\n          }\r\n        } else {\r\n          self.session = session;\r\n          initResolve(self);\r\n        }\r\n      }\r\n\r\n      function appToken () {\r\n        let getData;\r\n\r\n        let data = {\r\n          access_token: params.access_token,\r\n          v: params.api_v,\r\n          fields: params.fields.join(',')\r\n        };\r\n\r\n        if (params.lang !== undefined) data.lang = params.lang;\r\n\r\n        getData = data;\r\n\r\n        if (self.debuggerRun) {\r\n          try {\r\n            self.debuggerRun.push('request', configuration.BASE_CALL_URL + 'apps.get?' + StaticMethods.urlencode(data));\r\n          } catch (e) {\r\n            // Ignore\r\n          }\r\n        }\r\n\r\n        let url = configuration.BASE_CALL_URL + 'apps.get?' + prepareRequest(getData);\r\n\r\n        self.debug(EVENT_REQUEST_TYPE, {\r\n          url,\r\n          query: getData,\r\n          method: 'GET'\r\n        });\r\n\r\n        fetch__default['default'](url, {\r\n          agent: self.agent,\r\n          headers: {\r\n            'User-Agent': params.userAgent\r\n          }\r\n        }).then(async (res) => {\r\n          if (res.statusText.match(/proxy/gi)) {\r\n            let e = new Error('Invalid response body: no OK statusText (maybe troubles with proxy)');\r\n            e.type = 'invalid-json';\r\n            return reject(e)\r\n          }\r\n\r\n          let vkr = await res.json();\r\n          if (self.debuggerRun) {\r\n            try {\r\n              self.debuggerRun.push('response', vkr);\r\n            } catch (e) {\r\n              // Ignore\r\n            }\r\n          }\r\n\r\n          self.debug(EVENT_RESPONSE_TYPE, { body: vkr });\r\n\r\n          if (vkr) {\r\n            let json;\r\n\r\n            json = StaticMethods.checkJSONErrors(vkr, (e) => {\r\n              if (e.error_code === 5 || e.error_code === 27 || e.error_code === 28) {\r\n                if (self.params.authType && self.params.authType === authTypes[2]) {\r\n                  return reject(new Error('Is not an application token! Or this token is not valid (expired)'))\r\n                } else {\r\n                  groupToken();\r\n                }\r\n              } else {\r\n                reject(e);\r\n              }\r\n            });\r\n\r\n            if (json) {\r\n              json = json.items[0];\r\n\r\n              if (Array.isArray(json) && json.length === 0) {\r\n                if (self.params.authType && self.params.authType === authTypes[2]) {\r\n                  return reject(new Error('Is not an application token! Or this token is not valid (expired)'))\r\n                } else {\r\n                  groupToken();\r\n                }\r\n              } else {\r\n                session.app_id = json.id;\r\n                session.app_title = json.title;\r\n                session.app_type = json.type;\r\n                session.app_icons = [json.icon_75, json.icon_150];\r\n                session.author = {\r\n                  id: json.author_id\r\n                };\r\n\r\n                session.app_members = json.members_count;\r\n\r\n                for (let i = 0; i < params.fields.length; i++) {\r\n                  if (json[params.fields[i]]) {\r\n                    session[params.fields[i]] = json[params.fields[i]];\r\n                  }\r\n                }\r\n\r\n                self.session = new EasyVKSession(self, session);\r\n\r\n                initResolve(self);\r\n              }\r\n            }\r\n          } else {\r\n            return reject(self._error('empty_response', {\r\n              response: vkr,\r\n              where: 'in auth with token (group)'\r\n            }))\r\n          }\r\n        }).catch(e => reject(e));\r\n      }\r\n\r\n      function groupToken () {\r\n        let getData;\r\n\r\n        getData = {\r\n          access_token: params.access_token,\r\n          v: params.api_v,\r\n          lang: params.lang || 'ru',\r\n          fields: params.fields.join(',')\r\n        };\r\n\r\n        if (self.debuggerRun) {\r\n          try {\r\n            self.debuggerRun.push('request', configuration.BASE_CALL_URL + 'groups.getById?' + StaticMethods.urlencode(getData));\r\n          } catch (e) {\r\n            // Ignore\r\n          }\r\n        }\r\n\r\n        let url = configuration.BASE_CALL_URL + 'groups.getById?' + prepareRequest(getData);\r\n\r\n        self.debug(EVENT_REQUEST_TYPE, {\r\n          url,\r\n          query: getData,\r\n          method: 'GET'\r\n        });\r\n\r\n        fetch__default['default'](url, {\r\n          agent: self.agent,\r\n          headers: {\r\n            'User-Agent': params.userAgent\r\n          }\r\n        }).then(async (res) => {\r\n          if (res.statusText.match(/proxy/gi)) {\r\n            let e = new Error('Invalid response body: no OK statusText (maybe troubles with proxy)');\r\n            e.type = 'invalid-json';\r\n            return reject(e)\r\n          }\r\n\r\n          let vkr = await res.json();\r\n\r\n          if (self.debuggerRun) {\r\n            try {\r\n              self.debuggerRun.push('response', vkr);\r\n            } catch (e) {\r\n              // Ignore\r\n            }\r\n          }\r\n\r\n          self.debug(EVENT_RESPONSE_TYPE, { body: vkr });\r\n\r\n          if (vkr) {\r\n            let json = StaticMethods.checkJSONErrors(vkr, (e) => {\r\n              if ((e.error_code === 100 || e.error_code === 5) && self.params.authType && self.params.authType === authTypes[1]) {\r\n                return reject(new Error('Is not a group token! Or this token is not valid (expired)'))\r\n              } else {\r\n                return reject(new Error('EasyVK can not recognize this token authentication type'))\r\n              }\r\n            });\r\n\r\n            if (json) {\r\n              if (Array.isArray(json) && json.length === 0) {\r\n                return reject(self._error('access_token_not_valid'))\r\n              } else {\r\n                session = {\r\n                  access_token: session.access_token\r\n                };\r\n\r\n                session.group_id = json[0].id;\r\n                session.group_name = json[0].name;\r\n                session.group_screen = json[0].screen_name;\r\n\r\n                for (let i = 0; i < params.fields.length; i++) {\r\n                  if (json[0][params.fields[i]]) {\r\n                    session[params.fields[i]] = json[0][params.fields[i]];\r\n                  }\r\n                }\r\n\r\n                self.session = new EasyVKSession(self, session);\r\n\r\n                initResolve(self);\r\n              }\r\n            }\r\n          } else {\r\n            return reject(self._error('empty_response', {\r\n              response: vkr,\r\n              where: 'in auth with token (group)'\r\n            }))\r\n          }\r\n        }).catch(e => reject(e));\r\n      }\r\n\r\n      function getConnectedUtil (UtilObject) {\r\n        if (typeof UtilObject === 'function') return new UtilObject(self)\r\n        return UtilObject\r\n      }\r\n\r\n      function connectUtil (prop, util, connectBool) {\r\n        if (connectBool === undefined) {\r\n          connectBool = params.utils[prop] !== false;\r\n        }\r\n        if (connectBool) {\r\n          if (Array.isArray(util)) {\r\n            let utilsWrapper = {};\r\n\r\n            util.forEach(util => {\r\n              utilsWrapper[util[0]] = getConnectedUtil(util[1]);\r\n            });\r\n\r\n            Object.defineProperty(self, prop, { value: utilsWrapper });\r\n          } else {\r\n            Object.defineProperty(self, prop, { value: getConnectedUtil(util) });\r\n          }\r\n        } else {\r\n          Object.defineProperty(self, prop, {\r\n            get: () => {\r\n              throw new Error(`This util not connected. Make params.utils[${prop}] = true in easyvk options`)\r\n            }\r\n          });\r\n        }\r\n      }\r\n\r\n      function initResolve (s) {\r\n        if (params.clear) {\r\n          fs__default['default'].writeFileSync(params.session_file, '{}');\r\n        }\r\n\r\n        let httpConnetBool = (params.utils.http !== false && self.session.user_id) || params.utils.http === true;\r\n        let botsConnectBool = (params.utils.bots !== false && (self.session.group_id || self.session.user_id)) || params.utils.bots === true;\r\n        let longpollConnectBool = (params.utils.longpoll !== false && (self.session.user_id)) || params.utils.longpoll === true;\r\n\r\n        connectUtil('uploader', EasyVKUploader);\r\n        connectUtil('widgets', Widgets);\r\n        connectUtil('streamingAPI', StreamingAPIConnector);\r\n        connectUtil('callbackAPI', CallbackAPIConnector);\r\n        connectUtil('http', HTTPEasyVK, httpConnetBool);\r\n        connectUtil('longpoll', LongPollConnector, longpollConnectBool);\r\n\r\n        connectUtil('bots', [\r\n          ['longpoll', LongPollConnector$1],\r\n          ['cb', self.callbackAPI ? self.callbackAPI : CallbackAPIConnector]\r\n        ], botsConnectBool);\r\n\r\n        self._static = new StaticMethods({\r\n          userAgent: params.userAgent,\r\n          debug: self.debug\r\n        }, self.params);\r\n\r\n        self.config = configuration;\r\n        // Here is a middlewares will be saved\r\n        self.middleWares = [async (data) => {\r\n          let next = data.next;\r\n          data.next = undefined;\r\n          await next(data);\r\n        }];\r\n\r\n        self._middlewaresController = new MiddlewaresMechanism(self);\r\n\r\n        // http module for http requests from cookies and jar session\r\n\r\n        // Re init all cases\r\n        self.session = new EasyVKSession(self, self.session);\r\n\r\n        if (params.save_session) {\r\n          return self.session.save().then(() => {\r\n            return resolve(s)\r\n          }).catch(reject)\r\n        }\r\n\r\n        return resolve(s)\r\n      }\r\n    })\r\n  }\r\n\r\n  async post (methodName, data, other) {\r\n    let self = this;\r\n\r\n    return new Promise((resolve, reject) => {\r\n      return self.call(methodName, data, 'post', other).then(resolve, reject)\r\n    })\r\n  }\r\n\r\n  /**\r\n *\r\n *Function for calling to methods and get anything form VKontakte API\r\n *See more: https://vk.com/dev/methods\r\n *\r\n *@param {String} methodName - Is just a method name which you need to call and get data,\r\n *  for example: \"messages.send\", \"users.get\"\r\n *@param {Object} [data={}] - Is data object for query params, it will be serialized from object to uri string.\r\n *  If vk.com asks a parameters, you can send they.\r\n *  (Send access_token to this from session is not necessary, but also you can do this)\r\n *@param {String} [methodType=get] - Is type for query, [\"post\", \"delete\", \"get\", \"put\"]\r\n *\r\n *  @return {Promise}\r\n *  @promise Call to a method, send request for VKontakte API\r\n *  @resolve {Object} - Standard object like {vk: EasyVK, vkr: Response}\r\n *  @reject {Error} - vk.com error response or node-fetch module error\r\n     *\r\n */\r\n\r\n  async call (methodName, data = {}, methodType = 'get', other = {}) {\r\n    let self = this;\r\n\r\n    let {\r\n      middleWare\r\n    } = other;\r\n\r\n    let highloadStack = null;\r\n\r\n    return new Promise((resolve, reject) => {\r\n      async function reCall (_needSolve, _resolverReCall, _rejecterReCall) {\r\n        methodType = String(methodType).toLowerCase();\r\n\r\n        if (methodType !== 'post') {\r\n          methodType = 'get';\r\n        }\r\n\r\n        if (!StaticMethods.isObject(data)) reject(new Error('Data must be an object'));\r\n        if (!data.access_token) data.access_token = self.session.access_token;\r\n        if (!data.v) data.v = self.params.api_v;\r\n\r\n        if (!data.captcha_sid && self.params.captcha_sid) data.captcha_sid = self.params.captcha_sid;\r\n        if (!data.captcha_key && self.params.captcha_key) data.captcha_key = self.params.captcha_key;\r\n\r\n        if (!data.lang && self.params.lang && self.params.lang !== 'undefined') {\r\n          data.lang = self.params.lang || 'ru';\r\n        }\r\n\r\n        if (middleWare && typeof middleWare === 'function') {\r\n          data = await middleWare(data);\r\n        }\r\n\r\n        let thread = {\r\n          methodType,\r\n          method: methodName,\r\n          query: data,\r\n          _needSolve\r\n        };\r\n\r\n        let FromMiddleWare = await self._middlewaresController.run(thread);\r\n\r\n        methodName = FromMiddleWare.method;\r\n        methodType = FromMiddleWare.methodType;\r\n\r\n        data = FromMiddleWare.query;\r\n\r\n        return self._static.call(methodName, data, methodType, self._debugger, self.agent, {\r\n          signal: other.signal,\r\n          userAgent: self.params.userAgent\r\n        }).then((vkr) => {\r\n          if (_needSolve) {\r\n            try {\r\n              _resolverReCall(true);\r\n            } catch (e) {}\r\n          }\r\n\r\n          if (highloadStack) {\r\n            highloadStack.forEach((stack, i) => {\r\n              if (i === highloadStack.length - 1) { return resolve(vkr) }\r\n              return stack.resolve(vkr)\r\n            });\r\n          } else {\r\n            return resolve(vkr)\r\n          }\r\n        }).catch((err) => {\r\n          try {\r\n            if (err.highload) {\r\n              data = {\r\n                access_token: err.highload.token || self.params.access_token,\r\n                ...(err.highload.data)\r\n              };\r\n\r\n              highloadStack = err.highload.stack;\r\n\r\n              methodName = 'execute';\r\n            }\r\n\r\n            self._catchCaptcha({\r\n              err,\r\n              reCall,\r\n              _needSolve,\r\n              _resolverReCall,\r\n              _rejecterReCall,\r\n              data,\r\n              reject\r\n            });\r\n          } catch (e) {\r\n            if (highloadStack) {\r\n              highloadStack.forEach((stack, i) => {\r\n                if (i === highloadStack.length - 1) { return reject(err) }\r\n                return stack.reject(err)\r\n              });\r\n            } else {\r\n              reject(err);\r\n            }\r\n          }\r\n        })\r\n      }\r\n\r\n      reCall();\r\n    })\r\n  }\r\n\r\n  _catchCaptcha (params = {}) {\r\n    let self = this;\r\n\r\n    let { err, reCall, _needSolve, _rejecterReCall, data, reject } = params;\r\n\r\n    let vkr = JSON.parse(err.message);\r\n\r\n    if (vkr.error === 'need_captcha' || vkr.error.error_code === 14) {\r\n      if (_needSolve) {\r\n        try {\r\n          _rejecterReCall({\r\n            error: false,\r\n            reCall: () => {\r\n              return reCall()\r\n            }\r\n          });\r\n        } catch (e) {}\r\n\r\n        return\r\n      }\r\n\r\n      // Captcha error, handle it\r\n      const captchaSid = vkr.error.captcha_sid || vkr.captcha_sid;\r\n      const captchaImg = vkr.error.captcha_img || vkr.captcha_img;\r\n      let paramsForHandler = { captcha_sid: captchaSid, captcha_img: captchaImg, vk: self, params: data };\r\n\r\n      paramsForHandler.resolve = (captchaKey) => {\r\n        return new Promise((resolve, reject) => {\r\n          data.captcha_key = captchaKey;\r\n          data.captcha_sid = captchaSid;\r\n\r\n          try {\r\n            reCall('NEED SOLVE', resolve, reject, data);\r\n          } catch (errorRecall) { /* Need pass it */ }\r\n        })\r\n      };\r\n\r\n      self.captchaHandler(paramsForHandler);\r\n    } else {\r\n      reject(err);\r\n    }\r\n  }\r\n\r\n  // Ony for mer\r\n  _error (...args) {\r\n    let self = this;\r\n    return self._errors.error(...args)\r\n  }\r\n}\r\n\r\nconst is = (obj1, obj2) => Object.getPrototypeOf(obj1).constructor.name === obj2;\r\n\r\nconst classes = {\r\n  VKResponse: 'VKResponse',\r\n  VKResponseError: 'VKResponseError',\r\n  EasyVKError: 'EasyVKError'\r\n};\r\n\r\nconst version = '2.8.2';\r\nconst callbackAPI = new CallbackAPIConnector({});\r\nconst streamingAPI = new StreamingAPIConnector({});\n\nconst debuggerRun = new RequestsDebugger(Boolean(false));\nconst authTypes$1 = ['user', 'group', 'app'];\n\n/**\n *\n *  This function check all parameters\n *  @see createSession()\n *  @return {Promise}\n *  @promise Check errors\n *  @resolve {Object} changed user parameters for create session\n *  @reject {Error} auth error or just an error from responses\n *\n */\n\nasync function checkInitParams (params = {}) {\n  return new Promise((resolve, reject) => {\n    if (params.save !== undefined) {\n      params.save_session = params.save;\n    }\n\n    if (params.token !== undefined) {\n      params.access_token = params.token;\n    }\n\n    if (params.v !== undefined) {\n      params.api_v = params.v;\n    }\n\n    if (params.captchaSid !== undefined) {\n      params.captcha_sid = params.captchaSid;\n    }\n\n    if (params.captchaKey !== undefined) {\n      params.captcha_key = params.captchaKey;\n    }\n\n    if (params.clientId !== undefined) {\n      params.client_id = params.clientId;\n    }\n\n    if (params.clientSecret !== undefined) {\n      params.client_secret = params.clientSecret;\n    }\n\n    if (params.sessionFile !== undefined) {\n      params.session_file = params.sessionFile;\n    }\n\n    if (params.save_session !== false) {\n      params.save_session = configuration.save_session;\n    }\n\n    if (params.session_file) {\n      if (!StaticMethods.isString(params.session_file)) {\n        return reject(new Error('The session_file must be a string'))\n      }\n    } else {\n      params.session_file = configuration.session_file;\n    }\n\n    if (params.api_v && params.api_v !== configuration.api_v) {\n      if (isNaN(params.api_v.toString())) {\n        return reject(new Error('The api_v parameter must be numeric'))\n      } else if (Number(params.api_v) < 5) {\n        return reject(new Error('The api_v parameter must be more then 5.0 version, other not support'))\n      }\n    } else {\n      params.api_v = configuration.api_v;\n    }\n\n    if (params.captcha_key && !params.captcha_sid) {\n      return reject(new Error('You puted captcha_key but not using captcha_sid parameter'))\n    } else if (!params.captcha_key && params.captcha_sid) {\n      return reject(new Error('You puted captcha_sid but not puted captcha_key parameter'))\n    } else if (params.captcha_key && params.captcha_sid) {\n      if (isNaN(params.captcha_sid.toString())) {\n        return reject(new Error('The captcha_sid must be numeric'))\n      }\n    }\n\n    if (params.reauth !== true) {\n      params.reauth = configuration.reauth;\n    }\n\n    if (params.reauth) {\n      if (params.access_token && params.username) {\n        return reject(new Error('Select only one way auth: access_token XOR username'))\n      }\n\n      if (params.access_token) {\n        if (!StaticMethods.isString(params.access_token)) {\n          return reject(new Error('The access_token must be a string'))\n        }\n      }\n\n      if (params.username && !params.password) {\n        return reject(new Error('Put password if you want aut with username'))\n      }\n\n      if (params.username && params.password) {\n        params.username = params.username.toString();\n        params.password = params.password.toString();\n      }\n    }\n\n    if (!params.client_id || !params.client_secret) {\n      params.client_id = configuration['ANDROID_CLIENT_ID'];\n      params.client_secret = configuration['ANDROID_CLIENT_SECRET'];\n    }\n\n    params.lang = String(params.lang);\n\n    if (!params.lang) {\n      params.lang = 'ru';\n    }\n\n    if (StaticMethods.isString(params.fields)) {\n      params.fields = params.fields.split(',');\n    }\n\n    if (!params.fields || !Array.isArray(params.fields)) {\n      params.fields = [];\n    } else {\n      params.fields = params.fields.map(a => String(a));\n    }\n\n    if (!params.userAgent) {\n      params.userAgent = configuration.DEFAULT_USER_AGENT;\n    }\n\n    if (!params.utils) {\n      params.utils = configuration.DEFAULT_UTILS;\n    }\n\n    if (!params.mode) {\n      params.mode = '';\n    }\n\n    if (StaticMethods.isString(params.mode)) {\n      params.mode = {\n        name: params.mode\n      };\n    }\n\n    if (!params.mode.name) {\n      params.mode.name = 'default';\n    }\n\n    if (params.authType && authTypes$1.indexOf(params.authType) === -1) {\n      return reject(new Error('Auth type must be contents in ' + JSON.stringify(authTypes$1)))\n    } else if (params.authType && !params.access_token) {\n      params.authType = null;\n    }\n\n    if (params.debug && !(params.debug instanceof Debugger)) return reject(new Error('Debug parameter must instances only from Debugger class'))\n\n    if (params.onlyInstance !== true) params.onlyInstance = false;\n\n    resolve(params);\n  })\n}\n\n/*\n *  This function check you easyVK(params) parameters\n *  @param {Object} params - Settings for authentication, for create session\n *  @param {Boolean} [params.save_session=true] - If is true then session will be saved in params.session_file file\n *  @param {(String|Number)} [params.api_v=5.73] - API version for all requests, I am\n *  recommend you use API version >= 5\n *  @param {String} [params.access_token=] - Your access token, group or user. If is user token then\n *  easyVK will get user_id for you, else [group_id, screen_name, group_name] for session file\n *  @param {String|Number} [params.username] - Your login for authenticate, your_email@example.com or +7(916)7888886 (example)\n *  It need only if you puted params.password and not puted params.access_token parameter\n *  @param {String|Number} [params.password] - Your password for user account, it will be authenticated\n *  from windows app_id, from official client. I am not saving your data for hack, all is opened for you\n *  @param {Boolean} [params.reauth=false] - Need ignore session file and log in with newest parameters?\n *  @param {String} [params.session_file=.vksession] - Path for your session file, i am recommend you to use the path module\n *  for create path.join(__dirname, '.session-vk')\n *  @param {String|Number} [params.code] - Is your code from application which generate your 2-factor-auth\n *  code\n *  @param {String} [params.captcha_key] - Is your code from captcha, only if you got an error and not solved it\n *  before\n *  @param {String|Number} [params.captcha_sid] - Is a captcha id from captcha error, if you got it and not solved before\n *  @param {Function|Async Function} [params.captchaHandler] - Is a captcha Handler function for\n *  handle all captcha errors\n *\n *  @promise Authenticate you and create session\n *  @resolve {Object} EasyVK object, which contents session and all methods\n *  for work with VKontakte API\n *\n */\n\nconst Auth = async (params = {}) => {\n  return checkInitParams(params).then((p) => {\n    let vk = new EasyVK(p, debuggerRun);\n    return vk._init()\n  })\n};\n\n// That's realy bad :(\nAuth.static = StaticMethods;\nAuth.debuggerRun = debuggerRun;\nAuth.Debugger = Debugger;\nAuth.callbackAPI = callbackAPI;\nAuth.call = StaticMethods.call;\nAuth.randomId = StaticMethods.randomId;\nAuth.createExecute = StaticMethods.createExecute;\nAuth.authTypes = authTypes$1;\nAuth.version = version;\nAuth.streamingAPI = streamingAPI;\nAuth.is = is;\nAuth.class = classes;\nAuth.AbortController = AbortController;\n\nmodule.exports = Auth;\n"]},"metadata":{},"sourceType":"script"}